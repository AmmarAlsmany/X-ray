/*
  Face-API
  homepage: <https://github.com/vladmandic/face-api>
  author: <https://github.com/vladmandic>'
*/

var OU=Object.create;var r0=Object.defineProperty;var PU=Object.getOwnPropertyDescriptor;var LU=Object.getOwnPropertyNames;var MU=Object.getPrototypeOf,zU=Object.prototype.hasOwnProperty;var br=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports),Ut=(r,t)=>{for(var e in t)r0(r,e,{get:t[e],enumerable:!0})},BU=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of LU(t))!zU.call(r,o)&&o!==e&&r0(r,o,{get:()=>t[o],enumerable:!(n=PU(t,o))||n.enumerable});return r};var El=(r,t,e)=>(e=r!=null?OU(MU(r)):{},BU(t||!r||!r.__esModule?r0(e,"default",{value:r,enumerable:!0}):e,r));var T1=br((Plt,N1)=>{N1.exports=Ue;var fo=null;try{fo=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(r){}function Ue(r,t,e){this.low=r|0,this.high=t|0,this.unsigned=!!e}Ue.prototype.__isLong__;Object.defineProperty(Ue.prototype,"__isLong__",{value:!0});function Pn(r){return(r&&r.__isLong__)===!0}Ue.isLong=Pn;var g1={},x1={};function Pu(r,t){var e,n,o;return t?(r>>>=0,(o=0<=r&&r<256)&&(n=x1[r],n)?n:(e=He(r,(r|0)<0?-1:0,!0),o&&(x1[r]=e),e)):(r|=0,(o=-128<=r&&r<128)&&(n=g1[r],n)?n:(e=He(r,r<0?-1:0,!1),o&&(g1[r]=e),e))}Ue.fromInt=Pu;function ho(r,t){if(isNaN(r))return t?Ou:go;if(t){if(r<0)return Ou;if(r>=C1)return S1}else{if(r<=-b1)return On;if(r+1>=b1)return v1}return r<0?ho(-r,t).neg():He(r%Gp|0,r/Gp|0,t)}Ue.fromNumber=ho;function He(r,t,e){return new Ue(r,t,e)}Ue.fromBits=He;var Vg=Math.pow;function h0(r,t,e){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return go;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return h0(r.substring(1),t,e).neg();for(var o=ho(Vg(e,8)),s=go,i=0;i<r.length;i+=8){var a=Math.min(8,r.length-i),u=parseInt(r.substring(i,i+a),e);if(a<8){var l=ho(Vg(e,a));s=s.mul(l).add(ho(u))}else s=s.mul(o),s=s.add(ho(u))}return s.unsigned=t,s}Ue.fromString=h0;function Ms(r,t){return typeof r=="number"?ho(r,t):typeof r=="string"?h0(r,t):He(r.low,r.high,typeof t=="boolean"?t:r.unsigned)}Ue.fromValue=Ms;var y1=1<<16,u4=1<<24,Gp=y1*y1,C1=Gp*Gp,b1=C1/2,w1=Pu(u4),go=Pu(0);Ue.ZERO=go;var Ou=Pu(0,!0);Ue.UZERO=Ou;var Vp=Pu(1);Ue.ONE=Vp;var I1=Pu(1,!0);Ue.UONE=I1;var d0=Pu(-1);Ue.NEG_ONE=d0;var v1=He(-1,2147483647,!1);Ue.MAX_VALUE=v1;var S1=He(-1,-1,!0);Ue.MAX_UNSIGNED_VALUE=S1;var On=He(0,-2147483648,!1);Ue.MIN_VALUE=On;var xt=Ue.prototype;xt.toInt=function(){return this.unsigned?this.low>>>0:this.low};xt.toNumber=function(){return this.unsigned?(this.high>>>0)*Gp+(this.low>>>0):this.high*Gp+(this.low>>>0)};xt.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(On)){var e=ho(t),n=this.div(e),o=n.mul(e).sub(this);return n.toString(t)+o.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var s=ho(Vg(t,6),this.unsigned),i=this,a="";;){var u=i.div(s),l=i.sub(u.mul(s)).toInt()>>>0,c=l.toString(t);if(i=u,i.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};xt.getHighBits=function(){return this.high};xt.getHighBitsUnsigned=function(){return this.high>>>0};xt.getLowBits=function(){return this.low};xt.getLowBitsUnsigned=function(){return this.low>>>0};xt.getNumBitsAbs=function(){if(this.isNegative())return this.eq(On)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&!(t&1<<e);e--);return this.high!=0?e+33:e+1};xt.isZero=function(){return this.high===0&&this.low===0};xt.eqz=xt.isZero;xt.isNegative=function(){return!this.unsigned&&this.high<0};xt.isPositive=function(){return this.unsigned||this.high>=0};xt.isOdd=function(){return(this.low&1)===1};xt.isEven=function(){return(this.low&1)===0};xt.equals=function(t){return Pn(t)||(t=Ms(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};xt.eq=xt.equals;xt.notEquals=function(t){return!this.eq(t)};xt.neq=xt.notEquals;xt.ne=xt.notEquals;xt.lessThan=function(t){return this.comp(t)<0};xt.lt=xt.lessThan;xt.lessThanOrEqual=function(t){return this.comp(t)<=0};xt.lte=xt.lessThanOrEqual;xt.le=xt.lessThanOrEqual;xt.greaterThan=function(t){return this.comp(t)>0};xt.gt=xt.greaterThan;xt.greaterThanOrEqual=function(t){return this.comp(t)>=0};xt.gte=xt.greaterThanOrEqual;xt.ge=xt.greaterThanOrEqual;xt.compare=function(t){if(Pn(t)||(t=Ms(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};xt.comp=xt.compare;xt.negate=function(){return!this.unsigned&&this.eq(On)?On:this.not().add(Vp)};xt.neg=xt.negate;xt.add=function(t){Pn(t)||(t=Ms(t));var e=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,i=t.high>>>16,a=t.high&65535,u=t.low>>>16,l=t.low&65535,c=0,p=0,m=0,f=0;return f+=s+l,m+=f>>>16,f&=65535,m+=o+u,p+=m>>>16,m&=65535,p+=n+a,c+=p>>>16,p&=65535,c+=e+i,c&=65535,He(m<<16|f,c<<16|p,this.unsigned)};xt.subtract=function(t){return Pn(t)||(t=Ms(t)),this.add(t.neg())};xt.sub=xt.subtract;xt.multiply=function(t){if(this.isZero())return go;if(Pn(t)||(t=Ms(t)),fo){var e=fo.mul(this.low,this.high,t.low,t.high);return He(e,fo.get_high(),this.unsigned)}if(t.isZero())return go;if(this.eq(On))return t.isOdd()?On:go;if(t.eq(On))return this.isOdd()?On:go;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(w1)&&t.lt(w1))return ho(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,i=this.low&65535,a=t.high>>>16,u=t.high&65535,l=t.low>>>16,c=t.low&65535,p=0,m=0,f=0,d=0;return d+=i*c,f+=d>>>16,d&=65535,f+=s*c,m+=f>>>16,f&=65535,f+=i*l,m+=f>>>16,f&=65535,m+=o*c,p+=m>>>16,m&=65535,m+=s*l,p+=m>>>16,m&=65535,m+=i*u,p+=m>>>16,m&=65535,p+=n*c+o*l+s*u+i*a,p&=65535,He(f<<16|d,p<<16|m,this.unsigned)};xt.mul=xt.multiply;xt.divide=function(t){if(Pn(t)||(t=Ms(t)),t.isZero())throw Error("division by zero");if(fo){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?fo.div_u:fo.div_s)(this.low,this.high,t.low,t.high);return He(e,fo.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Ou:go;var n,o,s;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return Ou;if(t.gt(this.shru(1)))return I1;s=Ou}else{if(this.eq(On)){if(t.eq(Vp)||t.eq(d0))return On;if(t.eq(On))return Vp;var i=this.shr(1);return n=i.div(t).shl(1),n.eq(go)?t.isNegative()?Vp:d0:(o=this.sub(t.mul(n)),s=n.add(o.div(t)),s)}else if(t.eq(On))return this.unsigned?Ou:go;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();s=go}for(o=this;o.gte(t);){n=Math.max(1,Math.floor(o.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),u=a<=48?1:Vg(2,a-48),l=ho(n),c=l.mul(t);c.isNegative()||c.gt(o);)n-=u,l=ho(n,this.unsigned),c=l.mul(t);l.isZero()&&(l=Vp),s=s.add(l),o=o.sub(c)}return s};xt.div=xt.divide;xt.modulo=function(t){if(Pn(t)||(t=Ms(t)),fo){var e=(this.unsigned?fo.rem_u:fo.rem_s)(this.low,this.high,t.low,t.high);return He(e,fo.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};xt.mod=xt.modulo;xt.rem=xt.modulo;xt.not=function(){return He(~this.low,~this.high,this.unsigned)};xt.and=function(t){return Pn(t)||(t=Ms(t)),He(this.low&t.low,this.high&t.high,this.unsigned)};xt.or=function(t){return Pn(t)||(t=Ms(t)),He(this.low|t.low,this.high|t.high,this.unsigned)};xt.xor=function(t){return Pn(t)||(t=Ms(t)),He(this.low^t.low,this.high^t.high,this.unsigned)};xt.shiftLeft=function(t){return Pn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?He(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):He(0,this.low<<t-32,this.unsigned)};xt.shl=xt.shiftLeft;xt.shiftRight=function(t){return Pn(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?He(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):He(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};xt.shr=xt.shiftRight;xt.shiftRightUnsigned=function(t){if(Pn(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var n=this.low;return He(n>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?He(e,0,this.unsigned):He(e>>>t-32,0,this.unsigned)};xt.shru=xt.shiftRightUnsigned;xt.shr_u=xt.shiftRightUnsigned;xt.toSigned=function(){return this.unsigned?He(this.low,this.high,!1):this};xt.toUnsigned=function(){return this.unsigned?this:He(this.low,this.high,!0)};xt.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};xt.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};xt.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};Ue.fromBytes=function(t,e,n){return n?Ue.fromBytesLE(t,e):Ue.fromBytesBE(t,e)};Ue.fromBytesLE=function(t,e){return new Ue(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};Ue.fromBytesBE=function(t,e){return new Ue(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}});var iE=br(()=>{});var aE=br(()=>{});var PE=br((OE,j0)=>{(function(r,t,e){function n(a){var u=this,l=i();u.next=function(){var c=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=c-(u.c=c|0)},u.c=1,u.s0=l(" "),u.s1=l(" "),u.s2=l(" "),u.s0-=l(a),u.s0<0&&(u.s0+=1),u.s1-=l(a),u.s1<0&&(u.s1+=1),u.s2-=l(a),u.s2<0&&(u.s2+=1),l=null}function o(a,u){return u.c=a.c,u.s0=a.s0,u.s1=a.s1,u.s2=a.s2,u}function s(a,u){var l=new n(a),c=u&&u.state,p=l.next;return p.int32=function(){return l.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&o(c,l),p.state=function(){return o(l,{})}),p}function i(){var a=4022871197,u=function(l){l=String(l);for(var c=0;c<l.length;c++){a+=l.charCodeAt(c);var p=.02519603282416938*a;a=p>>>0,p-=a,p*=a,a=p>>>0,p-=a,a+=p*4294967296}return(a>>>0)*23283064365386963e-26};return u}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.alea=s})(OE,typeof j0=="object"&&j0,typeof define=="function"&&define)});var ME=br((LE,X0)=>{(function(r,t,e){function n(i){var a=this,u="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var c=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^c^c>>>8},i===(i|0)?a.x=i:u+=i;for(var l=0;l<u.length+64;l++)a.x^=u.charCodeAt(l)|0,a.next()}function o(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a}function s(i,a){var u=new n(i),l=a&&a.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=u.next,c.quick=c,l&&(typeof l=="object"&&o(l,u),c.state=function(){return o(u,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor128=s})(LE,typeof X0=="object"&&X0,typeof define=="function"&&define)});var BE=br((zE,Y0)=>{(function(r,t,e){function n(i){var a=this,u="";a.next=function(){var c=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(c^c<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,i===(i|0)?a.x=i:u+=i;for(var l=0;l<u.length+64;l++)a.x^=u.charCodeAt(l)|0,l==u.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function o(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a.v=i.v,a.d=i.d,a}function s(i,a){var u=new n(i),l=a&&a.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=u.next,c.quick=c,l&&(typeof l=="object"&&o(l,u),c.state=function(){return o(u,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorwow=s})(zE,typeof Y0=="object"&&Y0,typeof define=="function"&&define)});var GE=br((VE,Z0)=>{(function(r,t,e){function n(i){var a=this;a.next=function(){var l=a.x,c=a.i,p,m,f;return p=l[c],p^=p>>>7,m=p^p<<24,p=l[c+1&7],m^=p^p>>>10,p=l[c+3&7],m^=p^p>>>3,p=l[c+4&7],m^=p^p<<7,p=l[c+7&7],p=p^p<<13,m^=p^p<<9,l[c]=m,a.i=c+1&7,m};function u(l,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],l.x=f,l.i=0,p=256;p>0;--p)l.next()}u(a,i)}function o(i,a){return a.x=i.x.slice(),a.i=i.i,a}function s(i,a){i==null&&(i=+new Date);var u=new n(i),l=a&&a.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=u.next,c.quick=c,l&&(l.x&&o(l,u),c.state=function(){return o(u,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorshift7=s})(VE,typeof Z0=="object"&&Z0,typeof define=="function"&&define)});var UE=br((WE,J0)=>{(function(r,t,e){function n(i){var a=this;a.next=function(){var l=a.w,c=a.X,p=a.i,m,f;return a.w=l=l+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,a.i=p,f+(l^l>>>16)|0};function u(l,c){var p,m,f,d,h,g=[],x=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,x=Math.max(x,c.length)),f=0,d=-32;d<x;++d)c&&(m^=c.charCodeAt((d+32)%c.length)),d===0&&(h=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(h=h+1640531527|0,p=g[d&127]^=m+h,f=p==0?f+1:0);for(f>=128&&(g[(c&&c.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;l.w=h,l.X=g,l.i=f}u(a,i)}function o(i,a){return a.i=i.i,a.w=i.w,a.X=i.X.slice(),a}function s(i,a){i==null&&(i=+new Date);var u=new n(i),l=a&&a.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=u.next,c.quick=c,l&&(l.X&&o(l,u),c.state=function(){return o(u,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor4096=s})(WE,typeof J0=="object"&&J0,typeof define=="function"&&define)});var qE=br((HE,Q0)=>{(function(r,t,e){function n(i){var a=this,u="";a.next=function(){var c=a.b,p=a.c,m=a.d,f=a.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,a.b=c=c<<20^c>>>12^p,a.c=p=p-m|0,a.d=m<<16^p>>>16^f,a.a=f-c|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,i===Math.floor(i)?(a.a=i/4294967296|0,a.b=i|0):u+=i;for(var l=0;l<u.length+20;l++)a.b^=u.charCodeAt(l)|0,a.next()}function o(i,a){return a.a=i.a,a.b=i.b,a.c=i.c,a.d=i.d,a}function s(i,a){var u=new n(i),l=a&&a.state,c=function(){return(u.next()>>>0)/4294967296};return c.double=function(){do var p=u.next()>>>11,m=(u.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=u.next,c.quick=c,l&&(typeof l=="object"&&o(l,u),c.state=function(){return o(u,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.tychei=s})(HE,typeof Q0=="object"&&Q0,typeof define=="function"&&define)});var KE=br(()=>{});var XE=br((jE,Gx)=>{(function(r,t,e){var n=256,o=6,s=52,i="random",a=e.pow(n,o),u=e.pow(2,s),l=u*2,c=n-1,p;function m(w,C,N){var _=[];C=C==!0?{entropy:!0}:C||{};var A=g(h(C.entropy?[w,b(t)]:w==null?x():w,3),_),$=new f(_),F=function(){for(var P=$.g(o),V=a,G=0;P<u;)P=(P+G)*n,V*=n,G=$.g(1);for(;P>=l;)P/=2,V/=2,G>>>=1;return(P+G)/V};return F.int32=function(){return $.g(4)|0},F.quick=function(){return $.g(4)/4294967296},F.double=F,g(b($.S),t),(C.pass||N||function(P,V,G,W){return W&&(W.S&&d(W,$),P.state=function(){return d($,{})}),G?(e[i]=P,V):P})(F,A,"global"in C?C.global:this==e,C.state)}function f(w){var C,N=w.length,_=this,A=0,$=_.i=_.j=0,F=_.S=[];for(N||(w=[N++]);A<n;)F[A]=A++;for(A=0;A<n;A++)F[A]=F[$=c&$+w[A%N]+(C=F[A])],F[$]=C;(_.g=function(P){for(var V,G=0,W=_.i,q=_.j,H=_.S;P--;)V=H[W=c&W+1],G=G*n+H[c&(H[W]=H[q=c&q+V])+(H[q]=V)];return _.i=W,_.j=q,G})(n)}function d(w,C){return C.i=w.i,C.j=w.j,C.S=w.S.slice(),C}function h(w,C){var N=[],_=typeof w,A;if(C&&_=="object")for(A in w)try{N.push(h(w[A],C-1))}catch($){}return N.length?N:_=="string"?w:w+"\0"}function g(w,C){for(var N=w+"",_,A=0;A<N.length;)C[c&A]=c&(_^=C[c&A]*19)+N.charCodeAt(A++);return b(C)}function x(){try{var w;return p&&(w=p.randomBytes)?w=w(n):(w=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(w)),b(w)}catch(_){var C=r.navigator,N=C&&C.plugins;return[+new Date,r,N,r.screen,b(t)]}}function b(w){return String.fromCharCode.apply(0,w)}if(g(e.random(),t),typeof Gx=="object"&&Gx.exports){Gx.exports=m;try{p=KE()}catch(w){}}else typeof define=="function"&&define.amd?define(function(){return m}):e["seed"+i]=m})(typeof self!="undefined"?self:jE,[],Math)});var ch=br((uSt,YE)=>{var $K=PE(),DK=ME(),RK=BE(),FK=GE(),OK=UE(),PK=qE(),Ku=XE();Ku.alea=$K;Ku.xor128=DK;Ku.xorwow=RK;Ku.xorshift7=FK;Ku.xor4096=OK;Ku.tychei=PK;YE.exports=Ku});var wN=br(()=>{});var Zb=br(()=>{});var Mk=br(()=>{});var WW=br(()=>{});var UW=br(()=>{});var HW=br(()=>{});var qW=br((fI,Bk)=>{var zk=(()=>{var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(t){t=t||{};function e(){return st.buffer!=ee&&je(st.buffer),ge}function n(){return st.buffer!=ee&&je(st.buffer),fe}function o(){return st.buffer!=ee&&je(st.buffer),Ae}function s(){return st.buffer!=ee&&je(st.buffer),$n}function i(){return st.buffer!=ee&&je(st.buffer),ar}function a(){return st.buffer!=ee&&je(st.buffer),qn}function u(){return st.buffer!=ee&&je(st.buffer),zr}var l=typeof t!="undefined"?t:{},c,p;l.ready=new Promise(function(L,U){c=L,p=U});var m;typeof process!="undefined"&&process.listeners&&(m={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f=Object.assign({},l),d=[],h="./this.program",g=(L,U)=>{throw U},x=typeof window=="object",b=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",C=l.ENVIRONMENT_IS_PTHREAD||!1,N="";function _(L){return l.locateFile?l.locateFile(L,N):N+L}var A,$,F,P;function V(L){if(L instanceof _u)return;X("exiting due to exception: "+L)}if(w){var G=Zb(),W=Mk();b?N=W.dirname(N)+"/":N=__dirname+"/",A=(U,dt)=>(U=Zc(U)?new URL(U):W.normalize(U),G.readFileSync(U,dt?void 0:"utf8")),F=U=>{var dt=A(U,!0);return dt.buffer||(dt=new Uint8Array(dt)),dt},$=(U,dt,Lt)=>{U=Zc(U)?new URL(U):W.normalize(U),G.readFile(U,function(Yt,Xt){Yt?Lt(Yt):dt(Xt.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),d=process.argv.slice(2),process.on("uncaughtException",function(U){if(!(U instanceof _u))throw U}),process.on("unhandledRejection",function(U){throw U}),g=(U,dt)=>{if(Mo())throw process.exitCode=U,dt;V(dt),process.exit(U)},l.inspect=function(){return"[Emscripten Module object]"};let L;try{L=WW()}catch(U){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),U}global.Worker=L.Worker}else(x||b)&&(b?N=self.location.href:typeof document!="undefined"&&document.currentScript&&(N=document.currentScript.src),typeof r!="undefined"&&r&&(N=r),N.indexOf("blob:")!==0?N=N.substr(0,N.replace(/[?#].*/,"").lastIndexOf("/")+1):N="",w||(A=L=>{var U=new XMLHttpRequest;return U.open("GET",L,!1),U.send(null),U.responseText},b&&(F=L=>{var U=new XMLHttpRequest;return U.open("GET",L,!1),U.responseType="arraybuffer",U.send(null),new Uint8Array(U.response)}),$=(L,U,dt)=>{var Lt=new XMLHttpRequest;Lt.open("GET",L,!0),Lt.responseType="arraybuffer",Lt.onload=()=>{if(Lt.status==200||Lt.status==0&&Lt.response){U(Lt.response);return}dt()},Lt.onerror=dt,Lt.send(null)}),P=L=>document.title=L);w&&typeof performance=="undefined"&&(global.performance=UW().performance);var q=console.log.bind(console),H=console.warn.bind(console);w&&(q=L=>G.writeSync(1,L+`
`),H=L=>G.writeSync(2,L+`
`));var K=l.print||q,X=l.printErr||H;Object.assign(l,f),f=null,l.arguments&&(d=l.arguments),l.thisProgram&&(h=l.thisProgram),l.quit&&(g=l.quit);var Z=4,et=Atomics.load,rt=Atomics.store,ot=Atomics.compareExchange,at;l.wasmBinary&&(at=l.wasmBinary);var nt=l.noExitRuntime||!0;typeof WebAssembly!="object"&&Eu("no native wasm support detected");var st,ft,gt=!1,Ct;function $t(L,U){L||Eu(U)}var _t=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function Gt(L,U,dt){for(var Lt=U+dt,Yt=U;L[Yt]&&!(Yt>=Lt);)++Yt;if(Yt-U>16&&L.buffer&&_t)return _t.decode(L.buffer instanceof SharedArrayBuffer?L.slice(U,Yt):L.subarray(U,Yt));for(var Xt="";U<Yt;){var yt=L[U++];if(!(yt&128)){Xt+=String.fromCharCode(yt);continue}var At=L[U++]&63;if((yt&224)==192){Xt+=String.fromCharCode((yt&31)<<6|At);continue}var nr=L[U++]&63;if((yt&240)==224?yt=(yt&15)<<12|At<<6|nr:yt=(yt&7)<<18|At<<12|nr<<6|L[U++]&63,yt<65536)Xt+=String.fromCharCode(yt);else{var Yn=yt-65536;Xt+=String.fromCharCode(55296|Yn>>10,56320|Yn&1023)}}return Xt}function Wt(L,U){return L?Gt(n(),L,U):""}function ue(L,U,dt,Lt){if(!(Lt>0))return 0;for(var Yt=dt,Xt=dt+Lt-1,yt=0;yt<L.length;++yt){var At=L.charCodeAt(yt);if(At>=55296&&At<=57343){var nr=L.charCodeAt(++yt);At=65536+((At&1023)<<10)|nr&1023}if(At<=127){if(dt>=Xt)break;U[dt++]=At}else if(At<=2047){if(dt+1>=Xt)break;U[dt++]=192|At>>6,U[dt++]=128|At&63}else if(At<=65535){if(dt+2>=Xt)break;U[dt++]=224|At>>12,U[dt++]=128|At>>6&63,U[dt++]=128|At&63}else{if(dt+3>=Xt)break;U[dt++]=240|At>>18,U[dt++]=128|At>>12&63,U[dt++]=128|At>>6&63,U[dt++]=128|At&63}}return U[dt]=0,dt-Yt}function he(L,U,dt){return ue(L,n(),U,dt)}var ee,ge,fe,Ae,$e,$n,ar,qn,zr;C&&(ee=l.buffer);function je(L){ee=L,l.HEAP8=ge=new Int8Array(L),l.HEAP16=Ae=new Int16Array(L),l.HEAP32=$n=new Int32Array(L),l.HEAPU8=fe=new Uint8Array(L),l.HEAPU16=$e=new Uint16Array(L),l.HEAPU32=ar=new Uint32Array(L),l.HEAPF32=qn=new Float32Array(L),l.HEAPF64=zr=new Float64Array(L)}var Br=l.INITIAL_MEMORY||16777216;if(C)st=l.wasmMemory,ee=l.buffer;else if(l.wasmMemory)st=l.wasmMemory;else if(st=new WebAssembly.Memory({initial:Br/65536,maximum:32768,shared:!0}),!(st.buffer instanceof SharedArrayBuffer))throw X("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),w&&X("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");st&&(ee=st.buffer),Br=ee.byteLength,je(ee);var Vr,Kn=[],jn=[],Zr=[],ea=!1;function Mo(){return nt}function si(){if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)Od(l.preRun.shift());Md(Kn)}function Er(){ea=!0,!C&&Md(jn)}function ra(){if(!C){if(l.postRun)for(typeof l.postRun=="function"&&(l.postRun=[l.postRun]);l.postRun.length;)Kk(l.postRun.shift());Md(Zr)}}function Od(L){Kn.unshift(L)}function Pd(L){jn.unshift(L)}function Kk(L){Zr.unshift(L)}var Nl=0,Yc=null,na=null;function gI(L){Nl++,l.monitorRunDependencies&&l.monitorRunDependencies(Nl)}function mg(L){if(Nl--,l.monitorRunDependencies&&l.monitorRunDependencies(Nl),Nl==0&&(Yc!==null&&(clearInterval(Yc),Yc=null),na)){var U=na;na=null,U()}}function Eu(L){l.onAbort&&l.onAbort(L),L="Aborted("+L+")",X(L),gt=!0,Ct=1,L+=". Build with -sASSERTIONS for more info.";var U=new WebAssembly.RuntimeError(L);throw p(U),U}var xI="data:application/octet-stream;base64,";function fg(L){return L.startsWith(xI)}function Zc(L){return L.startsWith("file://")}var Jr;Jr="tfjs-backend-wasm-threaded-simd.wasm",fg(Jr)||(Jr=_(Jr));function dg(L){try{if(L==Jr&&at)return new Uint8Array(at);if(F)return F(L);throw"both async and sync fetching of the wasm failed"}catch(U){Eu(U)}}function yI(){if(!at&&(x||b)){if(typeof fetch=="function"&&!Zc(Jr))return fetch(Jr,{credentials:"same-origin"}).then(function(L){if(!L.ok)throw"failed to load wasm binary file at '"+Jr+"'";return L.arrayBuffer()}).catch(function(){return dg(Jr)});if($)return new Promise(function(L,U){$(Jr,function(dt){L(new Uint8Array(dt))},U)})}return Promise.resolve().then(function(){return dg(Jr)})}function bI(){var L={env:kg,wasi_snapshot_preview1:kg};function U(yt,At){var nr=yt.exports;if(l.asm=nr,EI(l.asm._emscripten_tls_init),Vr=l.asm.__indirect_function_table,Pd(l.asm.__wasm_call_ctors),ft=At,!C){var Yn=jt.unusedWorkers.length;jt.unusedWorkers.forEach(function(sa){jt.loadWasmModuleToWorker(sa,function(){--Yn||mg("wasm-instantiate")})})}}C||gI("wasm-instantiate");function dt(yt){U(yt.instance,yt.module)}function Lt(yt){return yI().then(function(At){return WebAssembly.instantiate(At,L)}).then(function(At){return At}).then(yt,function(At){X("failed to asynchronously prepare wasm: "+At),Eu(At)})}function Yt(){return!at&&typeof WebAssembly.instantiateStreaming=="function"&&!fg(Jr)&&!Zc(Jr)&&!w&&typeof fetch=="function"?fetch(Jr,{credentials:"same-origin"}).then(function(yt){var At=WebAssembly.instantiateStreaming(yt,L);return At.then(dt,function(nr){return X("wasm streaming compile failed: "+nr),X("falling back to ArrayBuffer instantiation"),Lt(dt)})}):Lt(dt)}if(l.instantiateWasm)try{var Xt=l.instantiateWasm(L,U);return Xt}catch(yt){X("Module.instantiateWasm callback failed with error: "+yt),p(yt)}return Yt().catch(p),{}}var jk,Xk,hg={};function _u(L){this.name="ExitStatus",this.message="Program terminated with exit("+L+")",this.status=L}function wI(L){var U=jt.pthreads[L];delete jt.pthreads[L],U.terminate(),Qv(L),jt.runningWorkers.splice(jt.runningWorkers.indexOf(U),1),U.pthread_ptr=0}function CI(L){var U=jt.pthreads[L];U.postMessage({cmd:"cancel"})}function Ld(L){var U=jt.pthreads[L];$t(U),jt.returnWorkerToPool(U)}function II(L){var U=jt.getNewWorker();if(!U)return 6;jt.runningWorkers.push(U),jt.pthreads[L.pthread_ptr]=U,U.pthread_ptr=L.pthread_ptr;var dt={cmd:"run",start_routine:L.startRoutine,arg:L.arg,pthread_ptr:L.pthread_ptr};return U.runPthread=()=>{w&&U.ref(),U.postMessage(dt,L.transferList),delete U.runPthread},U.loaded&&U.runPthread(),0}var gg={varargs:void 0,get:function(){gg.varargs+=4;var L=s()[gg.varargs-4>>2];return L},getStr:function(L){var U=Wt(L);return U}};function xg(L){if(C)return Tl(1,1,L);Ct=L,Mo()||(jt.terminateAllThreads(),l.onExit&&l.onExit(L),gt=!0),g(L,new _u(L))}function vI(L,U){if(Ct=L,!U&&C)throw bg(L),"unwind";xg(L)}var yg=vI;function SI(L){if(L instanceof _u||L=="unwind")return Ct;g(1,L)}var jt={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){C?jt.initWorker():jt.initMainThread()},initMainThread:function(){for(var L=8;L--;)jt.allocateUnusedWorker()},initWorker:function(){nt=!1},setExitStatus:function(L){Ct=L},terminateAllThreads:function(){for(var L of Object.values(jt.pthreads))jt.returnWorkerToPool(L);for(var L of jt.unusedWorkers)L.terminate();jt.unusedWorkers=[]},returnWorkerToPool:function(L){var U=L.pthread_ptr;delete jt.pthreads[U],jt.unusedWorkers.push(L),jt.runningWorkers.splice(jt.runningWorkers.indexOf(L),1),L.pthread_ptr=0,w&&L.unref(),Qv(U)},receiveObjectTransfer:function(L){},threadInitTLS:function(){jt.tlsInitFunctions.forEach(L=>L())},loadWasmModuleToWorker:function(L,U){L.onmessage=Xt=>{var yt=Xt.data,At=yt.cmd;if(L.pthread_ptr&&(jt.currentProxiedOperationCallerThread=L.pthread_ptr),yt.targetThread&&yt.targetThread!=Rg()){var nr=jt.pthreads[yt.targetThread];nr?nr.postMessage(yt,yt.transferList):X('Internal error! Worker sent a message "'+At+'" to target pthread '+yt.targetThread+", but that thread no longer exists!"),jt.currentProxiedOperationCallerThread=void 0;return}At==="processProxyingQueue"?zd(yt.queue):At==="spawnThread"?II(yt):At==="cleanupThread"?Ld(yt.thread):At==="killThread"?wI(yt.thread):At==="cancelThread"?CI(yt.thread):At==="loaded"?(L.loaded=!0,w&&L.unref(),U&&U(L),L.runPthread&&L.runPthread()):At==="print"?K("Thread "+yt.threadId+": "+yt.text):At==="printErr"?X("Thread "+yt.threadId+": "+yt.text):At==="alert"?alert("Thread "+yt.threadId+": "+yt.text):yt.target==="setimmediate"?L.postMessage(yt):At==="callHandler"?l[yt.handler](...yt.args):At&&X("worker sent an unknown command "+At),jt.currentProxiedOperationCallerThread=void 0},L.onerror=Xt=>{var yt="worker sent an error!";throw X(yt+" "+Xt.filename+":"+Xt.lineno+": "+Xt.message),Xt},w&&(L.on("message",function(Xt){L.onmessage({data:Xt})}),L.on("error",function(Xt){L.onerror(Xt)}),L.on("detachedExit",function(){}));var dt=[],Lt=["onExit","onAbort","print","printErr"];for(var Yt of Lt)l.hasOwnProperty(Yt)&&dt.push(Yt);L.postMessage({cmd:"load",handlers:dt,urlOrBlob:l.mainScriptUrlOrBlob||r,wasmMemory:st,wasmModule:ft})},allocateUnusedWorker:function(){var L,U=_("tfjs-backend-wasm-threaded-simd.worker.js");L=new Worker(U),jt.unusedWorkers.push(L)},getNewWorker:function(){return jt.unusedWorkers.length==0&&(jt.allocateUnusedWorker(),jt.loadWasmModuleToWorker(jt.unusedWorkers[0])),jt.unusedWorkers.pop()}};l.PThread=jt;function Md(L){for(;L.length>0;)L.shift()(l)}function NI(){var L=Rg(),U=s()[L+52>>2],dt=s()[L+56>>2],Lt=U-dt;e1(U,Lt),Fg(U)}l.establishStackSpace=NI;function bg(L){if(C)return Tl(2,0,L);try{yg(L)}catch(U){SI(U)}}var Jc=[];function TI(L){var U=Jc[L];return U||(L>=Jc.length&&(Jc.length=L+1),Jc[L]=U=Vr.get(L)),U}function kI(L,U){var dt=TI(L)(U);Mo()?jt.setExitStatus(dt):t1(dt)}l.invokeEntryPoint=kI;function EI(L){jt.tlsInitFunctions.push(L)}function _I(L){Zk(L,!b,1,!x),jt.threadInitTLS()}function AI(L){C?postMessage({cmd:"cleanupThread",thread:L}):Ld(L)}function wg(L,U,dt,Lt){return C?Tl(3,1,L,U,dt,Lt):Cg(L,U,dt,Lt)}function Cg(L,U,dt,Lt){if(typeof SharedArrayBuffer=="undefined")return X("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Yt=[],Xt=0;if(C&&(Yt.length===0||Xt))return wg(L,U,dt,Lt);if(Xt)return Xt;var yt={startRoutine:dt,pthread_ptr:L,arg:Lt,transferList:Yt};return C?(yt.cmd="spawnThread",postMessage(yt,Yt),0):II(yt)}function $I(){return 65536}var DI=!0;function RI(){return DI}function zd(L){Atomics.store(s(),L>>2,1),Rg()&&Qk(L),Atomics.compareExchange(s(),L>>2,1,0)}l.executeNotifiedProxyingQueue=zd;function FI(L,U,dt,Lt){if(L==U)setTimeout(()=>zd(Lt));else if(C)postMessage({targetThread:L,cmd:"processProxyingQueue",queue:Lt});else{var Yt=jt.pthreads[L];if(!Yt)return;Yt.postMessage({cmd:"processProxyingQueue",queue:Lt})}return 1}function OI(L,U,dt){return-1}function PI(){Eu("")}function Au(L){Au.shown||(Au.shown={}),Au.shown[L]||(Au.shown[L]=1,w&&(L="warning: "+L),X(L))}function LI(){w||b||Au("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function MI(){return Date.now()}function Ig(){return 2147483648}function zI(){return Ig()}var Bd;w?Bd=()=>{var L=process.hrtime();return L[0]*1e3+L[1]/1e6}:Bd=()=>performance.timeOrigin+performance.now();function BI(L,U,dt){n().copyWithin(L,U,U+dt)}function VI(){return w?HW().cpus().length:navigator.hardwareConcurrency}function GI(L){var U=t0(),dt=L();return Fg(U),dt}function Tl(L,U){var dt=arguments.length-2,Lt=arguments;return GI(()=>{for(var Yt=dt,Xt=Og(Yt*8),yt=Xt>>3,At=0;At<dt;At++){var nr=Lt[2+At];u()[yt+At]=nr}return Jk(L,Yt,Xt,U)})}var Vd=[];function WI(L,U,dt){Vd.length=U;for(var Lt=dt>>3,Yt=0;Yt<U;Yt++)Vd[Yt]=u()[Lt+Yt];var Xt=L<0,yt=Xt?hg[-L-1]:JI[L];return yt.apply(null,Vd)}function UI(L){try{return st.grow(L-ee.byteLength+65535>>>16),je(st.buffer),1}catch(U){}}function HI(L){var U=n().length;if(L=L>>>0,L<=U)return!1;var dt=Ig();if(L>dt)return!1;let Lt=(nr,Yn)=>nr+(Yn-nr%Yn)%Yn;for(var Yt=1;Yt<=4;Yt*=2){var Xt=U*(1+.2/Yt);Xt=Math.min(Xt,L+100663296);var yt=Math.min(dt,Lt(Math.max(L,Xt),65536)),At=UI(yt);if(At)return!0}return!1}function qI(){throw"unwind"}function vg(L){return C?Tl(4,1,L):52}function Sg(L,U,dt,Lt,Yt){return C?Tl(5,1,L,U,dt,Lt,Yt):70}var KI=[null,[],[]];function jI(L,U){var dt=KI[L];U===0||U===10?((L===1?K:X)(Gt(dt,0)),dt.length=0):dt.push(U)}function Ng(L,U,dt,Lt){if(C)return Tl(6,1,L,U,dt,Lt);for(var Yt=0,Xt=0;Xt<dt;Xt++){var yt=i()[U>>2],At=i()[U+4>>2];U+=8;for(var nr=0;nr<At;nr++)jI(L,n()[yt+nr]);Yt+=At}return i()[Lt>>2]=Yt,0}function Tg(L){var U=l["_"+L];return U}function XI(L,U){e().set(L,U)}function YI(L,U,dt,Lt,Yt){var Xt={string:Dn=>{var rp=0;if(Dn!=null&&Dn!==0){var o1=(Dn.length<<2)+1;rp=Og(o1),he(Dn,rp,o1)}return rp},array:Dn=>{var rp=Og(Dn.length);return XI(Dn,rp),rp}};function yt(Dn){return U==="string"?Wt(Dn):U==="boolean"?Boolean(Dn):Dn}var At=Tg(L),nr=[],Yn=0;if(Lt)for(var sa=0;sa<Lt.length;sa++){var n1=Xt[dt[sa]];n1?(Yn===0&&(Yn=t0()),nr[sa]=n1(Lt[sa])):nr[sa]=Lt[sa]}var e0=At.apply(null,nr);function FU(Dn){return Yn!==0&&Fg(Yn),yt(Dn)}return e0=FU(e0),e0}function ZI(L,U,dt,Lt){dt=dt||[];var Yt=dt.every(yt=>yt==="number"||yt==="boolean"),Xt=U!=="string";return Xt&&Yt&&!Lt?Tg(L):function(){return YI(L,U,dt,arguments,Lt)}}jt.init();var JI=[null,xg,bg,wg,vg,Sg,Ng],kg={__emscripten_init_main_thread_js:_I,__emscripten_thread_cleanup:AI,__pthread_create_js:Cg,_emscripten_default_pthread_stack_size:$I,_emscripten_get_now_is_monotonic:RI,_emscripten_notify_task_queue:FI,_emscripten_set_offscreencanvas_size:OI,abort:PI,emscripten_check_blocking_allowed:LI,emscripten_date_now:MI,emscripten_get_heap_max:zI,emscripten_get_now:Bd,emscripten_memcpy_big:BI,emscripten_num_logical_cores:VI,emscripten_receive_on_main_thread_js:WI,emscripten_resize_heap:HI,emscripten_unwind_to_js_event_loop:qI,exit:yg,fd_close:vg,fd_seek:Sg,fd_write:Ng,memory:st||l.wasmMemory},Yk=bI(),QI=l.___wasm_call_ctors=function(){return(QI=l.___wasm_call_ctors=l.asm.__wasm_call_ctors).apply(null,arguments)},tv=l._init=function(){return(tv=l._init=l.asm.init).apply(null,arguments)},ev=l._init_with_threads_count=function(){return(ev=l._init_with_threads_count=l.asm.init_with_threads_count).apply(null,arguments)},rv=l._get_threads_count=function(){return(rv=l._get_threads_count=l.asm.get_threads_count).apply(null,arguments)},nv=l._register_tensor=function(){return(nv=l._register_tensor=l.asm.register_tensor).apply(null,arguments)},ov=l._dispose_data=function(){return(ov=l._dispose_data=l.asm.dispose_data).apply(null,arguments)},sv=l._dispose=function(){return(sv=l._dispose=l.asm.dispose).apply(null,arguments)},iv=l._Abs=function(){return(iv=l._Abs=l.asm.Abs).apply(null,arguments)},av=l._Add=function(){return(av=l._Add=l.asm.Add).apply(null,arguments)},lv=l._AddN=function(){return(lv=l._AddN=l.asm.AddN).apply(null,arguments)},uv=l._All=function(){return(uv=l._All=l.asm.All).apply(null,arguments)},cv=l._Any=function(){return(cv=l._Any=l.asm.Any).apply(null,arguments)},pv=l._ArgMax=function(){return(pv=l._ArgMax=l.asm.ArgMax).apply(null,arguments)},mv=l._AvgPool=function(){return(mv=l._AvgPool=l.asm.AvgPool).apply(null,arguments)},fv=l._BatchMatMul=function(){return(fv=l._BatchMatMul=l.asm.BatchMatMul).apply(null,arguments)},dv=l._Ceil=function(){return(dv=l._Ceil=l.asm.Ceil).apply(null,arguments)},hv=l._ClipByValue=function(){return(hv=l._ClipByValue=l.asm.ClipByValue).apply(null,arguments)},gv=l._Conv2D=function(){return(gv=l._Conv2D=l.asm.Conv2D).apply(null,arguments)},xv=l._Conv2DBackpropInput=function(){return(xv=l._Conv2DBackpropInput=l.asm.Conv2DBackpropInput).apply(null,arguments)},yv=l._Cos=function(){return(yv=l._Cos=l.asm.Cos).apply(null,arguments)},bv=l._Cosh=function(){return(bv=l._Cosh=l.asm.Cosh).apply(null,arguments)},wv=l._CropAndResize=function(){return(wv=l._CropAndResize=l.asm.CropAndResize).apply(null,arguments)},Cv=l._Cumprod=function(){return(Cv=l._Cumprod=l.asm.Cumprod).apply(null,arguments)},Iv=l._Cumsum=function(){return(Iv=l._Cumsum=l.asm.Cumsum).apply(null,arguments)},vv=l._DepthToSpace=function(){return(vv=l._DepthToSpace=l.asm.DepthToSpace).apply(null,arguments)},Sv=l._DepthwiseConv2dNative=function(){return(Sv=l._DepthwiseConv2dNative=l.asm.DepthwiseConv2dNative).apply(null,arguments)},Nv=l._Elu=function(){return(Nv=l._Elu=l.asm.Elu).apply(null,arguments)},Tv=l._Equal=function(){return(Tv=l._Equal=l.asm.Equal).apply(null,arguments)},kv=l._Exp=function(){return(kv=l._Exp=l.asm.Exp).apply(null,arguments)},Ev=l._FlipLeftRight=function(){return(Ev=l._FlipLeftRight=l.asm.FlipLeftRight).apply(null,arguments)},_v=l._Floor=function(){return(_v=l._Floor=l.asm.Floor).apply(null,arguments)},Av=l._FloorDiv=function(){return(Av=l._FloorDiv=l.asm.FloorDiv).apply(null,arguments)},$v=l._FusedBatchNorm=function(){return($v=l._FusedBatchNorm=l.asm.FusedBatchNorm).apply(null,arguments)},Dv=l._FusedConv2D=function(){return(Dv=l._FusedConv2D=l.asm.FusedConv2D).apply(null,arguments)},Rv=l._FusedDepthwiseConv2D=function(){return(Rv=l._FusedDepthwiseConv2D=l.asm.FusedDepthwiseConv2D).apply(null,arguments)},Fv=l._Gather=function(){return(Fv=l._Gather=l.asm.Gather).apply(null,arguments)},Ov=l._GatherNd=function(){return(Ov=l._GatherNd=l.asm.GatherNd).apply(null,arguments)},Pv=l._Greater=function(){return(Pv=l._Greater=l.asm.Greater).apply(null,arguments)},Lv=l._GreaterEqual=function(){return(Lv=l._GreaterEqual=l.asm.GreaterEqual).apply(null,arguments)},Mv=l._IsNan=function(){return(Mv=l._IsNan=l.asm.IsNan).apply(null,arguments)},zv=l._LeakyRelu=function(){return(zv=l._LeakyRelu=l.asm.LeakyRelu).apply(null,arguments)},Bv=l._Less=function(){return(Bv=l._Less=l.asm.Less).apply(null,arguments)},Vv=l._LessEqual=function(){return(Vv=l._LessEqual=l.asm.LessEqual).apply(null,arguments)},Gv=l._Log=function(){return(Gv=l._Log=l.asm.Log).apply(null,arguments)},Wv=l._LogicalAnd=function(){return(Wv=l._LogicalAnd=l.asm.LogicalAnd).apply(null,arguments)},Uv=l._LogicalNot=function(){return(Uv=l._LogicalNot=l.asm.LogicalNot).apply(null,arguments)},Hv=l._LogicalOr=function(){return(Hv=l._LogicalOr=l.asm.LogicalOr).apply(null,arguments)},qv=l._LogicalXor=function(){return(qv=l._LogicalXor=l.asm.LogicalXor).apply(null,arguments)},Kv=l._Max=function(){return(Kv=l._Max=l.asm.Max).apply(null,arguments)},jv=l._MaxPool=function(){return(jv=l._MaxPool=l.asm.MaxPool).apply(null,arguments)},Eg=l._Maximum=function(){return(Eg=l._Maximum=l.asm.Maximum).apply(null,arguments)},_g=l._Mean=function(){return(_g=l._Mean=l.asm.Mean).apply(null,arguments)},Gd=l._Min=function(){return(Gd=l._Min=l.asm.Min).apply(null,arguments)},Xv=l._Minimum=function(){return(Xv=l._Minimum=l.asm.Minimum).apply(null,arguments)},Yv=l._MirrorPad=function(){return(Yv=l._MirrorPad=l.asm.MirrorPad).apply(null,arguments)},Qc=l._Multiply=function(){return(Qc=l._Multiply=l.asm.Multiply).apply(null,arguments)},Ag=l._Neg=function(){return(Ag=l._Neg=l.asm.Neg).apply(null,arguments)},tp=l._NonMaxSuppressionV3=function(){return(tp=l._NonMaxSuppressionV3=l.asm.NonMaxSuppressionV3).apply(null,arguments)},ep=l._NonMaxSuppressionV4=function(){return(ep=l._NonMaxSuppressionV4=l.asm.NonMaxSuppressionV4).apply(null,arguments)},Zv=l._NonMaxSuppressionV5=function(){return(Zv=l._NonMaxSuppressionV5=l.asm.NonMaxSuppressionV5).apply(null,arguments)},j=l._NotEqual=function(){return(j=l._NotEqual=l.asm.NotEqual).apply(null,arguments)},ct=l._OneHot=function(){return(ct=l._OneHot=l.asm.OneHot).apply(null,arguments)},Dt=l._PadV2=function(){return(Dt=l._PadV2=l.asm.PadV2).apply(null,arguments)},ce=l._Pow=function(){return(ce=l._Pow=l.asm.Pow).apply(null,arguments)},Xe=l._Prelu=function(){return(Xe=l._Prelu=l.asm.Prelu).apply(null,arguments)},Ye=l._Prod=function(){return(Ye=l._Prod=l.asm.Prod).apply(null,arguments)},ne=l._RealDiv=function(){return(ne=l._RealDiv=l.asm.RealDiv).apply(null,arguments)},re=l._Reciprocal=function(){return(re=l._Reciprocal=l.asm.Reciprocal).apply(null,arguments)},yr=l._Relu=function(){return(yr=l._Relu=l.asm.Relu).apply(null,arguments)},Xn=l._Relu6=function(){return(Xn=l._Relu6=l.asm.Relu6).apply(null,arguments)},oa=l._ResizeBilinear=function(){return(oa=l._ResizeBilinear=l.asm.ResizeBilinear).apply(null,arguments)},$g=l._ResizeNearestNeighbor=function(){return($g=l._ResizeNearestNeighbor=l.asm.ResizeNearestNeighbor).apply(null,arguments)},Wd=l._Reverse=function(){return(Wd=l._Reverse=l.asm.Reverse).apply(null,arguments)},Jv=l._RotateWithOffset=function(){return(Jv=l._RotateWithOffset=l.asm.RotateWithOffset).apply(null,arguments)},nn=l._Round=function(){return(nn=l._Round=l.asm.Round).apply(null,arguments)},kl=l._Rsqrt=function(){return(kl=l._Rsqrt=l.asm.Rsqrt).apply(null,arguments)},Dg=l._ScatterNd=function(){return(Dg=l._ScatterNd=l.asm.ScatterNd).apply(null,arguments)},rU=l._SelectV2=function(){return(rU=l._SelectV2=l.asm.SelectV2).apply(null,arguments)},nU=l._Sigmoid=function(){return(nU=l._Sigmoid=l.asm.Sigmoid).apply(null,arguments)},oU=l._Sin=function(){return(oU=l._Sin=l.asm.Sin).apply(null,arguments)},sU=l._Softmax=function(){return(sU=l._Softmax=l.asm.Softmax).apply(null,arguments)},iU=l._SparseFillEmptyRows=function(){return(iU=l._SparseFillEmptyRows=l.asm.SparseFillEmptyRows).apply(null,arguments)},aU=l._SparseReshape=function(){return(aU=l._SparseReshape=l.asm.SparseReshape).apply(null,arguments)},lU=l._SparseSegmentReduction=function(){return(lU=l._SparseSegmentReduction=l.asm.SparseSegmentReduction).apply(null,arguments)},uU=l._Sqrt=function(){return(uU=l._Sqrt=l.asm.Sqrt).apply(null,arguments)},cU=l._Square=function(){return(cU=l._Square=l.asm.Square).apply(null,arguments)},pU=l._SquaredDifference=function(){return(pU=l._SquaredDifference=l.asm.SquaredDifference).apply(null,arguments)},mU=l._Step=function(){return(mU=l._Step=l.asm.Step).apply(null,arguments)},fU=l._StridedSlice=function(){return(fU=l._StridedSlice=l.asm.StridedSlice).apply(null,arguments)},dU=l._Sub=function(){return(dU=l._Sub=l.asm.Sub).apply(null,arguments)},hU=l._Sum=function(){return(hU=l._Sum=l.asm.Sum).apply(null,arguments)},gU=l._Tan=function(){return(gU=l._Tan=l.asm.Tan).apply(null,arguments)},xU=l._Tanh=function(){return(xU=l._Tanh=l.asm.Tanh).apply(null,arguments)},yU=l._Tile=function(){return(yU=l._Tile=l.asm.Tile).apply(null,arguments)},bU=l._TopK=function(){return(bU=l._TopK=l.asm.TopK).apply(null,arguments)},wU=l._Transform=function(){return(wU=l._Transform=l.asm.Transform).apply(null,arguments)},CU=l._Transpose=function(){return(CU=l._Transpose=l.asm.Transpose).apply(null,arguments)},IU=l.__FusedMatMul=function(){return(IU=l.__FusedMatMul=l.asm._FusedMatMul).apply(null,arguments)},vU=l._malloc=function(){return(vU=l._malloc=l.asm.malloc).apply(null,arguments)},SU=l._free=function(){return(SU=l._free=l.asm.free).apply(null,arguments)},NU=l.__emscripten_tls_init=function(){return(NU=l.__emscripten_tls_init=l.asm._emscripten_tls_init).apply(null,arguments)},Rg=l._pthread_self=function(){return(Rg=l._pthread_self=l.asm.pthread_self).apply(null,arguments)},TU=l.___errno_location=function(){return(TU=l.___errno_location=l.asm.__errno_location).apply(null,arguments)},Zk=l.__emscripten_thread_init=function(){return(Zk=l.__emscripten_thread_init=l.asm._emscripten_thread_init).apply(null,arguments)},kU=l.__emscripten_thread_crashed=function(){return(kU=l.__emscripten_thread_crashed=l.asm._emscripten_thread_crashed).apply(null,arguments)},EU=l._emscripten_main_thread_process_queued_calls=function(){return(EU=l._emscripten_main_thread_process_queued_calls=l.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},_U=l._emscripten_main_browser_thread_id=function(){return(_U=l._emscripten_main_browser_thread_id=l.asm.emscripten_main_browser_thread_id).apply(null,arguments)},Jk=l._emscripten_run_in_main_runtime_thread_js=function(){return(Jk=l._emscripten_run_in_main_runtime_thread_js=l.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},AU=l._emscripten_dispatch_to_thread_=function(){return(AU=l._emscripten_dispatch_to_thread_=l.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},Qk=l.__emscripten_proxy_execute_task_queue=function(){return(Qk=l.__emscripten_proxy_execute_task_queue=l.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},Qv=l.__emscripten_thread_free_data=function(){return(Qv=l.__emscripten_thread_free_data=l.asm._emscripten_thread_free_data).apply(null,arguments)},t1=l.__emscripten_thread_exit=function(){return(t1=l.__emscripten_thread_exit=l.asm._emscripten_thread_exit).apply(null,arguments)},e1=l._emscripten_stack_set_limits=function(){return(e1=l._emscripten_stack_set_limits=l.asm.emscripten_stack_set_limits).apply(null,arguments)},t0=l.stackSave=function(){return(t0=l.stackSave=l.asm.stackSave).apply(null,arguments)},Fg=l.stackRestore=function(){return(Fg=l.stackRestore=l.asm.stackRestore).apply(null,arguments)},Og=l.stackAlloc=function(){return(Og=l.stackAlloc=l.asm.stackAlloc).apply(null,arguments)},$U=l.dynCall_iijjiiii=function(){return($U=l.dynCall_iijjiiii=l.asm.dynCall_iijjiiii).apply(null,arguments)},DU=l.dynCall_jiji=function(){return(DU=l.dynCall_jiji=l.asm.dynCall_jiji).apply(null,arguments)};l.keepRuntimeAlive=Mo,l.wasmMemory=st,l.cwrap=ZI,l.ExitStatus=_u,l.PThread=jt;var Pg;na=function L(){Pg||r1(),Pg||(na=L)};function r1(L){if(L=L||d,Nl>0)return;if(C){c(l),Er(),startWorker(l);return}if(si(),Nl>0)return;function U(){Pg||(Pg=!0,l.calledRun=!0,!gt&&(Er(),c(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),ra()))}l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),U()},1)):U()}if(l.preInit)for(typeof l.preInit=="function"&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();r1();var Lg;m&&(Lg={uncaughtException:process.listeners("uncaughtException").filter(function(L){return!m.uncaughtException.indexOf(L)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(L){return!m.unhandledRejection.indexOf(L)>-1})});var Mg;if(typeof WasmBackendModule!="undefined")Mg=WasmBackendModule;else if(typeof t!="undefined")Mg=t;else throw new Error("Could not find wasm module in post.js");if(Lg){var RU=Mg._dispose;Mg._dispose=function(){RU(),Lg.uncaughtException.forEach(function(L){process.removeListener("uncaughtException",L)}),Lg.unhandledRejection.forEach(function(L){process.removeListener("unhandledRejection",L)})}}return t.ready}})();typeof fI=="object"&&typeof Bk=="object"?Bk.exports=zk:typeof define=="function"&&define.amd?define([],function(){return zk}):typeof fI=="object"&&(fI.WasmBackendModuleThreadedSimd=zk)});var jW=br((g8e,KW)=>{KW.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`});var XW=br((dI,Gk)=>{var Vk=(()=>{var r=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(r=r||__filename),function(t){t=t||{};var e=typeof t!="undefined"?t:{},n,o;e.ready=new Promise(function(j,ct){n=j,o=ct});var s;typeof process!="undefined"&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i=Object.assign({},e),a=[],u="./this.program",l=(j,ct)=>{throw ct},c=typeof window=="object",p=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",f="";function d(j){return e.locateFile?e.locateFile(j,f):f+j}var h,g,x,b;function w(j){if(j instanceof Yc)return;A("exiting due to exception: "+j)}if(m){var C=Zb(),N=Mk();p?f=N.dirname(f)+"/":f=__dirname+"/",h=(j,ct)=>(j=si(j)?new URL(j):N.normalize(j),C.readFileSync(j,ct?void 0:"utf8")),x=j=>{var ct=h(j,!0);return ct.buffer||(ct=new Uint8Array(ct)),ct},g=(j,ct,Dt)=>{j=si(j)?new URL(j):N.normalize(j),C.readFile(j,function(ce,Xe){ce?Dt(ce):ct(Xe.buffer)})},process.argv.length>1&&(u=process.argv[1].replace(/\\/g,"/")),a=process.argv.slice(2),process.on("uncaughtException",function(j){if(!(j instanceof Yc))throw j}),process.on("unhandledRejection",function(j){throw j}),l=(j,ct)=>{if(fe())throw process.exitCode=j,ct;w(ct),process.exit(j)},e.inspect=function(){return"[Emscripten Module object]"}}else(c||p)&&(p?f=self.location.href:typeof document!="undefined"&&document.currentScript&&(f=document.currentScript.src),r&&(f=r),f.indexOf("blob:")!==0?f=f.substr(0,f.replace(/[?#].*/,"").lastIndexOf("/")+1):f="",h=j=>{var ct=new XMLHttpRequest;return ct.open("GET",j,!1),ct.send(null),ct.responseText},p&&(x=j=>{var ct=new XMLHttpRequest;return ct.open("GET",j,!1),ct.responseType="arraybuffer",ct.send(null),new Uint8Array(ct.response)}),g=(j,ct,Dt)=>{var ce=new XMLHttpRequest;ce.open("GET",j,!0),ce.responseType="arraybuffer",ce.onload=()=>{if(ce.status==200||ce.status==0&&ce.response){ct(ce.response);return}Dt()},ce.onerror=Dt,ce.send(null)},b=j=>document.title=j);var _=e.print||console.log.bind(console),A=e.printErr||console.warn.bind(console);Object.assign(e,i),i=null,e.arguments&&(a=e.arguments),e.thisProgram&&(u=e.thisProgram),e.quit&&(l=e.quit);var $=4,F;e.wasmBinary&&(F=e.wasmBinary);var P=e.noExitRuntime||!0;typeof WebAssembly!="object"&&Zr("no native wasm support detected");var V,G=!1,W;function q(j,ct){j||Zr(ct)}var H=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function K(j,ct,Dt){for(var ce=ct+Dt,Xe=ct;j[Xe]&&!(Xe>=ce);)++Xe;if(Xe-ct>16&&j.buffer&&H)return H.decode(j.subarray(ct,Xe));for(var Ye="";ct<Xe;){var ne=j[ct++];if(!(ne&128)){Ye+=String.fromCharCode(ne);continue}var re=j[ct++]&63;if((ne&224)==192){Ye+=String.fromCharCode((ne&31)<<6|re);continue}var yr=j[ct++]&63;if((ne&240)==224?ne=(ne&15)<<12|re<<6|yr:ne=(ne&7)<<18|re<<12|yr<<6|j[ct++]&63,ne<65536)Ye+=String.fromCharCode(ne);else{var Xn=ne-65536;Ye+=String.fromCharCode(55296|Xn>>10,56320|Xn&1023)}}return Ye}function X(j,ct){return j?K(at,j,ct):""}function Z(j,ct,Dt,ce){if(!(ce>0))return 0;for(var Xe=Dt,Ye=Dt+ce-1,ne=0;ne<j.length;++ne){var re=j.charCodeAt(ne);if(re>=55296&&re<=57343){var yr=j.charCodeAt(++ne);re=65536+((re&1023)<<10)|yr&1023}if(re<=127){if(Dt>=Ye)break;ct[Dt++]=re}else if(re<=2047){if(Dt+1>=Ye)break;ct[Dt++]=192|re>>6,ct[Dt++]=128|re&63}else if(re<=65535){if(Dt+2>=Ye)break;ct[Dt++]=224|re>>12,ct[Dt++]=128|re>>6&63,ct[Dt++]=128|re&63}else{if(Dt+3>=Ye)break;ct[Dt++]=240|re>>18,ct[Dt++]=128|re>>12&63,ct[Dt++]=128|re>>6&63,ct[Dt++]=128|re&63}}return ct[Dt]=0,Dt-Xe}function et(j,ct,Dt){return Z(j,at,ct,Dt)}var rt,ot,at,nt,st,ft,gt,Ct,$t;function _t(j){rt=j,e.HEAP8=ot=new Int8Array(j),e.HEAP16=nt=new Int16Array(j),e.HEAP32=ft=new Int32Array(j),e.HEAPU8=at=new Uint8Array(j),e.HEAPU16=st=new Uint16Array(j),e.HEAPU32=gt=new Uint32Array(j),e.HEAPF32=Ct=new Float32Array(j),e.HEAPF64=$t=new Float64Array(j)}var Gt=e.INITIAL_MEMORY||16777216,Wt,ue=[],he=[],ee=[],ge=!1;function fe(){return P}function Ae(){if(e.preRun)for(typeof e.preRun=="function"&&(e.preRun=[e.preRun]);e.preRun.length;)ar(e.preRun.shift());na(ue)}function $e(){ge=!0,na(he)}function $n(){if(e.postRun)for(typeof e.postRun=="function"&&(e.postRun=[e.postRun]);e.postRun.length;)zr(e.postRun.shift());na(ee)}function ar(j){ue.unshift(j)}function qn(j){he.unshift(j)}function zr(j){ee.unshift(j)}var je=0,Br=null,Vr=null;function Kn(j){je++,e.monitorRunDependencies&&e.monitorRunDependencies(je)}function jn(j){if(je--,e.monitorRunDependencies&&e.monitorRunDependencies(je),je==0&&(Br!==null&&(clearInterval(Br),Br=null),Vr)){var ct=Vr;Vr=null,ct()}}function Zr(j){e.onAbort&&e.onAbort(j),j="Aborted("+j+")",A(j),G=!0,W=1,j+=". Build with -sASSERTIONS for more info.";var ct=new WebAssembly.RuntimeError(j);throw o(ct),ct}var ea="data:application/octet-stream;base64,";function Mo(j){return j.startsWith(ea)}function si(j){return j.startsWith("file://")}var Er;Er="tfjs-backend-wasm.wasm",Mo(Er)||(Er=d(Er));function ra(j){try{if(j==Er&&F)return new Uint8Array(F);if(x)return x(j);throw"both async and sync fetching of the wasm failed"}catch(ct){Zr(ct)}}function Od(){if(!F&&(c||p)){if(typeof fetch=="function"&&!si(Er))return fetch(Er,{credentials:"same-origin"}).then(function(j){if(!j.ok)throw"failed to load wasm binary file at '"+Er+"'";return j.arrayBuffer()}).catch(function(){return ra(Er)});if(g)return new Promise(function(j,ct){g(Er,function(Dt){j(new Uint8Array(Dt))},ct)})}return Promise.resolve().then(function(){return ra(Er)})}function Pd(){var j={env:Ld,wasi_snapshot_preview1:Ld};function ct(ne,re){var yr=ne.exports;e.asm=yr,V=e.asm.memory,_t(V.buffer),Wt=e.asm.__indirect_function_table,qn(e.asm.__wasm_call_ctors),jn("wasm-instantiate")}Kn("wasm-instantiate");function Dt(ne){ct(ne.instance)}function ce(ne){return Od().then(function(re){return WebAssembly.instantiate(re,j)}).then(function(re){return re}).then(ne,function(re){A("failed to asynchronously prepare wasm: "+re),Zr(re)})}function Xe(){return!F&&typeof WebAssembly.instantiateStreaming=="function"&&!Mo(Er)&&!si(Er)&&!m&&typeof fetch=="function"?fetch(Er,{credentials:"same-origin"}).then(function(ne){var re=WebAssembly.instantiateStreaming(ne,j);return re.then(Dt,function(yr){return A("wasm streaming compile failed: "+yr),A("falling back to ArrayBuffer instantiation"),ce(Dt)})}):ce(Dt)}if(e.instantiateWasm)try{var Ye=e.instantiateWasm(j,ct);return Ye}catch(ne){A("Module.instantiateWasm callback failed with error: "+ne),o(ne)}return Xe().catch(o),{}}var Kk,Nl;function Yc(j){this.name="ExitStatus",this.message="Program terminated with exit("+j+")",this.status=j}function na(j){for(;j.length>0;)j.shift()(e)}function gI(){Zr("")}function mg(){return 2147483648}function Eu(){return mg()}function xI(j,ct,Dt){at.copyWithin(j,ct,ct+Dt)}function fg(j){try{return V.grow(j-rt.byteLength+65535>>>16),_t(V.buffer),1}catch(ct){}}function Zc(j){var ct=at.length;j=j>>>0;var Dt=mg();if(j>Dt)return!1;let ce=(yr,Xn)=>yr+(Xn-yr%Xn)%Xn;for(var Xe=1;Xe<=4;Xe*=2){var Ye=ct*(1+.2/Xe);Ye=Math.min(Ye,j+100663296);var ne=Math.min(Dt,ce(Math.max(j,Ye),65536)),re=fg(ne);if(re)return!0}return!1}var Jr={varargs:void 0,get:function(){Jr.varargs+=4;var j=ft[Jr.varargs-4>>2];return j},getStr:function(j){var ct=X(j);return ct}};function dg(j){return 52}function yI(j,ct,Dt,ce,Xe){return 70}var bI=[null,[],[]];function jk(j,ct){var Dt=bI[j];ct===0||ct===10?((j===1?_:A)(K(Dt,0)),Dt.length=0):Dt.push(ct)}function Xk(j,ct,Dt,ce){for(var Xe=0,Ye=0;Ye<Dt;Ye++){var ne=gt[ct>>2],re=gt[ct+4>>2];ct+=8;for(var yr=0;yr<re;yr++)jk(j,at[ne+yr]);Xe+=re}return gt[ce>>2]=Xe,0}function hg(j){var ct=e["_"+j];return ct}function _u(j,ct){ot.set(j,ct)}function wI(j,ct,Dt,ce,Xe){var Ye={string:nn=>{var kl=0;if(nn!=null&&nn!==0){var Dg=(nn.length<<2)+1;kl=Gd(Dg),et(nn,kl,Dg)}return kl},array:nn=>{var kl=Gd(nn.length);return _u(nn,kl),kl}};function ne(nn){return ct==="string"?X(nn):ct==="boolean"?Boolean(nn):nn}var re=hg(j),yr=[],Xn=0;if(ce)for(var oa=0;oa<ce.length;oa++){var $g=Ye[Dt[oa]];$g?(Xn===0&&(Xn=Eg()),yr[oa]=$g(ce[oa])):yr[oa]=ce[oa]}var Wd=re.apply(null,yr);function Jv(nn){return Xn!==0&&_g(Xn),ne(nn)}return Wd=Jv(Wd),Wd}function CI(j,ct,Dt,ce){Dt=Dt||[];var Xe=Dt.every(ne=>ne==="number"||ne==="boolean"),Ye=ct!=="string";return Ye&&Xe&&!ce?hg(j):function(){return wI(j,ct,Dt,arguments,ce)}}var Ld={abort:gI,emscripten_get_heap_max:Eu,emscripten_memcpy_big:xI,emscripten_resize_heap:Zc,fd_close:dg,fd_seek:yI,fd_write:Xk},II=Pd(),gg=e.___wasm_call_ctors=function(){return(gg=e.___wasm_call_ctors=e.asm.__wasm_call_ctors).apply(null,arguments)},xg=e._init=function(){return(xg=e._init=e.asm.init).apply(null,arguments)},vI=e._init_with_threads_count=function(){return(vI=e._init_with_threads_count=e.asm.init_with_threads_count).apply(null,arguments)},yg=e._get_threads_count=function(){return(yg=e._get_threads_count=e.asm.get_threads_count).apply(null,arguments)},SI=e._register_tensor=function(){return(SI=e._register_tensor=e.asm.register_tensor).apply(null,arguments)},jt=e._dispose_data=function(){return(jt=e._dispose_data=e.asm.dispose_data).apply(null,arguments)},Md=e._dispose=function(){return(Md=e._dispose=e.asm.dispose).apply(null,arguments)},NI=e._Abs=function(){return(NI=e._Abs=e.asm.Abs).apply(null,arguments)},bg=e._Add=function(){return(bg=e._Add=e.asm.Add).apply(null,arguments)},Jc=e._AddN=function(){return(Jc=e._AddN=e.asm.AddN).apply(null,arguments)},TI=e._All=function(){return(TI=e._All=e.asm.All).apply(null,arguments)},kI=e._Any=function(){return(kI=e._Any=e.asm.Any).apply(null,arguments)},EI=e._ArgMax=function(){return(EI=e._ArgMax=e.asm.ArgMax).apply(null,arguments)},_I=e._AvgPool=function(){return(_I=e._AvgPool=e.asm.AvgPool).apply(null,arguments)},AI=e._BatchMatMul=function(){return(AI=e._BatchMatMul=e.asm.BatchMatMul).apply(null,arguments)},wg=e._Ceil=function(){return(wg=e._Ceil=e.asm.Ceil).apply(null,arguments)},Cg=e._ClipByValue=function(){return(Cg=e._ClipByValue=e.asm.ClipByValue).apply(null,arguments)},$I=e._Conv2D=function(){return($I=e._Conv2D=e.asm.Conv2D).apply(null,arguments)},DI=e._Conv2DBackpropInput=function(){return(DI=e._Conv2DBackpropInput=e.asm.Conv2DBackpropInput).apply(null,arguments)},RI=e._Cos=function(){return(RI=e._Cos=e.asm.Cos).apply(null,arguments)},zd=e._Cosh=function(){return(zd=e._Cosh=e.asm.Cosh).apply(null,arguments)},FI=e._CropAndResize=function(){return(FI=e._CropAndResize=e.asm.CropAndResize).apply(null,arguments)},OI=e._Cumprod=function(){return(OI=e._Cumprod=e.asm.Cumprod).apply(null,arguments)},PI=e._Cumsum=function(){return(PI=e._Cumsum=e.asm.Cumsum).apply(null,arguments)},Au=e._DepthToSpace=function(){return(Au=e._DepthToSpace=e.asm.DepthToSpace).apply(null,arguments)},LI=e._DepthwiseConv2dNative=function(){return(LI=e._DepthwiseConv2dNative=e.asm.DepthwiseConv2dNative).apply(null,arguments)},MI=e._Elu=function(){return(MI=e._Elu=e.asm.Elu).apply(null,arguments)},Ig=e._Equal=function(){return(Ig=e._Equal=e.asm.Equal).apply(null,arguments)},zI=e._Exp=function(){return(zI=e._Exp=e.asm.Exp).apply(null,arguments)},Bd=e._FlipLeftRight=function(){return(Bd=e._FlipLeftRight=e.asm.FlipLeftRight).apply(null,arguments)},BI=e._Floor=function(){return(BI=e._Floor=e.asm.Floor).apply(null,arguments)},VI=e._FloorDiv=function(){return(VI=e._FloorDiv=e.asm.FloorDiv).apply(null,arguments)},GI=e._FusedBatchNorm=function(){return(GI=e._FusedBatchNorm=e.asm.FusedBatchNorm).apply(null,arguments)},Tl=e._FusedConv2D=function(){return(Tl=e._FusedConv2D=e.asm.FusedConv2D).apply(null,arguments)},Vd=e._FusedDepthwiseConv2D=function(){return(Vd=e._FusedDepthwiseConv2D=e.asm.FusedDepthwiseConv2D).apply(null,arguments)},WI=e._Gather=function(){return(WI=e._Gather=e.asm.Gather).apply(null,arguments)},UI=e._GatherNd=function(){return(UI=e._GatherNd=e.asm.GatherNd).apply(null,arguments)},HI=e._Greater=function(){return(HI=e._Greater=e.asm.Greater).apply(null,arguments)},qI=e._GreaterEqual=function(){return(qI=e._GreaterEqual=e.asm.GreaterEqual).apply(null,arguments)},vg=e._IsNan=function(){return(vg=e._IsNan=e.asm.IsNan).apply(null,arguments)},Sg=e._LeakyRelu=function(){return(Sg=e._LeakyRelu=e.asm.LeakyRelu).apply(null,arguments)},KI=e._Less=function(){return(KI=e._Less=e.asm.Less).apply(null,arguments)},jI=e._LessEqual=function(){return(jI=e._LessEqual=e.asm.LessEqual).apply(null,arguments)},Ng=e._Log=function(){return(Ng=e._Log=e.asm.Log).apply(null,arguments)},Tg=e._LogicalAnd=function(){return(Tg=e._LogicalAnd=e.asm.LogicalAnd).apply(null,arguments)},XI=e._LogicalNot=function(){return(XI=e._LogicalNot=e.asm.LogicalNot).apply(null,arguments)},YI=e._LogicalOr=function(){return(YI=e._LogicalOr=e.asm.LogicalOr).apply(null,arguments)},ZI=e._LogicalXor=function(){return(ZI=e._LogicalXor=e.asm.LogicalXor).apply(null,arguments)},JI=e._Max=function(){return(JI=e._Max=e.asm.Max).apply(null,arguments)},kg=e._MaxPool=function(){return(kg=e._MaxPool=e.asm.MaxPool).apply(null,arguments)},Yk=e._Maximum=function(){return(Yk=e._Maximum=e.asm.Maximum).apply(null,arguments)},QI=e._Mean=function(){return(QI=e._Mean=e.asm.Mean).apply(null,arguments)},tv=e._Min=function(){return(tv=e._Min=e.asm.Min).apply(null,arguments)},ev=e._Minimum=function(){return(ev=e._Minimum=e.asm.Minimum).apply(null,arguments)},rv=e._MirrorPad=function(){return(rv=e._MirrorPad=e.asm.MirrorPad).apply(null,arguments)},nv=e._Multiply=function(){return(nv=e._Multiply=e.asm.Multiply).apply(null,arguments)},ov=e._Neg=function(){return(ov=e._Neg=e.asm.Neg).apply(null,arguments)},sv=e._NonMaxSuppressionV3=function(){return(sv=e._NonMaxSuppressionV3=e.asm.NonMaxSuppressionV3).apply(null,arguments)},iv=e._NonMaxSuppressionV4=function(){return(iv=e._NonMaxSuppressionV4=e.asm.NonMaxSuppressionV4).apply(null,arguments)},av=e._NonMaxSuppressionV5=function(){return(av=e._NonMaxSuppressionV5=e.asm.NonMaxSuppressionV5).apply(null,arguments)},lv=e._NotEqual=function(){return(lv=e._NotEqual=e.asm.NotEqual).apply(null,arguments)},uv=e._OneHot=function(){return(uv=e._OneHot=e.asm.OneHot).apply(null,arguments)},cv=e._PadV2=function(){return(cv=e._PadV2=e.asm.PadV2).apply(null,arguments)},pv=e._Pow=function(){return(pv=e._Pow=e.asm.Pow).apply(null,arguments)},mv=e._Prelu=function(){return(mv=e._Prelu=e.asm.Prelu).apply(null,arguments)},fv=e._Prod=function(){return(fv=e._Prod=e.asm.Prod).apply(null,arguments)},dv=e._RealDiv=function(){return(dv=e._RealDiv=e.asm.RealDiv).apply(null,arguments)},hv=e._Reciprocal=function(){return(hv=e._Reciprocal=e.asm.Reciprocal).apply(null,arguments)},gv=e._Relu=function(){return(gv=e._Relu=e.asm.Relu).apply(null,arguments)},xv=e._Relu6=function(){return(xv=e._Relu6=e.asm.Relu6).apply(null,arguments)},yv=e._ResizeBilinear=function(){return(yv=e._ResizeBilinear=e.asm.ResizeBilinear).apply(null,arguments)},bv=e._ResizeNearestNeighbor=function(){return(bv=e._ResizeNearestNeighbor=e.asm.ResizeNearestNeighbor).apply(null,arguments)},wv=e._Reverse=function(){return(wv=e._Reverse=e.asm.Reverse).apply(null,arguments)},Cv=e._RotateWithOffset=function(){return(Cv=e._RotateWithOffset=e.asm.RotateWithOffset).apply(null,arguments)},Iv=e._Round=function(){return(Iv=e._Round=e.asm.Round).apply(null,arguments)},vv=e._Rsqrt=function(){return(vv=e._Rsqrt=e.asm.Rsqrt).apply(null,arguments)},Sv=e._ScatterNd=function(){return(Sv=e._ScatterNd=e.asm.ScatterNd).apply(null,arguments)},Nv=e._SelectV2=function(){return(Nv=e._SelectV2=e.asm.SelectV2).apply(null,arguments)},Tv=e._Sigmoid=function(){return(Tv=e._Sigmoid=e.asm.Sigmoid).apply(null,arguments)},kv=e._Sin=function(){return(kv=e._Sin=e.asm.Sin).apply(null,arguments)},Ev=e._Softmax=function(){return(Ev=e._Softmax=e.asm.Softmax).apply(null,arguments)},_v=e._SparseFillEmptyRows=function(){return(_v=e._SparseFillEmptyRows=e.asm.SparseFillEmptyRows).apply(null,arguments)},Av=e._SparseReshape=function(){return(Av=e._SparseReshape=e.asm.SparseReshape).apply(null,arguments)},$v=e._SparseSegmentReduction=function(){return($v=e._SparseSegmentReduction=e.asm.SparseSegmentReduction).apply(null,arguments)},Dv=e._Sqrt=function(){return(Dv=e._Sqrt=e.asm.Sqrt).apply(null,arguments)},Rv=e._Square=function(){return(Rv=e._Square=e.asm.Square).apply(null,arguments)},Fv=e._SquaredDifference=function(){return(Fv=e._SquaredDifference=e.asm.SquaredDifference).apply(null,arguments)},Ov=e._Step=function(){return(Ov=e._Step=e.asm.Step).apply(null,arguments)},Pv=e._StridedSlice=function(){return(Pv=e._StridedSlice=e.asm.StridedSlice).apply(null,arguments)},Lv=e._Sub=function(){return(Lv=e._Sub=e.asm.Sub).apply(null,arguments)},Mv=e._Sum=function(){return(Mv=e._Sum=e.asm.Sum).apply(null,arguments)},zv=e._Tan=function(){return(zv=e._Tan=e.asm.Tan).apply(null,arguments)},Bv=e._Tanh=function(){return(Bv=e._Tanh=e.asm.Tanh).apply(null,arguments)},Vv=e._Tile=function(){return(Vv=e._Tile=e.asm.Tile).apply(null,arguments)},Gv=e._TopK=function(){return(Gv=e._TopK=e.asm.TopK).apply(null,arguments)},Wv=e._Transform=function(){return(Wv=e._Transform=e.asm.Transform).apply(null,arguments)},Uv=e._Transpose=function(){return(Uv=e._Transpose=e.asm.Transpose).apply(null,arguments)},Hv=e.__FusedMatMul=function(){return(Hv=e.__FusedMatMul=e.asm._FusedMatMul).apply(null,arguments)},qv=e._malloc=function(){return(qv=e._malloc=e.asm.malloc).apply(null,arguments)},Kv=e._free=function(){return(Kv=e._free=e.asm.free).apply(null,arguments)},jv=e.___errno_location=function(){return(jv=e.___errno_location=e.asm.__errno_location).apply(null,arguments)},Eg=e.stackSave=function(){return(Eg=e.stackSave=e.asm.stackSave).apply(null,arguments)},_g=e.stackRestore=function(){return(_g=e.stackRestore=e.asm.stackRestore).apply(null,arguments)},Gd=e.stackAlloc=function(){return(Gd=e.stackAlloc=e.asm.stackAlloc).apply(null,arguments)},Xv=e.dynCall_iijjiiii=function(){return(Xv=e.dynCall_iijjiiii=e.asm.dynCall_iijjiiii).apply(null,arguments)},Yv=e.dynCall_jiji=function(){return(Yv=e.dynCall_jiji=e.asm.dynCall_jiji).apply(null,arguments)};e.cwrap=CI;var Qc;Vr=function j(){Qc||Ag(),Qc||(Vr=j)};function Ag(j){if(j=j||a,je>0||(Ae(),je>0))return;function ct(){Qc||(Qc=!0,e.calledRun=!0,!G&&($e(),n(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),$n()))}e.setStatus?(e.setStatus("Running..."),setTimeout(function(){setTimeout(function(){e.setStatus("")},1),ct()},1)):ct()}if(e.preInit)for(typeof e.preInit=="function"&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();Ag();var tp;s&&(tp={uncaughtException:process.listeners("uncaughtException").filter(function(j){return!s.uncaughtException.indexOf(j)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(j){return!s.unhandledRejection.indexOf(j)>-1})});var ep;if(typeof t!="undefined")ep=t;else if(typeof WasmBackendModuleThreadedSimd!="undefined")ep=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(tp){var Zv=ep._dispose;ep._dispose=function(){Zv(),tp.uncaughtException.forEach(function(j){process.removeListener("uncaughtException",j)}),tp.unhandledRejection.forEach(function(j){process.removeListener("unhandledRejection",j)})}}return t.ready}})();typeof dI=="object"&&typeof Gk=="object"?Gk.exports=Vk:typeof define=="function"&&define.amd?define([],function(){return Vk}):typeof dI=="object"&&(dI.WasmBackendModule=Vk)});var ia=class{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}},zo=class{refCount(t){return Rn("refCount")}incRef(t){return Rn("incRef")}timerAvailable(){return!0}time(t){return Rn("time")}read(t){return Rn("read")}readSync(t){return Rn("readSync")}readToGPU(t,e){return Rn("readToGPU")}numDataIds(){return Rn("numDataIds")}disposeData(t,e){return Rn("disposeData")}write(t,e,n){return Rn("write")}move(t,e,n,o,s){return Rn("move")}createTensorFromGPUData(t,e,n){return Rn("createTensorFromGPUData")}memory(){return Rn("memory")}floatPrecision(){return Rn("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return Rn("dispose")}};function Rn(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function s1(r){let t=r.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,zg(r,t,e)}function VU(r,t){if(r.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${t.length}`);let e=r.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,zg(r,e,n),zg(t,e,n)}function np(r,t,e){return Math.max(r,Math.min(t,e))}function GU(r){return r%2===0?r:r+1}function zg(r,t,e){let n=r[t];r[t]=r[e],r[e]=n}function WU(r){let t=0;for(let e=0;e<r.length;e++)t+=r[e];return t}function UU(r,t){let e=Math.random();return t*e+(1-e)*r}function HU(r,t){let e=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(t[n]);e+=o*o}return e}function E(r,t){if(!r)throw new Error(typeof t=="string"?t:t())}function Re(r,t,e=""){E(Fn(r,t),()=>e+` Shapes ${r} and ${t} must match`)}function Zn(r){E(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Jt(r){if(r.length===0)return 1;let t=r[0];for(let e=1;e<r.length;e++)t*=r[e];return t}function qU(r){return r.length===0}function Fn(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==t[e])return!1;return!0}function aa(r){return r%1===0}function KU(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let t=Math.exp(2*r);return(t-1)/(t+1)}}function jU(r){let t=Math.ceil(Math.sqrt(r));return[t,Math.ceil(r/t)]}function XU(r){let t=new Uint32Array(r);for(let e=0;e<r;++e)t[e]=e;return s1(t),t}function Du(r,t){return t<=r.length?r:r+" ".repeat(t-r.length)}function YU(r,t=o=>0,e,n){return new Promise((o,s)=>{let i=0,a=()=>{if(r()){o();return}i++;let u=t(i);if(e!=null&&i>=e){s();return}n!=null?n(a,u):setTimeout(a,u)};a()})}function ZU(r,t){let e=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)e*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${r}`);return r}if(e===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let o=r.slice();return o[n]=t/e,o}function pr(r,t){let e=t.length;return r=r==null?t.map((n,o)=>o):[].concat(r),E(r.every(n=>n>=-e&&n<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${r}`),E(r.every(n=>aa(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?e+n:n)}function n0(r,t){let e=[],n=[],o=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||o?null:pr(t,r).sort(),i=0;for(let a=0;a<r.length;++a){if(s!=null){if(s[i]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(s[i]==null||s[i]>a)&&r[a]===1&&(e.push(r[a]),n.push(a)),s[i]<=a&&i++}r[a]!==1&&(e.push(r[a]),n.push(a))}return{newShape:e,keptDims:n}}function o0(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else throw new Error(`Unknown data type ${r}`);return e}function s0(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else if(r==="string")e=new Array(t);else throw new Error(`Unknown data type ${r}`);return e}function i0(r,t){for(let e=0;e<r.length;e++){let n=r[e];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function a0(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function JU(r,t){return!(t==="complex64"||t==="float32"&&r!=="complex64"||t==="int32"&&r!=="float32"&&r!=="complex64"||t==="bool"&&r==="bool")}function op(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function l0(r){if(r==null)return 0;let t=0;return r.forEach(e=>t+=e.length),t}function Bo(r){return typeof r=="string"||r instanceof String}function i1(r){return typeof r=="boolean"}function a1(r){return typeof r=="number"}function sp(r){return Array.isArray(r)?sp(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":a1(r)?"float32":Bo(r)?"string":i1(r)?"bool":"float32"}function ii(r){return!!(r&&r.constructor&&r.call&&r.apply)}function ip(r,t){for(let e=t;e<r;++e)if(r%e===0)return e;return r}function ai(r){let t=r.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=r[t-1];for(let n=t-3;n>=0;--n)e[n]=e[n+1]*r[n+1];return e}function l1(r,t,e,n=!1){let o=new Array;if(t.length===1){let s=t[0]*(n?2:1);for(let i=0;i<s;i++)o[i]=e[r+i]}else{let s=t[0],i=t.slice(1),a=i.reduce((u,l)=>u*l)*(n?2:1);for(let u=0;u<s;u++)o[u]=l1(r+u*a,i,e,n)}return o}function $u(r,t,e=!1){if(r.length===0)return t[0];let n=r.reduce((o,s)=>o*s)*(e?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${r}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return l1(0,r,t,e)}function QU(r,t){if(Array.isArray(r))return r;if(t==="float32")return r instanceof Float32Array?r:new Float32Array(r);if(t==="int32")return r instanceof Int32Array?r:new Int32Array(r);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${t}`)}function Ud(r,t){let e=ap(r,t);for(let n=0;n<e.length;n++)e[n]=1;return e}function ap(r,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${t}`)}function t4(r,t){let e=r.reduce((n,o)=>n*o,1);if(t==null||t==="float32")return $u(r,new Float32Array(e));if(t==="int32")return $u(r,new Int32Array(e));if(t==="bool")return $u(r,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Le(r){r.forEach(t=>{E(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function e4(r,t,e){if(t===0)return 0;if(t===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=e[o]*r[o];return n}function r4(r,t,e){if(t===0)return[];if(t===1)return[r];let n=new Array(t);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/e[o]),r-=n[o]*e[o];return n[n.length-1]=r,n}function Ru(r){return r&&r.then&&typeof r.then=="function"}var u1="tfjsflags",Hd=class{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o4,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},this.urlFlags[t]!=null){let o=this.urlFlags[t];M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${o}.`),this.set(t,o)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(Ru(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let t=this.getQueryParams(this.global.location.search);u1 in t&&t[u1].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=i4(o,s)})}};function o4(r){let t={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(s4(t,n[0],n[1]),n.join("="))),t}function s4(r,t,e){r[decodeURIComponent(t)]=decodeURIComponent(e||"")}function i4(r,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${r}.`)}function M(){return u0}var u0=null;function c1(r){u0=r}var c0;function p0(){if(c0==null){let r;if(typeof window!="undefined")r=window;else if(typeof global!="undefined")r=global;else if(typeof process!="undefined")r=process;else if(typeof self!="undefined")r=self;else throw new Error("Could not find a global object");c0=r}return c0}function a4(){let r=p0();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function qd(r,t){let e=a4();if(e.has(r))return e.get(r);{let n=t();return e.set(r,n),e.get(r)}}var li="Abs",la="Acos",ua="Acosh",Jn="Add",Vo="AddN",ca="All",pa="Any",Go="ArgMax",_l="ArgMin",ma="Asin",fa="Asinh",da="Atan",ha="Atanh",ga="Atan2",Wo="AvgPool",lp="AvgPoolGrad",Al="AvgPool3D",up="AvgPool3DGrad",Uo="BatchMatMul",ui="BatchToSpaceND",cp="Bincount",p1="BroadcastTo",pp="BroadcastArgs",uo="Cast",Ho="Ceil",co="ClipByValue",mp="Complex",$l="ComplexAbs",ci="Concat",qo="Conv2D",fp="Conv2DBackpropFilter",Ko="Conv2DBackpropInput",Dl="Conv3D",dp="Conv3DBackpropFilterV2",hp="Conv3DBackpropInputV2",jo="Cos",Xo="Cosh",xa="Cumprod",Yo="Cumsum",ya="CropAndResize",gp="DenseBincount",ba="DepthToSpace",Zo="DepthwiseConv2dNative",xp="DepthwiseConv2dNativeBackpropFilter",yp="DepthwiseConv2dNativeBackpropInput",bp="Diag",Rl="Dilation2D",Kd="Dilation2DBackpropInput",jd="Dilation2DBackpropFilter",Jo="RealDiv",wp="Einsum",Qo="Elu",Cp="EluGrad",wa="Erf",Ca="Equal",ts="Exp",pi="ExpandDims",Ia="Expm1",Ip="FFT",Fl="Fill",va="FlipLeftRight",es="Floor",rs="FloorDiv",ns="FusedBatchNorm",mi="GatherV2",Sa="GatherNd",Na="Greater",os="GreaterEqual",po="Identity",vp="IFFT",Sp="Imag",Ta="IsFinite",ka="IsInf",ss="IsNan",is="LeakyRelu",Ea="Less",_a="LessEqual",Np="LinSpace",as="Log",Aa="Log1p",$a="LogicalAnd",Da="LogicalNot",Ra="LogicalOr",m1="LogicalXor",f1="LogSoftmax",Nlt="LowerBound",Ol="LRN",Tp="LRNGrad",ls="Max",us="Maximum",cs="MaxPool",kp="MaxPoolGrad",Pl="MaxPool3D",Ep="MaxPool3DGrad",_p="MaxPoolWithArgmax",ps="Mean",ms="Min",fs="Minimum",ds="MirrorPad",Fa="Mod",Ap="Multinomial",hs="Multiply",fi="Neg",Oa="NotEqual",Pa="NonMaxSuppressionV3",La="NonMaxSuppressionV4",Ma="NonMaxSuppressionV5",di="OnesLike",gs="OneHot",hi="Pack",xs="PadV2",Tlt="Pool",ys="Pow",bs="Prelu",ws="Prod",$p="RaggedGather",Dp="RaggedRange",Rp="RaggedTensorToTensor",Ll="Range",Fp="Real",Cs="Reciprocal",Is="Relu",gi="Reshape",vs="ResizeNearestNeighbor",Op="ResizeNearestNeighborGrad",Ss="ResizeBilinear",Pp="ResizeBilinearGrad",Ns="Relu6",Ts="Reverse",ks="Round",Es="Rsqrt",za="ScatterNd",Lp="SearchSorted",xi="Select",Ba="Selu",yi="Slice",_s="Sin",Va="Sinh",Ga="Sign",As="Sigmoid",Wa="Softplus",$s="Sqrt",Ds="Sum",bi="SpaceToBatchND",wi="SplitV",Rs="Softmax",Ml="SparseFillEmptyRows",Ua="SparseReshape",zl="SparseSegmentMean",Bl="SparseSegmentSum",Mp="SparseToDense",Fs="SquaredDifference",Vl="Square",Ha="StridedSlice",Gl="StringNGrams",Wl="StringSplit",Ul="StringToHashBucketFast",Os="Sub",Ps="Tan",Ls="Tanh",Qn="Tile",qa="TopK",Ka="Transform",to="Transpose",zp="Unique",Ci="Unpack",Hl="UnsortedSegmentSum",klt="UpperBound",Ii="ZerosLike",mo="Step",Xd="FromPixels",ja="RotateWithOffset",vi="_FusedMatMul",Si="FusedConv2D",Ni="FusedDepthwiseConv2D";function Ti(...r){M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(...r)}function l4(...r){M().getBool("IS_TEST")||M().getBool("PROD")||console.log(...r)}var Bp=qd("kernelRegistry",()=>new Map),Yd=qd("gradRegistry",()=>new Map);function Zd(r,t){let e=f0(r,t);return Bp.get(e)}function m0(r){return Yd.get(r)}function Bg(r){let t=Bp.entries(),e=[];for(;;){let{done:n,value:o}=t.next();if(n)break;let[s,i]=o,[a]=s.split("_");a===r&&e.push(i)}return e}function Fu(r){let{kernelName:t,backendName:e}=r,n=f0(t,e);Bp.has(n)&&Ti(`The kernel '${t}' for backend '${e}' is already registered`),Bp.set(n,r)}function h1(r){let{kernelName:t}=r;Yd.has(t)&&M().getBool("DEBUG")&&Ti(`Overriding the gradient for '${t}'`),Yd.set(t,r)}function Dlt(r,t){let e=f0(r,t);if(!Bp.has(e))throw new Error(`The kernel '${r}' for backend '${t}' is not registered`);Bp.delete(e)}function Rlt(r){if(!Yd.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);Yd.delete(r)}function Flt(r,t){Bg(r).forEach(n=>{let o=Object.assign({},n,{backendName:t});Fu(o)})}function f0(r,t){return`${t}_${r}`}var y={};Ut(y,{arraysEqual:()=>Fn,assert:()=>E,assertNonNegativeIntegerDimensions:()=>Le,assertNonNull:()=>Zn,assertShapesMatch:()=>Re,bytesFromStringArray:()=>l0,bytesPerElement:()=>op,checkConversionForErrors:()=>i0,clamp:()=>np,computeStrides:()=>ai,convertBackendValuesAndArrayBuffer:()=>QU,createScalarValue:()=>h4,createShuffledIndices:()=>XU,decodeString:()=>Up,distSquared:()=>HU,encodeString:()=>Kl,fetch:()=>x4,fingerPrint64:()=>d4,flatten:()=>zs,getArrayFromDType:()=>s0,getTypedArrayFromDType:()=>o0,hasEncodingLoss:()=>JU,hexToLong:()=>Jd,indexToLoc:()=>r4,inferDtype:()=>sp,inferFromImplicitShape:()=>ZU,isBoolean:()=>i1,isFunction:()=>ii,isInt:()=>aa,isNumber:()=>a1,isPromise:()=>Ru,isScalarShape:()=>qU,isString:()=>Bo,isTypedArray:()=>mr,isValidDtype:()=>a0,locToIndex:()=>e4,makeOnesTypedArray:()=>Ud,makeZerosNestedTypedArray:()=>t4,makeZerosTypedArray:()=>ap,nearestDivisor:()=>ip,nearestLargerEven:()=>GU,now:()=>zu,parseAxisParam:()=>pr,randUniform:()=>UU,repeatedTry:()=>YU,rightPad:()=>Du,shuffle:()=>s1,shuffleCombo:()=>VU,sizeFromShape:()=>Jt,sizeToSquarishShape:()=>jU,squeezeShape:()=>n0,sum:()=>WU,swap:()=>zg,tanh:()=>KU,toNestedArray:()=>$u,toTypedArray:()=>Wp});var x0=El(T1());var Mu=x0.default||x0;function Jd(r){return Mu.fromString(r,!0,16)}var E1=Jd("c3a5c85c97cb3127"),Lu=Jd("b492b66fbe98f273"),on=Jd("9ae16a3b2f90404f");function g0(r){return r.xor(r.shru(47))}function _1(r,t,e){let n=r.slice(t,t+e);return Mu.fromBytes(Array.from(n),!0,!0)}function Me(r,t){return _1(r,t,8)}function k1(r,t){return _1(r,t,4)}function _r(r,t){return t===0?r:r.shru(t).or(r.shl(64-t))}function ql(r,t,e=Jd("9ddfea08eb382d69")){let n=r.xor(t).mul(e);n=n.xor(n.shru(47));let o=t.xor(n).mul(e);return o=o.xor(o.shru(47)),o=o.mul(e),o}function c4(r,t,e,n,o,s){o=o.add(r),s=_r(s.add(o).add(n),21);let i=o;return o=o.add(t),o=o.add(e),s=s.add(_r(o,44)),[o.add(n),s.add(i)]}function Gg(r,t,e,n){return c4(Me(r,t),Me(r,t+8),Me(r,t+16),Me(r,t+24),e,n)}function p4(r,t=r.length){if(t>=8){let e=on.add(t*2),n=Me(r,0).add(on),o=Me(r,t-8),s=_r(o,37).mul(e).add(n),i=_r(n,25).add(o).mul(e);return ql(s,i,e)}if(t>=4){let e=on.add(t*2),n=k1(r,0);return ql(n.shl(3).add(t),k1(r,t-4),e)}if(t>0){let e=r[0],n=r[t>>1],o=r[t-1],s=e+(n<<8),i=t+(o<<2);return g0(on.mul(s).xor(E1.mul(i))).mul(on)}return on}function m4(r,t=r.length){let e=on.add(t*2),n=Me(r,0).mul(Lu),o=Me(r,8),s=Me(r,t-8).mul(e),i=Me(r,t-16).mul(on);return ql(_r(n.add(o),43).add(_r(s,30)).add(i),n.add(_r(o.add(on),18)).add(s),e)}function f4(r,t=r.length){let e=on.add(t*2),n=Me(r,0).mul(on),o=Me(r,8),s=Me(r,t-8).mul(e),i=Me(r,t-16).mul(on),a=_r(n.add(o),43).add(_r(s,30)).add(i),u=ql(a,n.add(_r(o.add(on),18)).add(s),e),l=Me(r,16).mul(e),c=Me(r,24),p=a.add(Me(r,t-32)).mul(e),m=u.add(Me(r,t-24)).mul(e);return ql(_r(l.add(c),43).add(_r(p,30)).add(m),l.add(_r(c.add(n),18)).add(p),e)}function d4(r,t=r.length){let e=Mu.fromNumber(81,!0);if(t<=32)return t<=16?p4(r,t):m4(r,t);if(t<=64)return f4(r,t);let n=e,o=e.mul(Lu).add(113),s=g0(o.mul(on).add(113)).mul(on),i=[Mu.UZERO,Mu.UZERO],a=[Mu.UZERO,Mu.UZERO];n=n.mul(on).add(Me(r,0));let u=0,l=(t-1>>6)*64,c=l+(t-1&63)-63;do n=_r(n.add(o).add(i[0]).add(Me(r,u+8)),37).mul(Lu),o=_r(o.add(i[1]).add(Me(r,u+48)),42).mul(Lu),n=n.xor(a[1]),o=o.add(i[0]).add(Me(r,u+40)),s=_r(s.add(a[0]),33).mul(Lu),i=Gg(r,u,i[1].mul(Lu),n.add(a[0])),a=Gg(r,u+32,s.add(a[1]),o.add(Me(r,u+16))),[s,n]=[n,s],u+=64;while(u!==l);let p=Lu.add(s.and(255).shl(1));return u=c,a[0]=a[0].add(t-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),n=_r(n.add(o).add(i[0]).add(Me(r,u+8)),37).mul(p),o=_r(o.add(i[1]).add(Me(r,u+48)),42).mul(p),n=n.xor(a[1].mul(9)),o=o.add(i[0].mul(9).add(Me(r,u+40))),s=_r(s.add(a[0]),33).mul(p),i=Gg(r,u,i[1].mul(p),n.add(a[0])),a=Gg(r,u+32,s.add(a[1]),o.add(Me(r,u+16))),[s,n]=[n,s],ql(ql(i[0],a[0],p).add(g0(o).mul(E1)).add(s),ql(i[1],a[1],p).add(n),p)}function h4(r,t){return t==="string"?Kl(r):Wp([r],t)}function g4(r,t){return r instanceof Float32Array&&t==="float32"||r instanceof Int32Array&&t==="int32"||r instanceof Uint8Array&&t==="bool"}function Wp(r,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=zs(r)),M().getBool("DEBUG")&&i0(r,t),g4(r,t))return r;if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"){let e=new Uint8Array(r.length);for(let n=0;n<e.length;++n)Math.round(r[n])!==0&&(e[n]=1);return e}else throw new Error(`Unknown data type ${t}`)}function zu(){return M().platform.now()}function x4(r,t){return M().platform.fetch(r,t)}function Kl(r,t="utf-8"){return t=t||"utf-8",M().platform.encode(r,t)}function Up(r,t="utf-8"){return t=t||"utf-8",M().platform.decode(r,t)}function mr(r){return M().platform.isTypedArray(r)}function zs(r,t=[],e=!1){if(t==null&&(t=[]),typeof r=="boolean"||typeof r=="number"||typeof r=="string"||Ru(r)||r==null||mr(r)&&e)t.push(r);else if(Array.isArray(r)||mr(r))for(let n=0;n<r.length;++n)zs(r[n],t,e);else{let n=-1;for(let o of Object.keys(r))/^([1-9]+[0-9]*|0)$/.test(o)&&(n=Math.max(n,Number(o)));for(let o=0;o<=n;o++)zs(r[o],t,e)}return t}var Wg=class{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new y0)}profileKernel(t,e,n){let o,s=()=>{o=n()},i,a=zu();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(let l of o)l.dataSync();i=Promise.resolve({kernelMs:zu()-a})}if(M().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<o.length;l++){let c=o[l];c.data().then(p=>{y4(p,c.dtype,t)})}return{kernelName:t,outputs:o,inputs:e,timeMs:i.then(l=>l.kernelMs),extraInfo:i.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(t){let{kernelName:e,outputs:n,timeMs:o,inputs:s,extraInfo:i}=t;n.forEach(a=>{Promise.all([a.data(),o,i]).then(u=>{this.logger.logKernelProfile(e,a,u[0],u[1],s,u[2])})})}};function y4(r,t,e){if(t!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${e}'`),!0}return!1}var y0=class{logKernelProfile(t,e,n,o,s,i){let a=typeof o=="number"?Du(`${o}ms`,9):o.error,u=Du(t,25),l=e.rank,c=e.size,p=Du(e.shape.toString(),14),m="";for(let f in s){let d=s[f];if(d!=null){let h=d.shape||e.shape,g=h.length;m+=`${f}: ${g}D ${g>0?h:""} `}}console.log(`%c${u}	%c${a}	%c${l}D ${p}	%c${c}	%c${m}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function A1(r,t,e){let n={},o={};for(let u=0;u<t.length;u++)n[t[u].id]=!0;for(let u=0;u<r.length;u++){let l=r[u],c=l.inputs;for(let p in c){let m=c[p],f=!1;for(let d=0;d<t.length;d++)if(n[m.id]){l.outputs.forEach(h=>n[h.id]=!0),f=!0,o[l.id]=!0;break}if(f)break}}let s={};s[e.id]=!0;let i={};for(let u=r.length-1;u>=0;u--){let l=r[u],c=l.inputs;for(let p=0;p<l.outputs.length;p++)if(s[l.outputs[p].id]){for(let m in c)s[c[m].id]=!0,i[l.id]=!0;break}}let a=[];for(let u=0;u<r.length;u++){let l=r[u];if(o[l.id]&&i[l.id]){let c={};for(let m in l.inputs){let f=l.inputs[m];n[f.id]&&(c[m]=f)}let p=Object.assign({},l);p.inputs=c,p.outputs=l.outputs,a.push(p)}}return a}function $1(r,t,e,n){for(let o=t.length-1;o>=0;o--){let s=t[o],i=[];if(s.outputs.forEach(u=>{let l=r[u.id];l!=null?i.push(l):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let a=s.gradient(i);for(let u in s.inputs){if(!(u in a))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(a)}.`);let l=e(()=>a[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);let c=s.inputs[u];if(!Fn(l.shape,c.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${c.shape}'`);if(r[c.id]==null)r[c.id]=l;else{let p=r[c.id];r[c.id]=n(p,l),p.dispose()}}}}var D1=20,Qd=3,b0=7;function R1(r,t,e,n){let o=ai(t),s=b4(r,t,e,o),i=t.length,a=Ug(r,t,e,o,s),u=["Tensor"];return n&&(u.push(`  dtype: ${e}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(a.map(l=>"    "+l).join(`
`)),u.join(`
`)}function b4(r,t,e,n){let o=Jt(t),s=n[n.length-1],i=new Array(s).fill(0),a=t.length,u=e==="complex64"?eh(r):r;if(a>1)for(let l=0;l<o/s;l++){let c=l*s;for(let p=0;p<s;p++)i[p]=Math.max(i[p],th(u[c+p],0,e).length)}return i}function th(r,t,e){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(b0))} + ${parseFloat(r[1].toFixed(b0))}j`:Bo(r)?n=`'${r}'`:e==="bool"?n=F1(r):n=parseFloat(r.toFixed(b0)).toString(),Du(n,t)}function F1(r){return r===0?"false":"true"}function Ug(r,t,e,n,o,s=!0){let i=e==="complex64"?2:1,a=t[0],u=t.length;if(u===0){if(e==="complex64"){let h=eh(r);return[th(h[0],0,e)]}return e==="bool"?[F1(r[0])]:[r[0].toString()]}if(u===1){if(a>D1){let g=Qd*i,x=Array.from(r.slice(0,g)),b=Array.from(r.slice((a-Qd)*i,a*i));return e==="complex64"&&(x=eh(x),b=eh(b)),["["+x.map((w,C)=>th(w,o[C],e)).join(", ")+", ..., "+b.map((w,C)=>th(w,o[a-Qd+C],e)).join(", ")+"]"]}return["["+(e==="complex64"?eh(r):Array.from(r)).map((g,x)=>th(g,o[x],e)).join(", ")+"]"]}let l=t.slice(1),c=n.slice(1),p=n[0]*i,m=[];if(a>D1){for(let h=0;h<Qd;h++){let g=h*p,x=g+p;m.push(...Ug(r.slice(g,x),l,e,c,o,!1))}m.push("...");for(let h=a-Qd;h<a;h++){let g=h*p,x=g+p;m.push(...Ug(r.slice(g,x),l,e,c,o,h===a-1))}}else for(let h=0;h<a;h++){let g=h*p,x=g+p;m.push(...Ug(r.slice(g,x),l,e,c,o,h===a-1))}let f=u===2?",":"";m[0]="["+(a>0?m[0]+f:"");for(let h=1;h<m.length-1;h++)m[h]=" "+m[h]+f;let d=`,
`;for(let h=2;h<u;h++)d+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":d),m}function eh(r){let t=[];for(let e=0;e<r.length;e+=2)t.push([r[e],r[e+1]]);return t}var pe=class{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=Jt(t),n!=null){let o=n.length;E(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||s0(e,this.size),this.strides=ai(t)}set(t,...e){e.length===0&&(e=[0]),E(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let n=this.locToIndex(e);this.values[n]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let o of t){if(o<0||o>=this.shape[e]){let s=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(s)}e++}let n=t[t.length-1];for(let o=0;o<t.length-1;++o)n+=this.strides[o]*t[o];return this.values[n]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Bs().makeTensor(this.values,this.shape,this.dtype)}},Bs=null,Hp=null,w4=null;function O1(r){Bs=r}function P1(r){Hp=r}function L1(r){w4=r}var Ft=class{constructor(t,e,n,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=Jt(t),this.strides=ai(t),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let t=await this.data();return Hp.buffer(this.shape,this.dtype,t)}bufferSync(){return Hp.buffer(this.shape,this.dtype,this.dataSync())}async array(){let t=await this.data();return $u(this.shape,t,this.dtype==="complex64")}arraySync(){return $u(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let t=Bs().read(this.dataId);if(this.dtype==="string"){let e=await t;try{return e.map(n=>Up(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Bs().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();let t=Bs().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Up(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();let t=await Bs().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Bs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Hp.print(this,t)}clone(){return this.throwIfDisposed(),Hp.clone(this)}toString(t=!1){let e=this.dataSync();return R1(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Hp.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Bs().makeVariable(this,t,e,n)}};Object.defineProperty(Ft,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function O(){return qd("Tensor",()=>Ft)}O();var Xa=class extends Ft{constructor(t,e,n,o){super(t.shape,t.dtype,t.dataId,o),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Fn(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Bs().disposeTensor(this),this.dataId=t.dataId,Bs().incRef(this,null)}dispose(){Bs().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Xa,Symbol.hasInstance,{value:r=>r instanceof Ft&&r.assign!=null&&r.assign instanceof Function});var xo={};Ut(xo,{assertTypesMatch:()=>N0,getTensorsInContainer:()=>rh,isTensorInList:()=>I4,makeTypesMatch:()=>Ht});var w0;(function(r){r.R0="R0",r.R1="R1",r.R2="R2",r.R3="R3",r.R4="R4",r.R5="R5",r.R6="R6"})(w0||(w0={}));var C0;(function(r){r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64"})(C0||(C0={}));var I0;(function(r){r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64"})(I0||(I0={}));var v0;(function(r){r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64"})(v0||(v0={}));var S0;(function(r){r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64"})(S0||(S0={}));var C4={float32:v0,int32:C0,bool:I0,complex64:S0};function lr(r,t){if(r==="string"||t==="string"){if(r==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${r} with ${t}`)}return C4[r][t]}function Bu(r){return lr(r,"int32")}function Ht(r,t){if(r.dtype===t.dtype)return[r,t];let e=lr(r.dtype,t.dtype);return[r.cast(e),t.cast(e)]}function N0(r,t){E(r.dtype===t.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${t.dtype}) input must match`)}function I4(r,t){return t.some(e=>e.id===r.id)}function rh(r){let t=[];return M1(r,t,new Set),t}function M1(r,t,e){if(r==null)return;if(r instanceof Ft){t.push(r);return}if(!v4(r))return;let n=r;for(let o in n){let s=n[o];e.has(s)||(e.add(s),M1(s,t,e))}}function v4(r){return Array.isArray(r)||typeof r=="object"}function T0(r){return r.kernelName!=null}var Hg=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}},jl=class{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Hg}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let n=t[e];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(Ti(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Wg(this.backendInstance),!0}setupRegisteredKernels(){Bg(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Bg(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){let e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let n=e.factory();if(n&&!(n instanceof zo)&&typeof n.then=="function"){let o=++this.pendingBackendInitId,s=n.then(i=>o<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,Ti(`Initialization of backend ${t} failed`),Ti(i.stack||i.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return Ti(`Initialization of backend ${t} failed`),Ti(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let n=t[e],{success:o,asyncInit:s}=this.initializeBackend(n);if(s||o)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){let n=this.state.tensorInfo.get(e),o=n.backend,s=this.readSync(e),i=o.refCount(e);o.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=t}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=e(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(t,e,n){t();try{let o=n();return e(),o}catch(o){throw e(),o}}nextTensorId(){return jl.nextTensorId++}nextVariableId(){return jl.nextVariableId++}clone(t){let e=k.runKernel(po,{x:t}),n={x:t},o=i=>({x:()=>{let a="float32",u={x:i},l={dtype:a};return k.runKernel(uo,u,l)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[e],o,s,{}),e}runKernel(t,e,n){if(this.backendName==null&&this.backend,!(Zd(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){let o=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=o-e-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[],o=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let u,l=T0(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(T0(t)){let{kernelName:d,inputs:h,attrs:g}=t;this.backendName==null&&this.backend;let x=Zd(d,this.backendName);E(x!=null,()=>`Cannot find registered kernel '${d}' for backend '${this.backendName}'`),a=()=>{let b=this.backend.numDataIds();u=x.kernelFunc({inputs:h,attrs:g,backend:this.backend});let w=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(d,b,w);let C=w.map(N=>N.rank!=null?N:this.makeTensorFromTensorInfo(N));if(o){let N=this.getTensorsForGradient(d,h,C);n=this.saveTensorsForBackwardMode(N)}return C}}else{let{forwardFunc:d}=t,h=g=>{o&&(n=g.map(x=>this.keep(this.clone(x))))};a=()=>{let g=this.backend.numDataIds();u=this.tidy(()=>d(this.backend,h));let x=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,x),x}}let{inputs:c,attrs:p}=t,m=T0(t)?null:t.backwardsFunc,f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=a():(f=this.profiler.profileKernel(l,c,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs)}),o&&this.addTapeNode(l,c,e,m,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(d=>c[d]!=null?c[d].shape:null),outputShapes:e.map(d=>d.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,e,n){let o=m0(t);if(o!=null){let s=o.inputsToSave||[],i=o.outputsToSave||[],a;o.saveAllInputs?(E(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(l=>e[l])):a=s.map(l=>e[l]);let u=n.filter((l,c)=>i[c]);return a.concat(u)}return[]}makeTensor(t,e,n,o){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let s=t;n==="string"&&Bo(t[0])&&(s=t.map(u=>Kl(u)));let i=o.write(s,e,n),a=new Ft(e,n,i,this.nextTensorId());if(this.trackTensor(a,o),n==="string"){let u=this.state.tensorInfo.get(i),l=l0(s);this.state.numBytes+=l-u.bytes,u.bytes=l}return a}makeTensorFromDataId(t,e,n,o){n=n||"float32";let s={dataId:t,shape:e,dtype:n};return this.makeTensorFromTensorInfo(s,o)}makeTensorFromTensorInfo(t,e){let{dataId:n,shape:o,dtype:s}=t,i=new Ft(o,s,n,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==t.dtype&&(t=t.cast(o));let s=new Xa(t,e,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let n=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(n=t.size*op(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof Xa||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let n=t.size*op(t.dtype);this.state.numBytes-=n}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;let e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,n,o,s,i){let a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},u=m0(t);u!=null&&(o=u.gradFunc),o!=null&&(a.gradient=l=>(l=l.map((c,p)=>{if(c==null){let m=n[p],f=ap(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return c}),o(l.length>1?l:l[0],s,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){let e=rh(t),n=new Set(e.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let i=this.state.activeScope.track[s];!i.kept&&!n.has(i.id)&&i.dispose()}let o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(s=>{!s.kept&&s.scopeId===o.id&&this.track(s)})}gradients(t,e,n,o=!1){if(E(e.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));E(s instanceof Ft,()=>"The result y returned by f() must be a tensor.");let i=A1(this.state.activeTape,e,s);if(!o&&i.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let a={};a[s.id]=n==null?S4(s.shape):n,$1(a,i,l=>this.tidy(l),N4);let u=e.map(l=>a[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(let c of l.saved)c.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(t){return E(ii(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{E(e.every(a=>a instanceof Ft),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,o={};e.forEach((a,u)=>{o[u]=a});let s=(a,u)=>(n=t(...e,u),E(n.value instanceof Ft,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),E(ii(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),i=(a,u)=>{let l=n.gradFunc(a,u),c=Array.isArray(l)?l:[l];E(c.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),E(c.every(m=>m instanceof Ft),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let p={};return c.forEach((m,f)=>{p[f]=()=>m}),p};return this.runKernelFunc({forwardFunc:s,backwardsFunc:i,inputs:o})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){let e=zu(),n=await this.backend.time(t);return n.wallMs=zu()-e,n}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Hg;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};jl.nextTensorId=0;jl.nextVariableId=0;function S4(r){let t=Ud(Jt(r),"float32");return k.makeTensor(t,r,"float32")}function k0(){let r=p0();if(r._tfengine==null){let t=new Hd(r);r._tfengine=new jl(t)}return c1(r._tfengine.ENV),O1(()=>r._tfengine),r._tfengine}var k=k0();function N4(r,t){let e={a:r,b:t};return k.runKernel(Jn,e)}var Xl={};Ut(Xl,{isBrowser:()=>_0,isMobile:()=>E4,mockIsMobile:()=>k4});function T4(){return typeof navigator!="undefined"&&navigator!=null}var E0;function k4(r){E0=r}function E4(r){if(E0!==void 0)return E0;if(r||T4()){if(r||(r=navigator),r.product==="ReactNative")return!0;let t=r.userAgent||r.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let e=r;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function _0(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var eo=M();eo.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});eo.registerFlag("IS_BROWSER",()=>_0());eo.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");eo.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));eo.registerFlag("PROD",()=>!1);eo.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>eo.getBool("DEBUG"));eo.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);eo.registerFlag("IS_TEST",()=>!1);eo.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);eo.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);eo.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);eo.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Gr(r,t){let e=r;if(mr(r))return t==="string"?[]:[r.length];if(typeof r=="object"){if("texture"in r){let s=r.channels||"RGBA";return[r.height,r.width*s.length]}else if("buffer"in r&&!(r.buffer instanceof ArrayBuffer))return[r.buffer.size/(t==null?4:op(t))]}if(!Array.isArray(r))return[];let o=[];for(;Array.isArray(e)||mr(e)&&t!=="string";)o.push(e.length),e=e[0];return Array.isArray(r)&&M().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&B1(r,o,[]),o}function B1(r,t,e){if(e=e||[],!Array.isArray(r)&&!mr(r)){E(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}E(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${r.length} elements`),E(r.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${r.length} elements`);let n=t.slice(1);for(let o=0;o<r.length;++o)B1(r[o],n,e.concat(o))}function z1(r,t,e,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==t||r==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${n}' must be ${r} tensor, but got ${t} tensor`)}}function v(r,t,e,n="numeric"){if(r instanceof Ft)return z1(n,r.dtype,t,e),r;let o=sp(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),z1(n,o,t,e),r==null||!mr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let u=r==null?"null":r.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${u}'`)}let s=Gr(r,o);!mr(r)&&!Array.isArray(r)&&(r=[r]);let a=o!=="string"?Wp(r,o):zs(r,[],!0);return k.makeTensor(a,s,o)}function Ya(r,t,e,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,i)=>v(s,`${t}[${i}]`,e,n))}var A0="__op";function T(r){let t=Object.keys(r);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],n=r[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+A0;let o=(...s)=>{k.startScope(e);try{let i=n(...s);return Ru(i)&&console.error("Cannot return a Promise inside of tidy."),k.endScope(i),i}catch(i){throw k.endScope(null),i}};return Object.defineProperty(o,"name",{value:e,configurable:!0}),o}function _4(r,t){let e=v(r,"real","complex"),n=v(t,"imag","complex");Re(e.shape,n.shape,`real and imag shapes, ${e.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:e,imag:n};return k.runKernel(mp,o)}var In=T({complex_:_4});function sn(r,t,e,n){if(n==null)n=sp(r);else if(n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof r=="object"&&("texture"in r||"buffer"in r&&!(r.buffer instanceof ArrayBuffer))){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return k.backend.createTensorFromGPUData(r,t||e,n)}if(!mr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Le(t);let o=Jt(t),s=Jt(e);E(o===s,()=>`Based on the provided shape, [${t}], the tensor should have ${o} values but has ${s}`);for(let i=0;i<e.length;++i){let a=e[i],u=i===e.length-1?a!==Jt(t.slice(i)):!0;E(e[i]===t[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!mr(r)&&!Array.isArray(r)&&(r=[r]),t=t||e,r=n!=="string"?Wp(r,n):zs(r,[],!0),k.makeTensor(r,t,n)}function or(r,t,e){let n=Gr(r,e);return sn(r,t,n,e)}var nh={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var qg=4;async function G1(r,t){let e=[],n=[],o=Array.isArray(r)?r.map(i=>i.name):Object.keys(r);for(let i=0;i<o.length;++i){let a=o[i],u=Array.isArray(r)?r[i].tensor:r[a];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${u.dtype}`);let l={name:a,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let c=new Promise(async p=>{let m=await u.bytes(),f=m.reduce((g,x)=>g+x.length,0)+qg*m.length,d=new Uint8Array(f),h=0;for(let g=0;g<m.length;g++){let x=m[g],b=new Uint8Array(new Uint32Array([x.length]).buffer);d.set(b,h),h+=qg,d.set(x,h),h+=x.length}p(d)});n.push(c)}else n.push(u.data());t!=null&&(l.group=t),e.push(l)}let s=await Promise.all(n);return{data:A4(s),specs:e}}function Kg(r,t){let e={},n,o=0;for(let s of t){let i=s.name,a=s.dtype,u=s.shape,l=Jt(u),c;if("quantization"in s){let p=s.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${s.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(a!=="float32")throw new Error(`Weight ${s.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${a}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let m=nh[p.dtype],f=r.slice(o,o+l*m),d=p.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(a==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){c=new Float32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];c[h]=g*p.scale+p.min}}else if(p.dtype==="float16")n===void 0&&(n=F4()),c=n(d);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(a==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);c=new Int32Array(d.length);for(let h=0;h<d.length;h++){let g=d[h];c[h]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);o+=l*m}else if(a==="string"){let p=Jt(s.shape);c=[];for(let m=0;m<p;m++){let f=new Uint32Array(r.slice(o,o+qg))[0];o+=qg;let d=new Uint8Array(r.slice(o,o+f));c.push(d),o+=f}}else{let p=nh[a],m=r.slice(o,o+l*p);if(a==="float32")c=new Float32Array(m);else if(a==="int32")c=new Int32Array(m);else if(a==="bool")c=new Uint8Array(m);else if(a==="complex64"){c=new Float32Array(m);let f=new Float32Array(c.length/2),d=new Float32Array(c.length/2);for(let x=0;x<f.length;x++)f[x]=c[x*2],d[x]=c[x*2+1];let h=or(f,u,"float32"),g=or(d,u,"float32");e[i]=In(h,g),h.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);o+=l*p}a!=="complex64"&&(e[i]=or(c,u,a))}return e}function A4(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let t=0,e=[];r.forEach(s=>{if(t+=s.byteLength,e.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(t),o=0;return e.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var $0=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function V1(r){return $0?Buffer.byteLength(r):new Blob([r]).size}function W1(r){if($0)return Buffer.from(r).toString("base64");let t=new Uint8Array(r),e="";for(let n=0,o=t.length;n<o;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function U1(r){if($0){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let t=atob(r),e=new Uint8Array(t.length);for(let n=0;n<t.length;++n)e.set([t.charCodeAt(n)],n);return e.buffer}function qp(r){if(r.length===1)return r[0];let t=0;r.forEach(o=>{t+=o.byteLength});let e=new Uint8Array(t),n=0;return r.forEach(o=>{e.set(new Uint8Array(o),n),n+=o.byteLength}),e.buffer}function D0(r){let t="/";for(r=r.trim();r.endsWith(t);)r=r.slice(0,r.length-1);let e=r.split(t);return e[e.length-1]}function jg(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:t};return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(e.initializerSignature=r.initializerSignature),r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),e}function R0(r,t,e){let n={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(n.trainingConfig=r.trainingConfig),r.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=t,n.weightData=e}return r.signature!=null&&(n.signature=r.signature),r.userDefinedMetadata!=null&&(n.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(n.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(n.initializerSignature=r.initializerSignature),n}async function Kp(r,t){let e,n;return r.weightsManifest!=null&&([e,n]=await t(r.weightsManifest)),R0(r,e,n)}function ki(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:V1(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:V1(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function Xg(r){let t=[];for(let e of r)t.push(...e.weights);return t}function $4(){let r=e=>{let n=e<<13,o=0;for(;!(n&8388608);)o-=8388608,n<<=1;return n&=-8388609,o+=947912704,n|o},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=r(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function D4(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let t=1;t<31;t++)r[t]=t<<23;for(let t=33;t<63;t++)r[t]=2147483648+(t-32<<23);return r}function R4(){let r=new Uint32Array(64);for(let t=0;t<64;t++)r[t]=1024;return r[0]=r[32]=0,r}function F4(){let r=$4(),t=D4(),e=R4();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let i=0;i<n.length;i++){let a=n[i],u=r[e[a>>10]+(a&1023)]+t[a>>10];s[i]=u}return new Float32Array(o)}}var Ie=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ie.instance==null&&(Ie.instance=new Ie),Ie.instance}static registerSaveRouter(t){Ie.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Ie.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Ie.getHandlers(t,"save")}static getLoadHandlers(t,e){return Ie.getHandlers(t,"load",e)}static getHandlers(t,e,n){let o=[];return(e==="load"?Ie.getInstance().loadRouters:Ie.getInstance().saveRouters).forEach(i=>{let a=i(t,n);a!==null&&o.push(a)}),o}},H1=r=>Ie.registerSaveRouter(r),q1=r=>Ie.registerLoadRouter(r),K1=r=>Ie.getSaveHandlers(r),j1=(r,t)=>Ie.getLoadHandlers(r,t);var F0="tensorflowjs",O0=1,Vu="models_store",Yl="model_info_store";function X1(){if(!M().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window=="undefined"?self:window,t=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function P0(r){let t=r.result;t.createObjectStore(Vu,{keyPath:"modelPath"}),t.createObjectStore(Yl,{keyPath:"modelPath"})}var Ei=class{constructor(t){if(this.indexedDB=X1(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((n,o)=>{let s=this.indexedDB.open(F0,O0);s.onupgradeneeded=()=>P0(s),s.onsuccess=()=>{let i=s.result;if(e==null){let a=i.transaction(Vu,"readonly"),l=a.objectStore(Vu).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return i.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(l.result.modelArtifacts)},l.onerror=c=>(i.close(),o(l.error)),a.oncomplete=()=>i.close()}else{let a=ki(e),u=i.transaction(Yl,"readwrite"),l=u.objectStore(Yl),c=l.put({modelPath:this.modelPath,modelArtifactsInfo:a}),p;c.onsuccess=()=>{p=i.transaction(Vu,"readwrite");let f=p.objectStore(Vu).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a});f.onsuccess=()=>n({modelArtifactsInfo:a}),f.onerror=d=>{l=u.objectStore(Yl);let h=l.delete(this.modelPath);h.onsuccess=()=>(i.close(),o(f.error)),h.onerror=g=>(i.close(),o(f.error))}},c.onerror=m=>(i.close(),o(c.error)),u.oncomplete=()=>{p==null?i.close():p.oncomplete=()=>i.close()}}},s.onerror=i=>o(s.error)})}};Ei.URL_SCHEME="indexeddb://";var Y1=r=>M().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Ei.URL_SCHEME)?O4(r.slice(Ei.URL_SCHEME.length)):null;Ie.registerSaveRouter(Y1);Ie.registerLoadRouter(Y1);function O4(r){return new Ei(r)}function P4(r){return r.startsWith(Ei.URL_SCHEME)?r.slice(Ei.URL_SCHEME.length):r}var Yg=class{constructor(){this.indexedDB=X1()}async listModels(){return new Promise((t,e)=>{let n=this.indexedDB.open(F0,O0);n.onupgradeneeded=()=>P0(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(Yl,"readonly"),a=s.objectStore(Yl).getAll();a.onsuccess=()=>{let u={};for(let l of a.result)u[l.modelPath]=l.modelArtifactsInfo;t(u)},a.onerror=u=>(o.close(),e(a.error)),s.oncomplete=()=>o.close()},n.onerror=o=>e(n.error)})}async removeModel(t){return t=P4(t),new Promise((e,n)=>{let o=this.indexedDB.open(F0,O0);o.onupgradeneeded=()=>P0(o),o.onsuccess=()=>{let s=o.result,i=s.transaction(Yl,"readwrite"),a=i.objectStore(Yl),u=a.get(t),l;u.onsuccess=()=>{if(u.result==null)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let c=a.delete(t),p=()=>{l=s.transaction(Vu,"readwrite");let f=l.objectStore(Vu).delete(t);f.onsuccess=()=>e(u.result.modelArtifactsInfo),f.onerror=d=>n(u.error)};c.onsuccess=p,c.onerror=m=>(p(),s.close(),n(u.error))}},u.onerror=c=>(s.close(),n(u.error)),i.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})}};var Za="/",jp="tensorflowjs_models",Z1="info",L4="model_topology",M4="weight_specs",z4="weight_data",B4="model_metadata";function J1(r){return{info:[jp,r,Z1].join(Za),topology:[jp,r,L4].join(Za),weightSpecs:[jp,r,M4].join(Za),weightData:[jp,r,z4].join(Za),modelMetadata:[jp,r,B4].join(Za)}}function Q1(r){for(let t of Object.values(r))window.localStorage.removeItem(t)}function V4(r){let t=r.split(Za);if(t.length<3)throw new Error(`Invalid key format: ${r}`);return t.slice(1,t.length-1).join(Za)}function G4(r){return r.startsWith(_i.URL_SCHEME)?r.slice(_i.URL_SCHEME.length):r}var _i=class{constructor(t){if(!M().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=J1(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),o=ki(t);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,W1(t.weightData));let s={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:o}}catch(s){throw Q1(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;let o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=o;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let a=JSON.parse(s);e.format=a.format,e.generatedBy=a.generatedBy,e.convertedBy=a.convertedBy,a.signature!=null&&(e.signature=a.signature),a.userDefinedMetadata!=null&&(e.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(e.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(e.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(e.trainingConfig=a.trainingConfig)}let i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=U1(i),e}};_i.URL_SCHEME="localstorage://";var tE=r=>M().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(_i.URL_SCHEME)?W4(r.slice(_i.URL_SCHEME.length)):null;Ie.registerSaveRouter(tE);Ie.registerLoadRouter(tE);function W4(r){return new _i(r)}var Zg=class{constructor(){E(M().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),E(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let t={},e=jp+Za,n=Za+Z1;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(e)&&s.endsWith(n)){let i=V4(s);t[i]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){t=G4(t);let e=J1(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);let n=JSON.parse(this.LS.getItem(e.info));return Q1(e),n}};var Xp="://",Ar=class{constructor(){this.managers={}}static getInstance(){return Ar.instance==null&&(Ar.instance=new Ar),Ar.instance}static registerManager(t,e){E(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Xp)&&(t=t.slice(0,t.indexOf(Xp))),E(t.length>0,()=>"scheme must not be an empty string.");let n=Ar.getInstance();E(n.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){let e=Ar.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Ar.getInstance().managers)}};function Jg(r){if(r.indexOf(Xp)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ar.getSchemes().join(",")}`);return{scheme:r.split(Xp)[0],path:r.split(Xp)[1]}}async function eE(r,t,e=!1){E(r!==t,()=>`Old path and new path are the same: '${r}'`);let n=Ie.getLoadHandlers(r);E(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),E(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=Ie.getSaveHandlers(t);E(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),E(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${t}.`);let i=s[0],a=Jg(r).scheme,u=Jg(r).path,l=a===Jg(r).scheme,c=await o.load();e&&l&&await Ar.getManager(a).removeModel(u);let p=await i.save(c);return e&&!l&&await Ar.getManager(a).removeModel(u),p.modelArtifactsInfo}async function rE(){let r=Ar.getSchemes(),t={};for(let e of r){let n=await Ar.getManager(e).listModels();for(let o in n){let s=e+Xp+o;t[s]=n[o]}}return t}async function nE(r){let t=Jg(r);return Ar.getManager(t.scheme).removeModel(t.path)}async function oE(r,t){return eE(r,t,!1)}async function sE(r,t){return eE(r,t,!0)}var L0=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window=="undefined"||!M().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();let o=this.functionRefs[n.data.index];o(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}};if(M().get("IS_BROWSER")){M().setPlatform("browser",new L0);try{Ar.registerManager(_i.URL_SCHEME,new Zg)}catch(r){}try{Ar.registerManager(Ei.URL_SCHEME,new Yg)}catch(r){}}var U4={importFetch:()=>iE()},M0;var z0=class{constructor(){this.util=aE(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return M().global.fetch!=null?M().global.fetch(t,e):(M0==null&&(M0=U4.importFetch()),M0(t,e))}now(){let t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}};M().get("IS_NODE")&&!M().get("IS_BROWSER")&&M().setPlatform("node",new z0);function bt(r,t="float32",e){return t=t||"float32",Le(r),new pe(r,t,e)}function H4(r,t){let e=v(r,"x","cast");if(!a0(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:e},o={dtype:t};return k.runKernel(uo,n,o)}var J=T({cast_:H4});function q4(r){let e={x:v(r,"x","clone","string_or_numeric")};return k.runKernel(po,e)}var an=T({clone_:q4});function Qg(r,t=!1){console.log(r.toString(t))}k0();var K4={buffer:bt,cast:J,clone:an,print:Qg};P1(K4);function Mct(){M().set("PROD",!0)}function zct(){M().set("DEBUG",!0)}function Bct(){M().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function B0(r){M().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}L1(B0);function Vct(){k.disposeVariables()}function Ln(){return k}function oh(){return k.memory()}function Gct(r){return k.profile(r)}function B(r,t){return k.tidy(r,t)}function Nt(r){rh(r).forEach(e=>e.dispose())}function De(r){return k.keep(r)}function Wct(r){return k.time(r)}function j4(r){return k.setBackend(r)}function Uct(){return k.ready()}function Hct(){return k.backendName}function qct(r){k.removeBackend(r)}function Kct(r){return k.findBackend(r)}function jct(r){return k.findBackendFactory(r)}function Yp(r,t,e=1){return k.registerBackend(r,t,e)}function lE(){return k.backend}function Xct(r,t){M().setPlatform(r,t)}function X4(r,t){let e=v(r,"a","add"),n=v(t,"b","add");[e,n]=Ht(e,n);let o={a:e,b:n};return k.runKernel(Jn,o)}var Y=T({add_:X4});function Y4(r,t){let e=v(r,"a","floorDiv"),n=v(t,"b","floorDiv");[e,n]=Ht(e,n);let o={a:e,b:n};return k.runKernel(rs,o)}var Zp=T({floorDiv_:Y4});function Z4(r,t){let e=v(r,"a","div"),n=v(t,"b","div");if([e,n]=Ht(e,n),e.dtype==="int32"&&n.dtype==="int32")return Zp(e,n);let o={a:e,b:n},s={};return k.runKernel(Jo,o,s)}var ut=T({div_:Z4});function J4(r,t){let e=v(r,"a","mul"),n=v(t,"b","mul");[e,n]=Ht(e,n);let o={a:e,b:n};return k.runKernel(hs,o)}var D=T({mul_:J4});function Q4(r){let t=v(r,"x","abs");if(t.dtype==="complex64"){let e={x:t};return k.runKernel($l,e)}else{let e={x:t};return k.runKernel(li,e)}}var Ee=T({abs_:Q4});function tH(r){let e={x:v(r,"x","acos")};return k.runKernel(la,e)}var tx=T({acos_:tH});function eH(r){let e={x:v(r,"x","acosh")};return k.runKernel(ua,e)}var ex=T({acosh_:eH});function rH(r){E(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),E(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let t=r.map((o,s)=>v(o,`tensors${s}`,"addN")),e=t[0];t.forEach(o=>{if(o.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(o=>{if(!Fn(o.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=t;return k.runKernel(Vo,n)}var uE=T({addN_:rH});function nH(r,t=null,e=!1){let o={x:v(r,"x","all","bool")},s={axis:t,keepDims:e};return k.runKernel(ca,o,s)}var Jp=T({all_:nH});function oH(r,t=null,e=!1){let o={x:v(r,"x","any","bool")},s={axis:t,keepDims:e};return k.runKernel(pa,o,s)}var Gu=T({any_:oH});function sH(r,t=0){let n={x:v(r,"x","argMax")},o={axis:t};return k.runKernel(Go,n,o)}var Ai=T({argMax_:sH});function iH(r,t=0){let n={x:v(r,"x","argMin")},o={axis:t};return k.runKernel(_l,n,o)}var rx=T({argMin_:iH});function aH(r){let e={x:v(r,"x","asin")};return k.runKernel(ma,e)}var nx=T({asin_:aH});function lH(r){let e={x:v(r,"x","asinh")};return k.runKernel(fa,e)}var ox=T({asinh_:lH});function uH(r){let e={x:v(r,"x","atan")};return k.runKernel(da,e)}var sx=T({atan_:uH});function cH(r,t){let e=v(r,"a","atan2"),n=v(t,"b","atan2");[e,n]=Ht(e,n);let o={a:e,b:n};return k.runKernel(ga,o)}var ix=T({atan2_:cH});function pH(r){let e={x:v(r,"x","atanh")};return k.runKernel(ha,e)}var ax=T({atanh_:pH});function mH(r,t,e,n,o="NHWC",s){let i=r[3],a=[...t,i],u=pE(o);return Wu(r,a,e,s,n,null,null,u)}function G0(r,t,e,n,o,s,i="channelsLast"){let[a,u]=sh(t),l;if(i==="channelsLast")l=[a,u,r[3],r[3]];else if(i==="channelsFirst")l=[a,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return Wu(r,l,e,n,o,s,!1,i)}function fH(r,t,e,n,o,s,i="NDHWC"){let[a,u,l]=V0(t),c,p;if(i==="NDHWC")p="channelsLast",c=[a,u,l,r[4],r[4]];else if(i==="NCDHW")p="channelsFirst",c=[a,u,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return cE(r,c,e,n,o,!1,p,s)}function Wu(r,t,e,n,o,s,i=!1,a="channelsLast"){let[u,l,c,p]=[-1,-1,-1,-1];if(a==="channelsLast")[u,l,c,p]=r;else if(a==="channelsFirst")[u,p,l,c]=r;else throw new Error(`Unknown dataFormat ${a}`);let[m,f,,d]=t,[h,g]=sh(e),[x,b]=sh(n),w=Qp(m,x),C=Qp(f,b),{padInfo:N,outHeight:_,outWidth:A}=gH(o,l,c,h,g,w,C,s,a),$=i?d*p:d,F;return a==="channelsFirst"?F=[u,$,_,A]:a==="channelsLast"&&(F=[u,_,A,$]),{batchSize:u,dataFormat:a,inHeight:l,inWidth:c,inChannels:p,outHeight:_,outWidth:A,outChannels:$,padInfo:N,strideHeight:h,strideWidth:g,filterHeight:m,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:C,dilationHeight:x,dilationWidth:b,inShape:r,outShape:F,filterShape:t}}function cE(r,t,e,n,o,s=!1,i="channelsLast",a){let[u,l,c,p,m]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,l,c,p,m]=r;else if(i==="channelsFirst")[u,m,l,c,p]=r;else throw new Error(`Unknown dataFormat ${i}`);let[f,d,h,,g]=t,[x,b,w]=V0(e),[C,N,_]=V0(n),A=Qp(f,C),$=Qp(d,N),F=Qp(h,_),{padInfo:P,outDepth:V,outHeight:G,outWidth:W}=xH(o,l,c,p,x,b,w,A,$,F,a),q=s?g*m:g,H;return i==="channelsFirst"?H=[u,q,V,G,W]:i==="channelsLast"&&(H=[u,V,G,W,q]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:p,inChannels:m,outDepth:V,outHeight:G,outWidth:W,outChannels:q,padInfo:P,strideDepth:x,strideHeight:b,strideWidth:w,filterDepth:f,filterHeight:d,filterWidth:h,effectiveFilterDepth:A,effectiveFilterHeight:$,effectiveFilterWidth:F,dilationDepth:C,dilationHeight:N,dilationWidth:_,inShape:r,outShape:H,filterShape:t}}function dH(r,t,e,n,o){n==null&&(n=W0(r,t,e));let s=r[0],i=r[1],a=ih((s-t+2*n)/e+1,o),u=ih((i-t+2*n)/e+1,o);return[a,u]}function hH(r,t,e,n,o,s){o==null&&(o=W0(r,t[0],n[0]));let i=[0,0,0,e];for(let a=0;a<3;a++)r[a]+2*o>=t[a]&&(i[a]=ih((r[a]-t[a]+2*o)/n[a]+1,s));return i}function W0(r,t,e,n=1){let o=Qp(t,n);return Math.floor((r[0]*(e-1)-e+o)/2)}function sh(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function V0(r){return typeof r=="number"?[r,r,r]:r}function Qp(r,t){return t<=1?r:r+(r-1)*(t-1)}function gH(r,t,e,n,o,s,i,a,u){let l,c,p;if(typeof r=="number"){l={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=dH([t,e],s,n,r,a);c=f[0],p=f[1]}else if(r==="same"){c=Math.ceil(t/n),p=Math.ceil(e/o);let m=Math.max(0,(c-1)*n+s-t),f=Math.max(0,(p-1)*o+i-e),d=Math.floor(m/2),h=m-d,g=Math.floor(f/2),x=f-g;l={top:d,bottom:h,left:g,right:x,type:"SAME"}}else if(r==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/n),p=Math.ceil((e-i+1)/o);else if(typeof r=="object"){let m=u==="channelsLast"?r[1][0]:r[2][0],f=u==="channelsLast"?r[1][1]:r[2][1],d=u==="channelsLast"?r[2][0]:r[3][0],h=u==="channelsLast"?r[2][1]:r[3][1];l={top:m,bottom:f,left:d,right:h,type:m===0&&f===0&&d===0&&h===0?"VALID":"EXPLICIT"},c=ih((t-s+m+f)/n+1,a),p=ih((e-i+d+h)/o+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:l,outHeight:c,outWidth:p}}function xH(r,t,e,n,o,s,i,a,u,l,c){let p,m,f,d;if(r==="valid"&&(r=0),typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=hH([t,e,n,1],[a,u,l],1,[o,s,i],r,c);m=g[0],f=g[1],d=g[2]}else if(r==="same"){m=Math.ceil(t/o),f=Math.ceil(e/s),d=Math.ceil(n/i);let h=(m-1)*o+a-t,g=(f-1)*s+u-e,x=(d-1)*i+l-n,b=Math.floor(h/2),w=h-b,C=Math.floor(g/2),N=g-C,_=Math.floor(x/2),A=x-_;p={top:C,bottom:N,left:_,right:A,front:b,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:m,outHeight:f,outWidth:d}}function ih(r,t){if(!t)return Math.trunc(r);switch(t){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${t}`)}}function ro(r){let[t,e,n]=sh(r);return t===1&&e===1&&n===1}function $r(r,t){return ro(r)||ro(t)}function $i(r){return sh(r).every(t=>t>0)}function pE(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function ve(r,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")E(aa(t),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(o=>{E(aa(o),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${o}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${t}`)}}function yH(r,t){let n={x:v(r,"x","reshape","string_or_numeric")},o={shape:t};return k.runKernel(gi,n,o)}var R=T({reshape_:yH});function bH(r,t,e,n,o){let s=v(r,"x","avgPool","float32"),i=1;E($r(e,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let a=s,u=!1;s.rank===3&&(u=!0,a=R(s,[1,s.shape[0],s.shape[1],s.shape[2]])),E(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),ve("avgPool",n,o);let l={x:a},c={filterSize:t,strides:e,pad:n,dimRoundingMode:o},p=k.runKernel(Wo,l,c);return p=J(p,s.dtype),u?R(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Zl=T({avgPool_:bH});function wH(r,t,e,n,o,s="NDHWC"){let i=v(r,"x","avgPool3d","float32"),a=i,u=!1;i.rank===4&&(u=!0,a=R(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),E(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),E(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),ve("avgPool3d",n,o);let l={x:a},c={filterSize:t,strides:e,pad:n,dimRoundingMode:o,dataFormat:s},p=k.runKernel(Al,l,c);return p=J(p,a.dtype),u?R(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var lx=T({avgPool3d_:wH});function CH(r,t=0){E(r.length>=1,()=>"Pass at least one tensor to concat");let e=Ya(r,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),e.length===1)return an(e[0]);let n=e,o={axis:t};return k.runKernel(ci,n,o)}var oe=T({concat_:CH});function IH(r,t,e=!1,n=!1){let o=v(r,"a","matMul"),s=v(t,"b","matMul");[o,s]=Ht(o,s);let i={a:o,b:s},a={transposeA:e,transposeB:n};return k.runKernel(Uo,i,a)}var Mt=T({matMul_:IH});function vH(r){let e={x:v(r,"x","sigmoid","float32")};return k.runKernel(As,e)}var Qr=T({sigmoid_:vH});function SH(r,t,e){let n=v(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:t,size:e};return k.runKernel(yi,o,s)}var Rt=T({slice_:SH});function NH(r){let e={x:v(r,"x","tanh","float32")};return k.runKernel(Ls,e)}var Di=T({tanh_:NH});function TH(r,t,e,n,o,s){let i=v(r,"forgetBias","basicLSTMCell"),a=v(t,"lstmKernel","basicLSTMCell"),u=v(e,"lstmBias","basicLSTMCell"),l=v(n,"data","basicLSTMCell"),c=v(o,"c","basicLSTMCell"),p=v(s,"h","basicLSTMCell"),m=oe([l,p],1),f=Mt(m,a),d=Y(f,u),h=d.shape[0],g=d.shape[1]/4,x=[h,g],b=Rt(d,[0,0],x),w=Rt(d,[0,g],x),C=Rt(d,[0,g*2],x),N=Rt(d,[0,g*3],x),_=Y(D(Qr(b),Di(w)),D(c,Qr(Y(i,C)))),A=D(Di(_),Qr(N));return[_,A]}var mE=T({basicLSTMCell_:TH});function kH(r,t,e){let n=v(r,"x","batchToSpaceND"),o=t.reduce((a,u)=>a*u);E(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),E(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),E(n.shape[0]%o===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${o}`);let s={x:n},i={blockShape:t,crops:e};return k.runKernel(ui,s,i)}var Jl=T({batchToSpaceND_:kH});function fE(r){let t;return r.rank===0||r.rank===1?t=R(r,[1,1,1,r.size]):r.rank===2?t=R(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?t=R(r,[1,r.shape[0],r.shape[1],r.shape[2]]):t=r,t}function EH(r,t,e,n,o,s){s==null&&(s=.001);let i=v(r,"x","batchNorm"),a=v(t,"mean","batchNorm"),u=v(e,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let c;n!=null&&(c=v(n,"offset","batchNorm")),E(a.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(l==null||a.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:fE(i),scale:l,offset:c,mean:a,variance:u},f={varianceEpsilon:s},d=k.runKernel(ns,m,f);return R(d,i.shape)}var Ri=T({batchNorm_:EH});function _H(r,t,e,n,o,s){let i=v(r,"x","batchNorm"),a=v(t,"mean","batchNorm"),u=v(e,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let c;return n!=null&&(c=v(n,"offset","batchNorm")),E(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),E(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),E(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&E(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&E(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Ri(i,a,u,c,l,s)}var ux=T({batchNorm2d_:_H});function AH(r,t,e,n,o,s){let i=v(r,"x","batchNorm"),a=v(t,"mean","batchNorm"),u=v(e,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let c;return n!=null&&(c=v(n,"offset","batchNorm")),E(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),E(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),E(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&E(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&E(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Ri(i,a,u,c,l,s)}var cx=T({batchNorm3d_:AH});function $H(r,t,e,n,o,s){let i=v(r,"x","batchNorm"),a=v(t,"mean","batchNorm"),u=v(e,"variance","batchNorm"),l;o!=null&&(l=v(o,"scale","batchNorm"));let c;return n!=null&&(c=v(n,"offset","batchNorm")),E(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),E(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),E(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&E(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&E(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Ri(i,a,u,c,l,s)}var px=T({batchNorm4d_:$H});function DH(r,t,e){let n=v(r,"x","bincount"),o=v(t,"weights","bincount");E(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),E(e>=0,()=>`size must be non-negative, but got ${e}.`),E(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},i={size:e};return k.runKernel(cp,s,i)}var mx=T({bincount_:DH});function RH(r,t){let e=v(r,"s0","broadcastArgs","int32"),n=v(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:e,s1:n};return k.runKernel(pp,o)}var dE=T({broadcastArgs_:RH});function FH(r,t){let e=v(r,"broadcastTo","x"),n=e.shape;if(Le(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let l=e.shape.slice();for(;l.length<t.length;)l.unshift(1);e=R(e,l)}let o=e.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(o[l]===t[l])s[l]=1;else if(e.shape[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(s.map((l,c)=>l>1?c:-1).filter(l=>l>=0).length===0)return an(e);let a={x:e},u={reps:s};return k.runKernel(Qn,a,u)}var Fi=T({broadcastTo_:FH});function OH(r){let e={x:v(r,"x","ceil","float32")};return k.runKernel(Ho,e)}var fx=T({ceil_:OH});function yo(r,t,e){Le(r);let n={shape:r,value:t,dtype:e};return k.runKernel(Fl,{},n)}function PH(r,t,e){let n=v(r,"x","clipByValue");if(E(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return yo(n.shape,t,n.dtype);let o={x:n},s={clipValueMin:t,clipValueMax:e};return k.runKernel(co,o,s)}var vr=T({clipByValue_:PH});function LH(r){return oe(r,0)}var dx=T({concat1d_:LH});function MH(r,t){return oe(r,t)}var hx=T({concat2d_:MH});function zH(r,t){return oe(r,t)}var gx=T({concat3d_:zH});function BH(r,t){return oe(r,t)}var xx=T({concat4d_:BH});function VH(r,t,e,n,o="NHWC",s=[1,1],i){let a=v(r,"x","conv2d","float32"),u=v(t,"filter","conv2d","float32"),l=a,c=!1;a.rank===3&&(c=!0,l=R(a,[1,a.shape[0],a.shape[1],a.shape[2]])),E(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),E(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),ve("conv2d",n,i);let p=o==="NHWC"?l.shape[3]:l.shape[1];E(p===u.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`),E($r(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),E($i(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),E($i(e),()=>"Error in conv2D: Strides should be larger than 0.");let m={x:l,filter:u},f={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i},d=k.runKernel(qo,m,f);return c?R(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var vn=T({conv2d_:VH});function GH(r,t,e,n,o="NWC",s=1,i){let a=v(r,"x","conv1d"),u=v(t,"filter","conv1d"),l=a,c=!1;a.rank===2&&(c=!0,l=R(a,[1,a.shape[0],a.shape[1]])),E(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),E(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),ve("conv1d",n,i),E(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),E($r(e,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${s}'`),E($i(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),E($i(e),()=>"Error in conv1D: Stride should be larger than 0."),E(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let p=R(u,[1,u.shape[0],u.shape[1],u.shape[2]]),m=R(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=vn(m,p,[1,e],n,"NHWC",[1,s],i);return c?R(g,[g.shape[2],g.shape[3]]):R(g,[g.shape[0],g.shape[2],g.shape[3]])}var tm=T({conv1d_:GH});function WH(r,t,e,n,o,s="NHWC",i){E(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let a=r,u=t,l=!1;t.rank===3&&(l=!0,u=R(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,r[0],r[1],r[2]]),E(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),E(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),E(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let c=s==="NHWC"?a[3]:a[1],p=s==="NHWC"?u.shape[3]:u.shape[1];E(c===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${e.shape[2]}.`),E(p===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${e.shape[3]}.`),ve("conv2dDerInput",o,i);let m={dy:u,filter:e},f={strides:n,pad:o,dataFormat:s,dimRoundingMode:i,inputShape:a},d=k.runKernel(Ko,m,f);return l?R(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var em=T({conv2DBackpropInput_:WH});function UH(r,t,e,n,o,s){let i=v(r,"x","conv2dTranspose"),a=v(t,"filter","conv2dTranspose");return em(e,i,a,n,o,"NHWC",s)}var rm=T({conv2dTranspose_:UH});function HH(r,t,e,n,o="NDHWC",s=[1,1,1]){let i=v(r,"x","conv3d"),a=v(t,"filter","conv3d"),u=i,l=!1;i.rank===4&&(l=!0,u=R(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),E(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),E(u.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${a.shape[3]}.`),E($r(e,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),E(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`),E($i(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),E($i(e),()=>"Error in conv3D: Strides should be larger than 0.");let c={x:u,filter:a},p={strides:e,pad:n,dataFormat:o,dilations:s},m=k.runKernel(Dl,c,p);return l?R(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var yx=T({conv3d_:HH});function qH(r,t,e,n,o){E(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let s=r,i=t,a=!1;t.rank===4&&(a=!0,i=R(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let u=s[4],l=i.shape[4];E(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),E(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),E(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),E(u===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[3]}.`),E(l===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${e.shape[4]}.`);let c={dy:i,filter:e},p={pad:o,strides:n,inputShape:s},m=k.runKernel(hp,c,p);return a?R(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var bx=T({conv3DBackpropInput_:qH});function KH(r,t,e,n,o){let s=v(r,"x","conv3dTranspose"),i=v(t,"filter","conv3dTranspose");return bx(e,s,i,n,o)}var wx=T({conv3dTranspose_:KH});function jH(r){let e={x:v(r,"x","cos","float32")};return k.runKernel(jo,e)}var Ql=T({cos_:jH});function XH(r){let e={x:v(r,"x","cosh","float32")};return k.runKernel(Xo,e)}var nm=T({cosh_:XH});function YH(r,t=0,e=!1,n=!1){let s={x:v(r,"x","cumprod")},i={axis:t,exclusive:e,reverse:n};return k.runKernel(xa,s,i)}var Uu=T({cumprod_:YH});function ZH(r,t=0,e=!1,n=!1){let s={x:v(r,"x","cumsum")},i={axis:t,exclusive:e,reverse:n};return k.runKernel(Yo,s,i)}var om=T({cumsum_:ZH});function JH(r,t,e,n=!1){let o=v(r,"x","denseBincount"),s=v(t,"weights","denseBincount");E(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),E(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),E(e>=0,()=>`size must be non-negative, but got ${e}.`),E(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let i={x:o,weights:s},a={size:e,binaryOutput:n};return k.runKernel(gp,i,a)}var ah=T({denseBincount_:JH});function QH(r,t,e="NHWC"){let n=v(r,"x","depthToSpace","float32"),o=e==="NHWC"?n.shape[1]:n.shape[2],s=e==="NHWC"?n.shape[2]:n.shape[3],i=e==="NHWC"?n.shape[3]:n.shape[1];E(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),E(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t}  for depthToSpace with input shape
    ${n.shape}`),E(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${n.shape}`),E(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${n.shape}`);let a={x:n},u={blockSize:t,dataFormat:e};return k.runKernel(ba,a,u)}var Cx=T({depthToSpace_:QH});function tq(r,t,e,n,o="NHWC",s=[1,1],i){let a=v(r,"x","depthwiseConv2d","float32"),u=v(t,"filter","depthwiseConv2d","float32"),l=a,c=!1;a.rank===3&&(c=!0,l=R(a,[1,a.shape[0],a.shape[1],a.shape[2]])),E(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),E(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);let p=o==="NHWC"?l.shape[3]:l.shape[1];E(p===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${u.shape[2]}.`),ve("depthwiseConv2d",n,i);let m={x:l,filter:u},f={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i},d=k.runKernel(Zo,m,f);return c?R(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Oi=T({depthwiseConv2d_:tq});function eq(r){let e={x:v(r,"x","diag")};return k.runKernel(bp,e)}var hE=T({diag_:eq});function rq(r,t,e,n,o=[1,1],s="NHWC"){let i=v(r,"x","dilation2d"),a=v(t,"filter","dilation2d");E(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),E(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),E(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=i,l=!1;i.rank===3&&(u=R(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0),E(u.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${a.shape[2]}`);let c={x:u,filter:a},p={strides:e,pad:n,dilations:o},m=k.runKernel(Rl,c,p);return l?R(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Ix=T({dilation2d_:rq});var Wr={};Ut(Wr,{assertAndGetBroadcastShape:()=>Ot,getBroadcastDims:()=>gE,getReductionAxes:()=>xe});function gE(r,t){let e=r.length,n=[];for(let o=0;o<e;o++){let s=e-1-o,i=r[s]||1;(t[t.length-1-o]||1)>1&&i===1&&n.unshift(s)}return n}function xe(r,t){let e=[];for(let n=0;n<t.length;n++){let o=r[r.length-n-1],s=t.length-n-1,i=t[s];(o==null||o===1&&i>1)&&e.unshift(s)}return e}function Ot(r,t){let e=[],n=Math.max(r.length,t.length);for(let o=0;o<n;o++){let s=r[r.length-o-1];s==null&&(s=1);let i=t[t.length-o-1];if(i==null&&(i=1),s===1)e.unshift(i);else if(i===1)e.unshift(s);else if(s!==i){let a=`Operands could not be broadcast together with shapes ${r} and ${t}.`;throw Error(a)}else e.unshift(s)}return e}function nq(r,t){let e=v(r,"a","equal","string_or_numeric"),n=v(t,"b","equal","string_or_numeric");[e,n]=Ht(e,n),Ot(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(Ca,o)}var Dr=T({equal_:nq});function oq(r,t,e){let n=v(t,"a","where"),o=v(e,"b","where"),s=v(r,"condition","where","bool"),i=Ot(Ot(s.shape,n.shape),o.shape),a=Fi(s,i),u=Fi(n,i),l=Fi(o,i),c={condition:a,t:u,e:l};return k.runKernel(xi,c)}var _e=T({where_:oq});function sq(r){let e={x:v(r,"x","zerosLike")};return k.runKernel(Ii,e)}var It=T({zerosLike_:sq});function iq(r,t){let e=v(r,"a","div"),n=v(t,"b","div");[e,n]=Ht(e,n);let o=ut(e,n),s=It(o),i=Dr(n,s);return _e(i,s,o)}var vx=T({divNoNan_:iq});function aq(r,t){let e=v(r,"t1","dot"),n=v(t,"t2","dot");E((e.rank===1||e.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${n.rank}.`);let o=e.rank===1?e.size:e.shape[1],s=n.rank===1?n.size:n.shape[0];if(E(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),e.rank===1&&n.rank===1){let i=R(e,[1,-1]),a=R(n,[-1,1]),u=Mt(i,a);return R(u,[])}else if(e.rank===1&&n.rank===2){let i=R(e,[1,-1]),a=R(n,[n.shape[0],n.shape[1]]),u=Mt(i,a);return R(u,[u.size])}else if(e.rank===2&&n.rank===1){let i=R(n,[-1,1]),a=Mt(e,i);return R(a,[a.size])}else{let i=R(n,[n.shape[0],n.shape[1]]);return Mt(e,i)}}var Sx=T({dot_:aq});function lq(r,...t){let e=t.map((o,s)=>v(o,`tensors${s}`,"einsum")),n={equation:r};return k.runKernel(wp,e,n)}var xE=T({einsum_:lq});function uq(r){let e={x:v(r,"x","elu","float32")};return k.runKernel(Qo,e)}var Pi=T({elu_:uq});function cq(r){let t=v(r,"x","erf");E(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=J(t,"float32"));let e={x:t};return k.runKernel(wa,e)}var Nx=T({erf_:cq});function U0(r,t){for(let e=0;e<r.length;++e)if(r[r.length-e-1]!==t-1-e)return!1;return!0}function yE(r,t,e){let n=r.length+t.length,o=[],s=0,i=0;for(let a=0;a<n;a++)e.indexOf(a)===-1?o.push(r[s++]):o.push(t[i++]);return o}function H0(r,t){let e=[],n=r.length;for(let s=0;s<n;s++)t.indexOf(s)===-1&&e.push(r[s]);let o=t.map(s=>r[s]);return[e,o]}function bo(r,t){let e=t.map(n=>1);return yE(r,e,t)}function pq(r,t,e){E(U0(t,e),()=>`${r} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function q0(r,t){if(U0(r,t))return null;let e=[];for(let n=0;n<t;++n)r.indexOf(n)===-1&&e.push(n);return r.forEach(n=>e.push(n)),e}function lh(r){return r.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function mq(r,t){let e=[];for(let n=t-r;n<t;++n)e.push(n);return e}function fq(r,t=null,e=!1){let o={x:v(r,"x","max")},s={reductionIndices:t,keepDims:e};return k.runKernel(ls,o,s)}var Sr=T({max_:fq});function dq(r,t=null,e=!1){let o={x:v(r,"x","min")},s={axis:t,keepDims:e};return k.runKernel(ms,o,s)}var Ja=T({min_:dq});function hq(r,t){let e=v(r,"base","pow"),n=v(t,"exp","pow");[e,n]=Ht(e,n);let o={a:e,b:n};return k.runKernel(ys,o)}var ln=T({pow_:hq});function pt(r,t){if((mr(r)&&t!=="string"||Array.isArray(r))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&mr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return sn(r,[],[],t)}function gq(r){let e={x:v(r,"x","sqrt","float32")};return k.runKernel($s,e)}var Se=T({sqrt_:gq});function xq(r){let t=v(r,"x","square"),e={};return k.runKernel("Square",{x:t},e)}var zt=T({square_:xq});function yq(r,t=null,e=!1){let n=v(r,"x","sum");n.dtype==="bool"&&(n=J(n,"int32"));let o={x:n},s={axis:t,keepDims:e};return k.runKernel(Ds,o,s)}var mt=T({sum_:yq});function bq(r,t="euclidean",e=null,n=!1){r=v(r,"x","norm");let o=bE(r,t,e),s=o.shape;if(n){let i=pr(e,r.shape);s=bo(o.shape,i)}return R(o,s)}function bE(r,t,e=null){if(r.rank===0)return Ee(r);if(r.rank!==1&&e===null)return bE(R(r,[-1]),t,e);if(r.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return mt(Ee(r),e);if(t===1/0)return Sr(Ee(r),e);if(t===-1/0)return Ja(Ee(r),e);if(t==="euclidean"||t===2)return Se(mt(ln(Ee(r),pt(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Sr(mt(Ee(r),e[0]),e[1]-1);if(t===1/0)return Sr(mt(Ee(r),e[1]),e[0]);if(t===-1/0)return Ja(mt(Ee(r),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Se(mt(zt(r),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}var Qa=T({norm_:bq});function wq(r,t=null,e=!1){return Qa(r,"euclidean",t,e)}var Tx=T({euclideanNorm_:wq});function Cq(r){let e={x:v(r,"x","exp")};return k.runKernel(ts,e)}var sr=T({exp_:Cq});function Iq(r,t=0){let e=v(r,"x","expandDims","string_or_numeric");E(t<=e.rank,()=>"Axis must be <= rank of the tensor");let n={input:e},o={dim:t};return k.runKernel(pi,n,o)}var ir=T({expandDims_:Iq});function vq(r){let e={x:v(r,"x","expm1")};return k.runKernel(Ia,e)}var kx=T({expm1_:vq});function Sq(r,t){let e=v(r,"x","tile","string_or_numeric");E(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);let n={x:e},o={reps:t};return k.runKernel(Qn,n,o)}var Rr=T({tile_:Sq});function Nq(r,t,e,n="float32"){t==null&&(t=r);let o=bt([r,t],n),s=r<=t?r:t;for(let a=0;a<s;++a)o.set(1,a,a);let i=R(o.toTensor(),[r,t]);if(e==null)return i;if(e.length===1)return Rr(ir(i,0),[e[0],1,1]);if(e.length===2)return Rr(ir(ir(i,0),0),[e[0],e[1],1,1]);if(e.length===3)return Rr(ir(ir(ir(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}var Hu=T({eye_:Nq});function Tq(r){let e={x:v(r,"x","floor","float32")};return k.runKernel(es,e)}var Li=T({floor_:Tq});function kq(r,t,e=0,n=0){let o=v(r,"x","gather"),s=v(t,"indices","gather","int32"),i={x:o,indices:s},a={axis:e,batchDims:n};return k.runKernel(mi,i,a)}var Mi=T({gather_:kq});function Eq(r,t){let e=v(r,"a","greater","string_or_numeric"),n=v(t,"b","greater","string_or_numeric");[e,n]=Ht(e,n),Ot(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(Na,o)}var Fe=T({greater_:Eq});function _q(r,t){let e=v(r,"a","greaterEqual","string_or_numeric"),n=v(t,"b","greaterEqual","string_or_numeric");[e,n]=Ht(e,n),Ot(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(os,o)}var un=T({greaterEqual_:_q});function Aq(r){let e={input:v(r,"input","imag")};return k.runKernel(Sp,e)}var tu=T({imag_:Aq});function $q(r){let e={x:v(r,"x","isFinite")};return k.runKernel(Ta,e)}var Ex=T({isFinite_:$q});function Dq(r){let e={x:v(r,"x","isInf")};return k.runKernel(ka,e)}var _x=T({isInf_:Dq});function Rq(r){let e={x:v(r,"x","isNaN")};return k.runKernel(ss,e)}var Ax=T({isNaN_:Rq});function Fq(r,t=.2){let n={x:v(r,"x","leakyRelu")},o={alpha:t};return k.runKernel(is,n,o)}var eu=T({leakyRelu_:Fq});function Oq(r,t){let e=v(r,"a","less","string_or_numeric"),n=v(t,"b","less","string_or_numeric");[e,n]=Ht(e,n),Ot(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(Ea,o)}var sm=T({less_:Oq});function Pq(r,t){let e=v(r,"a","lessEqual","string_or_numeric"),n=v(t,"b","lessEqual","string_or_numeric");[e,n]=Ht(e,n),Ot(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(_a,o)}var Mn=T({lessEqual_:Pq});function wE(r,t,e){if(e<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:t,num:e};return k.runKernel(Np,{},n)}function Lq(r,t=5,e=1,n=1,o=.5){let s=v(r,"x","localResponseNormalization");E(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),E(aa(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,a=!1;s.rank===3&&(a=!0,i=R(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:i},l={depthRadius:t,bias:e,alpha:n,beta:o},c=k.runKernel(Ol,u,l);return a?R(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var $x=T({localResponseNormalization_:Lq});function Mq(r){let e={x:v(r,"x","log","float32")};return k.runKernel(as,e)}var Nr=T({log_:Mq});function zq(r){let e={x:v(r,"x","log1p")};return k.runKernel(Aa,e)}var ru=T({log1p_:zq});function Bq(r){return E(ii(r),()=>"The f passed in grad(f) must be a function"),(t,e)=>{let n=v(t,"x","tf.grad","string_or_numeric"),o=e!=null?v(e,"dy","tf.grad"):null;return k.tidy(()=>{let{value:s,grads:i}=k.gradients(()=>r(n),[n],o);return o!=null&&Re(s.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Rx(i),i[0]})}}function Vq(r){return E(ii(r),()=>"The f passed in grads(f) must be a function"),(t,e)=>{E(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=Ya(t,"args","tf.grads","string_or_numeric"),o=e!=null?v(e,"dy","tf.grads"):null;return k.tidy(()=>{let{value:s,grads:i}=k.gradients(()=>r(...n),n,o);return o!=null&&Re(s.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Rx(i),i})}}function Gq(r){return E(ii(r),()=>"The f passed in valueAndGrad(f) must be a function"),(t,e)=>{E(t instanceof Ft,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),E(e==null||e instanceof Ft,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:o}=k.gradients(()=>r(t),[t],e);return Rx(n),{grad:n[0],value:o}}}function Wq(r){return E(ii(r),()=>"The f passed in valueAndGrads(f) must be a function"),(t,e)=>{E(Array.isArray(t)&&t.every(o=>o instanceof Ft),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),E(e==null||e instanceof Ft,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=k.gradients(()=>r(...t),t,e);return e!=null&&Re(n.value.shape,e.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Rx(n.grads),n}}function Dx(r,t){E(ii(r),()=>"The f passed in variableGrads(f) must be a function"),E(t==null||Array.isArray(t)&&t.every(l=>l instanceof Xa),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let e=t!=null;if(!e){t=[];for(let l in k.registeredVariables)t.push(k.registeredVariables[l])}let n=e?t.filter(l=>!l.trainable):null,o=t.length;t=t.filter(l=>l.trainable),E(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:i,grads:a}=k.gradients(r,t,null,s);E(a.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),E(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let u={};return t.forEach((l,c)=>{a[c]!=null&&(u[l.name]=a[c])}),n!=null&&n.forEach(l=>u[l.name]=null),{value:i,grads:u}}function cn(r){return k.customGrad(r)}function Rx(r){if(r.filter(e=>e==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function Uq(r){let e={x:v(r,"x","neg")};return k.runKernel(fi,e)}var qt=T({neg_:Uq});function Hq(r){let e={x:v(r,"x","softplus")};return k.runKernel(Wa,e)}var Vs=T({softplus_:Hq});function qq(r){let t=v(r,"x","logSigmoid");return cn(n=>({value:qt(Vs(qt(n))),gradFunc:i=>D(i,Qr(qt(n)))}))(t)}var Fx=T({logSigmoid_:qq});function Kq(r,t){let e=v(r,"a","sub"),n=v(t,"b","sub");[e,n]=Ht(e,n);let o={a:e,b:n};return k.runKernel(Os,o)}var lt=T({sub_:Kq});function jq(r,t=-1){let e=v(r,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return cn((o,s)=>{let a=Sr(o,t,!0),u=lt(o,a),l=lt(J(u,"float32"),Nr(mt(sr(u),t,!0)));return s([l]),{value:l,gradFunc:(p,m)=>{let[f]=m,d=!0,h=sr(f);return lt(p,D(mt(p,t,d),h))}}})(e)}var im=T({logSoftmax_:jq});function Xq(r,t=null,e=!1){let n=v(r,"x","logSumExp"),o=pr(t,n.shape),s=Sr(n,o,!0),i=lt(n,s),a=sr(i),u=mt(a,o),l=Nr(u),c=Y(R(s,l.shape),l);if(e){let p=bo(c.shape,o);return R(c,p)}return c}var am=T({logSumExp_:Xq});function Yq(r,t){let e=v(r,"a","logicalAnd","bool"),n=v(t,"b","logicalAnd","bool");Ot(e.shape,n.shape);let o={a:e,b:n};return k.runKernel($a,o)}var Fr=T({logicalAnd_:Yq});function Zq(r){let e={x:v(r,"x","logicalNot","bool")};return k.runKernel(Da,e)}var nu=T({logicalNot_:Zq});function Jq(r,t){let e=v(r,"a","logicalOr","bool"),n=v(t,"b","logicalOr","bool");Ot(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(Ra,o)}var lm=T({logicalOr_:Jq});function Qq(r,t){let e=v(r,"a","logicalXor","bool"),n=v(t,"b","logicalXor","bool");return Ot(e.shape,n.shape),Fr(lm(r,t),nu(Fr(r,t)))}var Ox=T({logicalXor_:Qq});var Px=2147483648;function tK(r,t,e="left"){let n=v(r,"sortedSequence","searchSorted"),o=v(t,"values","searchSorted"),s=n.shape[n.shape.length-1],i=o.shape[o.shape.length-1],a=R(n,[-1,s]),u=R(o,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Jt(u.shape)>=Px)throw new Error(`values tensor size must less than ${Px}`);if(a.shape[1]>=Px)throw new Error(`trailing dim_size must less than ${Px} for int32 output type, was ${a.shape[1]}`);let l={sortedSequence:a,values:u},c={side:e};return k.runKernel(Lp,l,c)}var uh=T({searchSorted_:tK});function CE(r,t){return uh(r,t,"left")}function eK(r,t,e,n,o){let s=v(r,"x","maxPool"),i=1,a=s,u=!1;s.rank===3&&(u=!0,a=R(s,[1,s.shape[0],s.shape[1],s.shape[2]])),E(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),E($r(e,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),ve("maxPool",n,o);let l={x:a},c={filterSize:t,strides:e,pad:n,dimRoundingMode:o},p=k.runKernel(cs,l,c);return u?R(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var ou=T({maxPool_:eK});function rK(r,t=[1,1,1],e,n,o,s="NDHWC"){let i=v(r,"x","maxPool3d"),a=i,u=!1;i.rank===4&&(u=!0,a=R(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),E(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),ve("maxPool3d",n,o);let l={x:a},c={filterSize:t,strides:e,pad:n,dimRoundingMode:o,dataFormat:s},p=k.runKernel(Pl,l,c);return u?R(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Lx=T({maxPool3d_:rK});function nK(r,t,e,n,o=!1){let i={x:v(r,"x","maxPoolWithArgmax")},a={filterSize:t,strides:e,pad:n,includeBatchInIndex:o},u=k.runKernel(_p,i,a);return{result:u[0],indexes:u[1]}}var IE=T({maxPoolWithArgmax_:nK});function oK(r,t){let e=v(r,"a","maximum"),n=v(t,"b","maximum");[e,n]=Ht(e,n),e.dtype==="bool"&&(e=J(e,"int32"),n=J(n,"int32")),Ot(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(us,o)}var Sn=T({maximum_:oK});function sK(r,t=null,e=!1){let o={x:v(r,"x","mean")},s={axis:t,keepDims:e};return k.runKernel(ps,o,s)}var Ne=T({mean_:sK});function Te(r,t="float32"){if(Le(r),t==="complex64"){let n=Te(r,"float32"),o=Te(r,"float32");return In(n,o)}let e=ap(Jt(r),t);return k.makeTensor(e,r,t)}function fr(r,t="float32"){if(Le(r),t==="complex64"){let n=fr(r,"float32"),o=Te(r,"float32");return In(n,o)}let e=Ud(Jt(r),t);return k.makeTensor(e,r,t)}function vE(r,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=v(r,"x","meshgrid",r instanceof Ft?r.dtype:"float32");if(t===void 0)return[n];let o=v(t,"y","meshgrid",t instanceof Ft?t.dtype:"float32"),s=Jt(n.shape),i=Jt(o.shape);return e==="xy"?(n=R(n,[1,-1]),o=R(o,[-1,1]),[Mt(fr([i,1],n.dtype),n),Mt(o,fr([1,s],o.dtype))]):(n=R(n,[-1,1]),o=R(o,[1,-1]),[Mt(n,fr([1,i],n.dtype)),Mt(fr([s,1],o.dtype),o)])}function iK(r,t){let e=v(r,"a","minimum"),n=v(t,"b","minimum");[e,n]=Ht(e,n),e.dtype==="bool"&&(e=J(e,"int32"),n=J(n,"int32")),Ot(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(fs,o)}var zi=T({minimum_:iK});function aK(r,t,e){E(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let n=v(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");E(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);let o=e==="reflect"?1:0;for(let a=0;a<n.rank;a++)E(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),E(t[a][0]>=0&&t[a][0]<=n.shape[a]-o&&t[a][1]>=0&&t[a][1]<=n.shape[a]-o,()=>`Padding in dimension ${a} cannot be greater than or equal to ${n.shape[a]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:t,mode:e},i={x:n};return k.runKernel(ds,i,s)}var Mx=T({mirrorPad_:aK});function lK(r,t){let e=v(r,"a","mod"),n=v(t,"b","mod");[e,n]=Ht(e,n);let o={a:e,b:n};return k.runKernel(Fa,o)}var zx=T({mod_:lK});function uK(r,t=null,e=!1){r=v(r,"x","moments");let n=pr(t,r.shape),o=Ne(r,n,e),s=o.shape;e||(s=bo(o.shape,n));let i=zt(lt(J(r,"float32"),R(o,s))),a=Ne(i,n,e);return{mean:o,variance:a}}var qu=T({moments_:uK});function cK(r,t,e,n){let o=v(t,"data","multiRNNCell"),s=Ya(e,"c","multiRNNCell"),i=Ya(n,"h","multiRNNCell"),a=o,u=[];for(let p=0;p<r.length;p++){let m=r[p](a,s[p],i[p]);u.push(m[0]),u.push(m[1]),a=m[1]}let l=[],c=[];for(let p=0;p<u.length;p+=2)l.push(u[p]),c.push(u[p+1]);return[l,c]}var SE=T({multiRNNCell_:cK});function pK(r,t,e,n=!1){let o=v(r,"logits","multinomial"),s=o.size,i=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);e=e||Math.random();let u={logits:i===1?R(o,[1,-1]):o},l={numSamples:t,seed:e,normalized:n},c=k.runKernel(Ap,u,l);return i===1?R(c,[c.size]):c}var NE=T({multinomial_:pK});function mK(r,t){let e=v(r,"a","notEqual","string_or_numeric"),n=v(t,"b","notEqual","string_or_numeric");[e,n]=Ht(e,n),Ot(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(Oa,o)}var Gs=T({notEqual_:mK});function fK(r,t,e=1,n=0,o="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let i={indices:v(r,"indices","oneHot","int32")},a={dtype:o,depth:t,onValue:e,offValue:n};return k.runKernel(gs,i,a)}var Bi=T({oneHot_:fK});function dK(r){let e={x:v(r,"x","onesLike")};return k.runKernel(di,e)}var wr=T({onesLike_:dK});function hK(r,t){let e=v(r,"v1","outerProduct"),n=v(t,"v2","outerProduct");E(e.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${n.rank}.`);let o=R(e,[-1,1]),s=R(n,[1,-1]);return Mt(o,s)}var TE=T({outerProduct_:hK});function gK(r,t,e=0){let n=v(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:t,constantValue:e},s={x:n};return k.runKernel(xs,s,o)}var pn=T({pad_:gK});function xK(r,t,e=0){return E(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),pn(r,[t],e)}var kE=T({pad1d_:xK});function yK(r,t,e=0){return E(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),pn(r,t,e)}var EE=T({pad2d_:yK});function bK(r,t,e=0){return E(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),pn(r,t,e)}var _E=T({pad3d_:bK});function wK(r,t,e=0){return E(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),pn(r,t,e)}var AE=T({pad4d_:wK});function CK(r,t,e){let n=v(r,"x","spaceToBatchND");E(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),E(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),E(n.shape.reduce((i,a,u)=>u>0&&u<=t.length?i&&(a+e[u-1][0]+e[u-1][1])%t[u-1]===0:i,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let o={x:n},s={blockShape:t,paddings:e};return k.runKernel(bi,o,s)}var su=T({spaceToBatchND_:CK});function IK(r,t,e,n,o,s,i){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let a=v(r,"x","maxPool"),u=a,l=!1;a.rank===3&&(l=!0,u=R(a,[1,a.shape[0],a.shape[1],a.shape[2]])),E($r(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let c=G0(u.shape,t,s,o,n),p=[c.dilationHeight,c.dilationWidth],m;n==="same"?m=SK([c.filterHeight,c.filterWidth],p):m=[[0,0],[0,0]];let f=p[0]===1&&p[1]===1,[d,h]=vK([c.inHeight,c.inWidth],p,m),g=f?n:"valid",x=f?u:su(u,p,d),w=(e==="avg"?()=>Zl(x,t,s,g,i):()=>ou(x,t,s,g,i))(),C=f?w:Jl(w,p,h);return l?R(C,[C.shape[1],C.shape[2],C.shape[3]]):C}function vK(r,t,e){let n=e.map(c=>c[0]),o=e.map(c=>c[1]),s=r.concat(n,o),i=t.map((c,p)=>(c-s[p]%c)%c),a=o.map((c,p)=>c+i[p]),u=t.map((c,p)=>[n[p],a[p]]),l=t.map((c,p)=>[0,i[p]]);return[u,l]}function SK(r,t){let n=r.map((i,a)=>i+(i-1)*(t[a]-1)).map(i=>i-1),o=n.map(i=>Math.floor(i/2)),s=n.map((i,a)=>i-o[a]);return n.map((i,a)=>[o[a],s[a]])}var Bx=T({pool_:IK});function NK(r,t){let e=v(r,"x","prelu"),n=v(t,"alpha","prelu"),o={x:e,alpha:n};return k.runKernel(bs,o)}var iu=T({prelu_:NK});function TK(r,t=null,e=!1){let n=v(r,"x","prod");n.dtype==="bool"&&(n=J(n,"int32"));let o={x:n},s={axis:t,keepDims:e};return k.runKernel(ws,o,s)}var Vx=T({prod_:TK});function kK(r,t,e,n){let o=r.map((c,p)=>v(c,`tensors${p}`,"raggedGather","int32")),s=v(t,"paramsDenseValues","raggedGather"),i=v(e,"indices","raggedGather","int32"),a={paramsNestedSplits:o,paramsDenseValues:s,indices:i},u={outputRaggedRank:n},l=k.runKernel($p,a,u);return{outputNestedSplits:l.slice(0,l.length-1),outputDenseValues:l[l.length-1]}}var $E=T({raggedGather_:kK});function EK(r,t,e){let n=v(r,"starts","raggedRange"),o=v(t,"limits","raggedRange",n.dtype),s=v(e,"deltas","raggedRange",n.dtype),i={starts:n,limits:o,deltas:s},a=k.runKernel(Dp,i);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}var DE=T({raggedRange_:EK});function _K(r,t,e,n,o){let s=v(r,"shape","raggedTensorToTensor","int32"),i=v(t,"values","raggedTensorToTensor"),a=v(e,"defaultValue","raggedTensorToTensor",i.dtype),u=n.map((p,m)=>v(p,`tensors${m}`,"raggedTensorToTensor","int32")),l={shape:s,values:i,defaultValue:a,rowPartitionTensors:u},c={rowPartitionTypes:o};return k.runKernel(Rp,l,c)}var RE=T({raggedTensorToTensor_:_K});function AK(r,t,e){Le(r);let n=Jt(r),o=null;if(e==null||e==="float32")o=new Float32Array(n);else if(e==="int32")o=new Int32Array(n);else if(e==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${e}`);for(let s=0;s<n;s++)o[s]=t();return k.makeTensor(o,r,e)}var FE=T({rand_:AK});var qx=El(ch());var t_={};Ut(t_,{TEST_EPSILON_FLOAT16:()=>ZE,createVideoElement:()=>WK,encodeStrings:()=>QE,expectArrayBuffersEqual:()=>GK,expectArraysClose:()=>MK,expectArraysEqual:()=>BK,expectNumbersClose:()=>JE,expectPromiseToFail:()=>zK,expectValuesInRange:()=>VK,play:()=>UK,testEpsilon:()=>Wx});var LK=.001,ZE=.1;function MK(r,t,e){return e==null&&(e=Wx()),tS(r,t,(n,o)=>eS(n,o,e))}function Wx(){return k.backend.floatPrecision()===32?LK:ZE}function tS(r,t,e){let n=!0;if((mr(r)||mr(t))&&(n=!1),mr(r)&&mr(t)&&(n=!0),n){let i=r.constructor.name,a=t.constructor.name;if(i!==a)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${a}`)}if(Array.isArray(r)&&Array.isArray(t)){let i=Gr(r),a=Gr(t);if(!Fn(i,a))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${a}]`)}let o=mr(r)?r:zs(r),s=mr(t)?t:zs(t);if(o.length!==s.length)throw new Error(`Arrays have different lengths actual: ${o.length} vs expected: ${s.length}.
Actual:   ${o}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let a=o[i],u=s[i];if(!e(a,u))throw new Error(`Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${u}.
Actual:   ${o}.
Expected: ${s}.`)}typeof expect!="undefined"&&expect().nothing()}function zK(r,t){r().then(()=>t.fail(),()=>t()),typeof expect!="undefined"&&expect().nothing()}function BK(r,t){let e=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Bo(r)||Bo(r[0])||Bo(t)||Bo(t[0])?tS(r,e,(n,o)=>n==o):tS(r,t,(n,o)=>eS(n,o,0))}function JE(r,t,e){if(e==null&&(e=Wx()),!eS(r,t,e))throw new Error(`Numbers differ: actual === ${r}, expected === ${t}`);typeof expect!="undefined"&&expect().nothing()}function eS(r,t,e){return!isFinite(r)&&!isFinite(t)?!0:!(isNaN(r)||isNaN(t)||Math.abs(r-t)>e)}function VK(r,t,e){for(let n=0;n<r.length;n++)if(r[n]<t||r[n]>e)throw new Error(`Value out of range:${r[n]} low: ${t}, high: ${e}`)}function GK(r,t){let e=new Float32Array(r),n=new Float32Array(t);if(e.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${e.length}`);for(let o=0;o<n.length;o++)if(e[o]!==n[o])throw new Error(`Expected ArrayBuffer value at ${o} to be ${n[o]} but got ${e[o]} instead`)}function QE(r){for(let t=0;t<r.length;t++){let e=r[t];Array.isArray(e)?QE(e):r[t]=Kl(e)}return r}function WK(r){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(r),new Promise(e=>{t.addEventListener("loadeddata",n=>e(t)),t.load()})}async function UK(r){await r.play(),"requestVideoFrameCallback"in r&&await new Promise(t=>{r.requestVideoFrameCallback(t)})}var ju=class{constructor(t,e,n,o,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let i=s||Math.random();this.random=qx.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let t,e,n=!1;for(;!n;){let o,s,i;do o=2*this.random()-1,s=2*this.random()-1,i=o*o+s*s;while(i>=1||i===0);let a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*o*a,e=this.mean+this.stdDev*s*a,(!this.truncated||this.isValidTruncated(t))&&(n=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}},Ux=class{constructor(t,e,n,o){this.alpha=t,this.beta=1/e,this.dtype=n;let s=o||Math.random();this.randu=qx.alea(s.toString()),this.randn=new ju(0,1,n,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,o,s,i;for(;;){do o=this.randn.nextValue(),i=1+this.c*o;while(i<=0);if(i*=i*i,t=o*o,e=1-.331*t*t,n=.5*t+this.d*(1-i+Math.log(i)),s=this.randu(),s<e||Math.log(s)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}},Hx=class{constructor(t=0,e=1,n,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=qx.alea(o)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function HK(r,t,e=1,n="float32",o){if(Le(r),e==null&&(e=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new Ux(t,e,n,o),i=bt(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var e_=T({randomGamma_:HK});function qK(r,t=0,e=1,n,o){if(Le(r),n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new ju(t,e,n,!1,o),i=bt(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var Xu=T({randomNormal_:qK});function KK(r,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return Xu(r,0,1,t,e)}var r_=T({randomStandardNormal_:KK});function jK(r,t=0,e=1,n="float32",o){Le(r);let s=bt(r,n),i=new Hx(t,e,null,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var Vi=T({randomUniform_:jK});function Gi(r,t,e=1,n="float32"){if(e===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:t,step:e,dtype:n};return k.runKernel(Ll,{},o)}function XK(r){let e={input:v(r,"input","real")};return k.runKernel(Fp,e)}var tl=T({real_:XK});function YK(r){let e={x:v(r,"x","reciprocal")};return k.runKernel(Cs,e)}var Kx=T({reciprocal_:YK});function ZK(r){let e={x:v(r,"x","relu")};return k.runKernel(Is,e)}var Or=T({relu_:ZK});function JK(r){let e={x:v(r,"x","relu6")};return k.runKernel(Ns,e)}var um=T({relu6_:JK});function QK(r,t){let n={x:v(r,"x","reverse")},o={dims:t};return k.runKernel(Ts,n,o)}var dr=T({reverse_:QK});function tj(r){let t=v(r,"x","reverse");return E(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),dr(t,0)}var n_=T({reverse1d_:tj});function ej(r,t){let e=v(r,"x","reverse");return E(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),dr(e,t)}var o_=T({reverse2d_:ej});function rj(r,t){let e=v(r,"x","reverse");return E(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),dr(e,t)}var s_=T({reverse3d_:rj});function nj(r,t){let e=v(r,"x","reverse");return E(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),dr(e,t)}var i_=T({reverse4d_:nj});function oj(r){let e={x:v(r,"x","round")};return k.runKernel(ks,e)}var cm=T({round_:oj});function sj(r){let e={x:v(r,"x","rsqrt","float32")};return k.runKernel(Es,e)}var pm=T({rsqrt_:sj});function ij(r){let e={x:v(r,"x","selu")};return k.runKernel(Ba,e)}var mm=T({selu_:ij});function aj(r,t,e,n,o,s=[1,1],i="NHWC"){let a=v(r,"x","separableConv2d"),u=v(t,"depthwiseFilter","separableConv2d"),l=v(e,"pointwiseFilter","separableConv2d"),c=a,p=!1;if(a.rank===3&&(p=!0,c=R(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");E(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),E(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),E(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),E(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),E(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let m=u.shape[2],f=u.shape[3];E(l.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${l.shape[2]}.`);let d=Oi(c,u,n,o,i,s),g=vn(d,l,1,"valid",i);return p?R(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var fm=T({separableConv2d_:aj});async function lj(r,t){let e=v(r,"x","setdiff1d"),n=v(t,"y","setdiff1d");E(e.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${n.dtype}).`),E(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),E(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=await e.data(),s=await n.data(),i=new Set(s),a=0;for(let c=0;c<o.length;c++)i.has(o[c])||a++;let u=new pe([a],e.dtype),l=new pe([a],"int32");for(let c=0,p=0;c<o.length;c++)i.has(o[c])||(u.values[p]=o[c],l.values[p]=c,p++);return[u.toTensor(),l.toTensor()]}var a_=lj;function uj(r){let e={x:v(r,"x","sign")};return k.runKernel(Ga,e)}var jx=T({sign_:uj});function cj(r){let e={x:v(r,"x","sin","float32")};return k.runKernel(_s,e)}var dm=T({sin_:cj});function pj(r){let e={x:v(r,"x","sinh")};return k.runKernel(Va,e)}var hm=T({sinh_:pj});function mj(r,t,e){let n=v(r,"x","slice1d");return E(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Rt(n,[t],[e])}var gm=T({slice1d_:mj});function fj(r,t,e){let n=v(r,"x","slice2d");return E(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Rt(n,t,e)}var ph=T({slice2d_:fj});function dj(r,t,e){let n=v(r,"x","slice3d");return E(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Rt(n,t,e)}var xm=T({slice3d_:dj});function hj(r,t,e){let n=v(r,"x","slice4d");return E(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Rt(n,t,e)}var Yu=T({slice4d_:hj});function gj(r,t=-1){let e=v(r,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let n={logits:e},o={dim:t};return k.runKernel(Rs,n,o)}var au=T({softmax_:gj});function xj(r){E(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let t={input:r};return k.runKernel(Ip,t)}var lu=T({fft_:xj});function yj(r){E(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let t={input:r};return k.runKernel(vp,t)}var el=T({ifft_:yj});function bj(r){let t=r.shape[r.shape.length-1],e=r.size/t,n;if(t<=2){let o=R(r,[e,t]);n=el(o)}else{let o=[e,2*(t-1)],s=R(tl(r),[e,t]),i=R(tu(r),[e,t]),a=dr(Rt(s,[0,1],[e,t-2]),1),u=D(dr(Rt(i,[0,1],[e,t-2]),1),pt(-1)),l=oe([s,a],1),c=oe([i,u],1),p=R(In(l,c),[o[0],o[1]]);n=el(p)}if(n=tl(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=R(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var ym=T({irfft_:bj});function wj(r,t,e=0){let o={x:v(r,"x","split")},s={numOrSizeSplits:t,axis:e};return k.runKernel(wi,o,s)}var hr=T({split_:wj});function Cj(r,t){E(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let e=r.shape[r.shape.length-1],n=r.size/e,o;if(t!=null&&t<e){let d=r.shape.map(g=>0),h=r.shape.map(g=>g);h[r.shape.length-1]=t,o=Rt(r,d,h),e=t}else if(t!=null&&t>e){let d=r.shape.map(h=>h);d[r.shape.length-1]=t-e,o=oe([r,Te(d)],r.shape.length-1),e=t}else o=r;let s=It(o),i=R(In(o,s),[n,e]),a=lu(i),u=Math.floor(e/2)+1,l=tl(a),c=tu(a),p=hr(l,[u,e-u],l.shape.length-1),m=hr(c,[u,e-u],c.shape.length-1),f=o.shape.slice();return f[o.shape.length-1]=u,R(In(p[0],m[0]),f)}var uu=T({rfft_:Cj});function Ij(r,t){let e=v(r,"a","squaredDifference"),n=v(t,"b","squaredDifference");[e,n]=Ht(e,n),Ot(e.shape,n.shape);let o={a:e,b:n},s={};return k.runKernel(Fs,o,s)}var bm=T({squaredDifference_:Ij});function vj(r,t){let e=v(r,"x","squeeze","string_or_numeric");return R(e,n0(e.shape,t).newShape)}var zn=T({squeeze_:vj});function Sj(r,t=0){let e=Ya(r,"tensors","stack","string_or_numeric");E(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&E(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");let n=e,o={axis:t};return k.runKernel(hi,n,o)}var qe=T({stack_:Sj});function Nj(r,t=0){let n={x:v(r,"x","step")},o={alpha:t};return k.runKernel(mo,n,o)}var wo=T({step_:Nj});function Tj(r,t,e,n,o=0,s=0,i=0,a=0,u=0){let c={x:v(r,"x","stridedSlice","string_or_numeric")},p={begin:t,end:e,strides:n,beginMask:o,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};return k.runKernel(Ha,c,p)}var Xx=T({stridedSlice_:Tj});function kj(r){let e={x:v(r,"x","tan","float32")};return k.runKernel(Ps,e)}var Yx=T({tan_:kj});function Ke(r,t){Zn(r);let e=Gr(r,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return sn(r,null,e,t)}function Ws(r,t,e){if(Zn(r),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Gr(r,e);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return sn(r,t,n,e)}function Zx(r,t,e){if(Zn(r),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Gr(r,e);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return sn(r,t,n,e)}function l_(r,t,e){if(Zn(r),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Gr(r,e);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return sn(r,t,n,e)}function u_(r,t,e){if(Zn(r),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Gr(r,e);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return sn(r,t,n,e)}function c_(r,t,e){if(Zn(r),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Gr(r,e);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||n,sn(r,t,n,e)}function Ej(r,t=1,e=!0){let n=v(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);let s={x:n},i={k:t,sorted:e},[a,u]=k.runKernel(qa,s,i);return{values:a,indices:u}}var Jx=T({topk_:Ej});function _j(r,t=0,e=1,n,o){if(Le(r),n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new ju(t,e,n,!0,o),i=bt(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var wm=T({truncatedNormal_:_j});function Aj(r,t=0){let e=v(r,"x","unique","string_or_numeric");E(e.rank>0,()=>"The input tensor must be at least 1D");let n={x:e},o={axis:t},[s,i]=k.runKernel(zp,n,o);return{values:s,indices:i}}var Qx=T({unique_:Aj});function $j(r,t,e){let n=v(r,"x","unsortedSegmentSum"),o=v(t,"segmentIds","unsortedSegmentSum","int32");E(aa(e),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},i={numSegments:e};return k.runKernel(Hl,s,i)}var Cm=T({unsortedSegmentSum_:$j});function Dj(r,t=0){let e=v(r,"x","unstack","string_or_numeric");E(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);let n={value:e},o={axis:t};return k.runKernel(Ci,n,o)}var gr=T({unstack_:Dj});function p_(r,t){return uh(r,t,"right")}function ty(r,t=!0,e,n){return k.makeVariable(r,t,e,n)}function ey(r,t){let e=[];for(let s=0;s<t.length;s++)t[s]&&e.push(s);let n=bt(r,"int32"),o=bt([e.length,r.length],"int32");for(let s=0;s<e.length;s++){let i=n.indexToLoc(e[s]),a=s*r.length;o.values.set(i,a)}return o.toTensor()}async function Rj(r){let t=v(r,"condition","whereAsync","bool"),e=await t.data(),n=ey(t.shape,e);return r!==t&&t.dispose(),n}var ry=Rj;async function Fj(r,t,e){let n=v(r,"tensor","boolMask"),o=v(t,"mask","boolMask","bool"),s=e==null?0:e,i=o.rank,a=n.shape;E(i>0,()=>"mask cannot be scalar"),Re(a.slice(s,s+i),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let h=s;h<s+i;h++)u*=a[h];let l=a.slice(0,s).concat([u],a.slice(s+i)),c=R(n,l),p=R(o,[-1]),m=await ry(p),f=zn(m,[1]),d=Mi(c,f,s);return r!==n&&n.dispose(),t!==o&&o.dispose(),f.dispose(),c.dispose(),p.dispose(),m.dispose(),d}var Oj=Fj;function Pj(r,t,e){let n=v(r,"x","transpose");if(t==null&&(t=n.shape.map((i,a)=>a).reverse()),E(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(i=>{E(i>=0&&i<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let o={x:n},s={perm:t};return n.dtype==="complex64"?B(()=>{let i=tl(n),a=tu(n);return i=k.runKernel(to,{x:i},s),a=k.runKernel(to,{x:a},s),e&&(a=qt(a)),In(i,a)}):k.runKernel(to,o,s)}var Pt=T({transpose_:Pj});function Lj(r,t,e,n,o=!0){let s=v(r,"v","movingAverage"),i=v(t,"x","movingAverage"),a=v(e,"decay","movingAverage");N0(s,i),E(Fn(s.shape,i.shape),()=>"Shape mismatch in v and x");let u=pt(1),l=lt(u,a),c=D(lt(i,s),l);if(o){E(n!=null,()=>"When using zeroDebias: true, step is required.");let p=v(n,"step","movingAverage");c=ut(c,lt(u,ln(a,p)))}return Y(s,c)}var Mj=T({movingAverage_:Lj});var mh={};Ut(mh,{calculateShapes:()=>m_,validateInput:()=>ny,validateUpdateShape:()=>rS});function rS(r,t,e){let n=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(e.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(e.rank-o))throw new Error(s+` Output shape length < ${n+(e.rank-o)}`);if(e.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let i=0;i<o;++i)if(e.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-o;++i)if(e.shape[i+o]!==r[i+n])throw new Error(s+` updates.shape[${i+o}] (${e.shape[i+o]}) != shape[${i+o}] (${r[i+o]})`)}function ny(r,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}rS(e,t,r)}function m_(r,t,e){let n=t.shape.length,o=n>1?t.shape[n-1]:1,s=e.length,i=1;for(let p=o;p<s;++p)i*=e[p];let a=o<1?1:o,u=Jt(t.shape)/a,l=[...ai(e.slice(0,o)),1],c=Jt(e);return{sliceRank:o,numUpdates:u,sliceSize:i,strides:l,outputSize:c}}function zj(r,t,e){Le(e);let n=v(r,"indices","scatterND","int32"),o=v(t,"updates","scatterND");ny(o,n,e);let s={indices:n,updates:o},i={shape:e};return k.runKernel(za,s,i)}var Bj=T({scatterND_:zj});function f_(r,t,e,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(e.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function Gj(r,t,e,n=0){Le(e);let o=v(r,"sparseIndices","sparseToDense","int32"),s=v(t,"sparseValues","sparseToDense","string_or_numeric"),i=v(n,"defaultValue","sparseToDense",s.dtype);f_(o,s,e,i);let a={sparseIndices:o,sparseValues:s,defaultValue:i},u={outputShape:e};return k.runKernel(Mp,a,u)}var Wj=T({sparseToDense_:Gj});function Uj(r,t){let e=v(t,"indices","gatherND","int32"),o={params:v(r,"x","gatherND","string_or_numeric"),indices:e};return k.runKernel(Sa,o)}var Hj=T({gatherND_:Uj});function d_(r,t){if(t==null)return r.shape.slice();if(Fn(r.shape,t))return t;if(r.shape.length===t.length){let e=[];for(let n=0;n<r.shape.length;n++)t[n]==null&&r.shape[n]!=null?e.push(r.shape[n]):e.push(t[n]);return e}return t}function qj(r,t,e,n){let o=v(r,"x","dropout");if(E(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),E(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return r instanceof Ft?o.clone():o;let s=d_(o,e),i=1-t,a=ut(Li(Y(Vi(s,0,1,"float32",n),i)),i);return D(o,a)}var nS=T({dropout_:qj});function oS(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function fh(r,t,e){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let i=2*Math.PI*s/(r+n-1);o[s]=t-e*Math.cos(i)}return Ke(o,"float32")}async function Kj(r,t,e=1){let n=v(r,"predictions","inTopK"),o=v(t,"targets","inTopK");E(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),E(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),Re(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];E(e>0&&e<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${e}`);let i=await n.data(),a=await o.data(),[u,l]=[i.length/s,s],c=o0("bool",u);for(let p=0;p<u;p++){let m=p*l,f=i.subarray(m,m+l),d=[];for(let h=0;h<f.length;h++)d.push({value:f[h],index:h});d.sort((h,g)=>g.value-h.value),c[p]=0;for(let h=0;h<e;h++)if(d[h].index===a[p]){c[p]=1;break}}return r!==n&&n.dispose(),t!==o&&o.dispose(),or(c,o.shape,"bool")}var jj=Kj;var cu={};Ut(cu,{conv2d:()=>h_,depthwiseConv2d:()=>g_,matMul:()=>x_});function Xj(r,t,e,n,o,s="NHWC",i){let a=r;r.rank===3&&(a=R(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=t;u.rank===3&&(u=R(t,[1,t.shape[0],t.shape[1],t.shape[2]])),E(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),E(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),E(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let l=s==="NHWC"?a.shape[3]:a.shape[1],c=s==="NHWC"?u.shape[3]:u.shape[1];E(l===e[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${e[2]}.`),E(c===e[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${e[3]}).`),ve("conv2dDerFilter",o,i);let p={x:a,dy:u},m={strides:n,pad:o,dataFormat:s,dimRoundingMode:i,filterShape:e};return k.runKernel(fp,p,m)}var Im=T({conv2DBackpropFilter_:Xj});function Zu(r,t,e){if(e==null||e==="linear")return r;if(e==="relu")return D(r,wo(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Ju(r,t){let e=t,n=xe(r.shape,t.shape);return n.length>0&&(e=mt(e,n)),R(e,r.shape)}function Qu(r,t,e,n){if(t==="linear")return r;if(t==="relu")return Or(r);if(t==="elu")return Pi(r);if(t==="relu6")return um(r);if(t==="prelu")return iu(r,e);if(t==="leakyrelu")return eu(r,n);if(t==="sigmoid")return Qr(r);throw new Error(`Unknown fused activation ${t}.`)}var tc=(r,t)=>!(r>0)||t==="linear";function Yj({x:r,filter:t,strides:e,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",tc(k.state.gradientDepth,u)===!1){E(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let _=vn(r,t,e,n,o,s,i);return a!=null&&(_=Y(_,a)),Qu(_,u,l,c)}let p=v(r,"x","conv2d","float32"),m=v(t,"filter","conv2d","float32"),f=p,d=!1;p.rank===3&&(d=!0,f=R(p,[1,p.shape[0],p.shape[1],p.shape[2]])),E(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),E(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),ve("fused conv2d",n,i);let h=o==="NHWC"?f.shape[3]:f.shape[1];E(m.shape[2]===h,()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${m.shape[2]}.`),E($r(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let g=Wu(f.shape,m.shape,e,s,n,i),x;a!=null&&(x=v(a,"bias","fused conv2d"),[x]=Ht(x,p),o==="NHWC"?Ot(g.outShape,x.shape):(E(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),E(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(l!=null){let _=l.shape;if(E(_.length<=1||_.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${_.length}.`),_.length===1)E(_[0]===1||_[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the number of output channels (${g.outChannels}).`);else if(_.length===3)try{Ot(_,g.outShape)}catch(A){let $=`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error($)}b=v(l,"prelu weights","fused conv2d")}let w=(_,A)=>{E(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);let[$,F,P,V]=A,G=Zu(_,P,u);E(ro(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let W=em(F.shape,G,$,e,n),q=Im(F,G,$.shape,e,n),H=[W,q];if(V!=null){let K=Ju(V,G);H.push(K)}return H},C={x:f,filter:m,bias:x,preluActivationWeights:b},N={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return a==null?cn((A,$,F)=>{let P=k.runKernel(Si,C,N);return F([$,A,P]),d&&(P=R(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:w}})(f,m):cn((A,$,F,P)=>{let V=k.runKernel(Si,C,N);return P([$,A,V,F]),d&&(V=R(V,[V.shape[1],V.shape[2],V.shape[3]])),{value:V,gradFunc:w}})(f,m,x)}var h_=T({fusedConv2d_:Yj});function Zj(r,t,e,n,o,s=[1,1],i){let a=r;r.rank===3&&(a=R(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let u=t;u.rank===3&&(u=R(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={x:a,dy:u},c={strides:n,pad:o,dimRoundingMode:i,dilations:s,filterShape:e};return k.runKernel(xp,l,c)}var oy=T({depthwiseConv2dNativeBackpropFilter_:Zj});function Jj(r,t,e,n,o,s=[1,1],i){let a=t,u=!1;t.rank===3&&(u=!0,a=R(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={dy:a,filter:e},c={strides:n,pad:o,dimRoundingMode:i,dilations:s,inputShape:r},p=k.runKernel(yp,l,c);return u?R(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var sy=T({depthwiseConv2dNativeBackpropInput_:Jj});function Qj({x:r,filter:t,strides:e,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(tc(k.state.gradientDepth,u)===!1){let N=Oi(r,t,e,n,o,s,i);return a!=null&&(N=Y(N,a)),Qu(N,u,l,c)}let p=v(r,"x","depthwiseConv2d","float32"),m=v(t,"filter","depthwiseConv2d","float32"),f=p,d=!1;p.rank===3&&(d=!0,f=R(p,[1,p.shape[0],p.shape[1],p.shape[2]])),E(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),E(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),E(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),E($r(e,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),ve("fused depthwiseConv2d",n,i);let h=Wu(f.shape,m.shape,e,s,n,i,!0),g;a!=null&&(g=v(a,"bias","fused conv2d"),[g]=Ht(g,p),Ot(h.outShape,g.shape));let x;l!=null&&(x=v(l,"prelu weights","fused depthwiseConv2d"));let b=(N,_)=>{E(ro(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[A,$,F,P]=_,V=Zu(N,F,u),G=sy($.shape,V,A,e,n,s,i),W=oy($,V,A.shape,e,n,s,i);if(P!=null){let q=Ju(g,V);return[G,W,q]}return[G,W]},w={x:f,filter:m,bias:g,preluActivationWeights:x},C={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return a==null?cn((_,A,$)=>{let F=k.runKernel(Ni,w,C);return $([A,_,F]),d&&(F=R(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:b}})(f,m):cn((_,A,$,F)=>{let P=k.runKernel(Ni,w,C);return F([A,_,P,$]),d&&(P=R(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:b}})(f,m,g)}var g_=T({fusedDepthwiseConv2d_:Qj});function t6({a:r,b:t,transposeA:e=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(tc(k.state.gradientDepth,s)===!1){let V=Mt(r,t,e,n);return o!=null&&(V=Y(V,o)),Qu(V,s,i,a)}let u=v(r,"a","fused matMul"),l=v(t,"b","fused matMul");[u,l]=Ht(u,l);let c=e?u.shape[u.rank-2]:u.shape[u.rank-1],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],m=e?u.shape[u.rank-1]:u.shape[u.rank-2],f=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=u.shape.slice(0,-2),h=l.shape.slice(0,-2),g=Jt(d),x=Jt(h);E(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${e} and transposeB=${n} must match.`);let w=Ot(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([m,f]),C=e?R(u,[g,c,m]):R(u,[g,m,c]),N=n?R(l,[x,f,p]):R(l,[x,p,f]),_;o!=null&&(_=v(o,"bias","fused matMul"),[_]=Ht(_,u),Ot(w,_.shape));let A;i!=null&&(A=v(i,"prelu weights","fused matMul"));let $=(V,G)=>{let[W,q,H,K]=G,X=Zu(R(V,H.shape),H,s),Z,et;if(!e&&!n?(Z=Mt(X,q,!1,!0),et=Mt(W,X,!0,!1)):!e&&n?(Z=Mt(X,q,!1,!1),et=Mt(X,W,!0,!1)):e&&!n?(Z=Mt(q,X,!1,!0),et=Mt(W,X,!1,!1)):(Z=Mt(q,X,!0,!0),et=Mt(X,W,!0,!0)),o!=null){let rt=Ju(K,X);return[Z,et,rt]}else return[Z,et]},F={a:C,b:N,bias:_,preluActivationWeights:A},P={transposeA:e,transposeB:n,activation:s,leakyreluAlpha:a};return o==null?cn((G,W,q)=>{let H=k.runKernel(vi,F,P);return q([G,W,H]),{value:R(H,w),gradFunc:$}})(C,N):cn((G,W,q,H)=>{let K=k.runKernel(vi,F,P);return H([G,W,K,q]),{value:R(K,w),gradFunc:$}})(C,N,_)}var x_=T({fusedMatMul_:t6});function e6(r){return fh(r,.54,.46)}var y_=T({hammingWindow_:e6});function r6(r){return fh(r,.5,.5)}var iy=T({hannWindow_:r6});function n6(r,t,e,n=!1,o=0){let s=0,i=[];for(;s+t<=r.size;)i.push(Rt(r,s,t)),s+=e;if(n)for(;s<r.size;){let a=s+t-r.size,u=oe([Rt(r,s,t-a),yo([a],o)]);i.push(u),s+=e}return i.length===0?Ws([],[0,t]):R(oe(i),[i.length,t])}var ay=T({frame_:n6});function o6(r,t,e,n,o=iy){n==null&&(n=oS(t));let s=ay(r,t,e),i=D(s,o(t));return uu(i,n)}var b_=T({stft_:o6});function s6(r,t,e,n,o="bilinear",s=0){let i=v(r,"image","cropAndResize"),a=v(t,"boxes","cropAndResize","float32"),u=v(e,"boxInd","cropAndResize","int32"),l=a.shape[0];E(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),E(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${a.shape}.`),E(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${a.shape}.`),E(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),E(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),E(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let c={image:i,boxes:a,boxInd:u},p={method:o,extrapolationValue:s,cropSize:n};return k.runKernel(ya,c,p)}var w_=T({cropAndResize_:s6});function i6(r){let t=v(r,"image","flipLeftRight","float32");E(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t};return k.runKernel(va,e,{})}var C_=T({flipLeftRight_:i6});function a6(r){let t=v(r,"image","grayscaleToRGB"),e=t.rank-1,n=t.shape[e];E(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),E(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(t.rank);return o.fill(1,0,e),o[e]=3,Rr(t,o)}var I_=T({grayscaleToRGB_:a6});function l6(r,t,e=0,n=.5){let o=v(r,"image","rotateWithOffset","float32");E(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},i={radians:t,fillValue:e,center:n};return k.runKernel(ja,s,i)}var v_=T({rotateWithOffset_:l6});function Co(r,t,e,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=r.shape[0];return e=Math.min(e,i),E(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),E(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),E(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),E(t.rank===1,()=>"scores must be a 1D tensor"),E(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),E(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:e,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function u6(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppression","float32"),i=v(t,"scores","nonMaxSuppression","float32"),a=Co(s,i,e,n,o);e=a.maxOutputSize,n=a.iouThreshold,o=a.scoreThreshold;let u={maxOutputSize:e,iouThreshold:n,scoreThreshold:o};return k.runKernel(Pa,{boxes:s,scores:i},u)}var S_=T({nonMaxSuppression_:u6});function N_(r,t,e){let n=c6(r,t,e),o=n<0?-(n+1):n;r.splice(o,0,t)}function c6(r,t,e){return m6(r,t,e||p6)}function p6(r,t){return r>t?1:r<t?-1:0}function m6(r,t,e){let n=0,o=r.length,s=0,i=!1;for(;n<o;){s=n+(o-n>>>1);let a=e(t,r[s]);a>0?n=s+1:(o=s,i=!a)}return i?n:-n-1}function ly(r,t,e,n,o){return sS(r,t,e,n,o,0)}function uy(r,t,e,n,o,s){return sS(r,t,e,n,o,0,!1,s,!0)}function cy(r,t,e,n,o,s){return sS(r,t,e,n,o,s,!0)}function sS(r,t,e,n,o,s,i=!1,a=!1,u=!1){let l=[];for(let g=0;g<t.length;g++)t[g]>o&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(T_);let c=s>0?-.5/s:0,p=[],m=[];for(;p.length<e&&l.length>0;){let g=l.pop(),{score:x,boxIndex:b,suppressBeginIndex:w}=g;if(x<o)break;let C=!1;for(let N=p.length-1;N>=w;--N){let _=f6(r,b,p[N]);if(_>=n){C=!0;break}if(g.score=g.score*d6(n,c,_),g.score<=o)break}g.suppressBeginIndex=p.length,C||(g.score===x?(p.push(b),m.push(g.score)):g.score>o&&N_(l,g,T_))}let f=p.length,d=e-f;a&&d>0&&(p.push(...new Array(d).fill(0)),m.push(...new Array(d).fill(0)));let h={selectedIndices:p};return i&&(h.selectedScores=m),u&&(h.validOutputs=f),h}function f6(r,t,e){let n=r.subarray(t*4,t*4+4),o=r.subarray(e*4,e*4+4),s=Math.min(n[0],n[2]),i=Math.min(n[1],n[3]),a=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),l=Math.min(o[0],o[2]),c=Math.min(o[1],o[3]),p=Math.max(o[0],o[2]),m=Math.max(o[1],o[3]),f=(a-s)*(u-i),d=(p-l)*(m-c);if(f<=0||d<=0)return 0;let h=Math.max(s,l),g=Math.max(i,c),x=Math.min(a,p),b=Math.min(u,m),w=Math.max(x-h,0)*Math.max(b-g,0);return w/(f+d-w)}function d6(r,t,e){let n=Math.exp(t*e*e);return e<=r?n:0}function T_(r,t){return r.score-t.score||r.score===t.score&&t.boxIndex-r.boxIndex}async function h6(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY){let s=v(r,"boxes","nonMaxSuppressionAsync"),i=v(t,"scores","nonMaxSuppressionAsync"),a=Co(s,i,e,n,o);e=a.maxOutputSize,n=a.iouThreshold,o=a.scoreThreshold;let u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:p}=ly(l,c,e,n,o);return s!==r&&s.dispose(),i!==t&&i.dispose(),Ke(p,"int32")}var k_=h6;function g6(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let i=v(r,"boxes","nonMaxSuppression"),a=v(t,"scores","nonMaxSuppression"),u=Co(i,a,e,n,o,s);e=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l={boxes:i,scores:a},c={maxOutputSize:e,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},p=k.runKernel(Ma,l,c);return{selectedIndices:p[0],selectedScores:p[1]}}var E_=T({nonMaxSuppressionWithScore_:g6});async function x6(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let i=v(r,"boxes","nonMaxSuppressionAsync"),a=v(t,"scores","nonMaxSuppressionAsync"),u=Co(i,a,e,n,o,s);e=u.maxOutputSize,n=u.iouThreshold,o=u.scoreThreshold,s=u.softNmsSigma;let l=await Promise.all([i.data(),a.data()]),c=l[0],p=l[1],{selectedIndices:m,selectedScores:f}=cy(c,p,e,n,o,s);return i!==r&&i.dispose(),a!==t&&a.dispose(),{selectedIndices:Ke(m,"int32"),selectedScores:Ke(f)}}var __=x6;function y6(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let i=v(r,"boxes","nonMaxSuppression"),a=v(t,"scores","nonMaxSuppression"),u=Co(i,a,e,n,o,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,m={boxes:i,scores:a},f={maxOutputSize:l,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:s},d=k.runKernel(La,m,f);return{selectedIndices:d[0],validOutputs:d[1]}}var A_=T({nonMaxSuppressionPadded_:y6});async function b6(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let i=v(r,"boxes","nonMaxSuppressionAsync"),a=v(t,"scores","nonMaxSuppressionAsync"),u=Co(i,a,e,n,o,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,[m,f]=await Promise.all([i.data(),a.data()]),{selectedIndices:d,validOutputs:h}=uy(m,f,l,c,p,s);return i!==r&&i.dispose(),a!==t&&a.dispose(),{selectedIndices:Ke(d,"int32"),validOutputs:pt(h,"int32")}}var $_=b6;function w6(r,t,e=!1,n=!1){let o=v(r,"images","resizeBilinear");E(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),E(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),E(n===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,i=!1;o.rank===3&&(i=!0,s=R(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=t,a={images:s},u={alignCorners:e,halfPixelCenters:n,size:t},l=k.runKernel(Ss,a,u);return i?R(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var py=T({resizeBilinear_:w6});function C6(r,t,e=!1,n=!1){let o=v(r,"images","resizeNearestNeighbor");E(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),E(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),E(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),E(n===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,i=!1;o.rank===3&&(i=!0,s=R(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=t,a={images:s},u={alignCorners:e,halfPixelCenters:n,size:t},l=k.runKernel(vs,a,u);return i?R(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var my=T({resizeNearestNeighbor_:C6});function I6(r,t="binary",e=!1,n=.5){let o=v(r,"image","threshold"),s=.2989,i=.587,a=.114,u=o.shape[0]*o.shape[1],l=D(Ke([n]),255),c,p,m,f;if(E(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),E(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),E(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),E(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),o.shape[2]===3){[c,p,m]=hr(o,[1,1,1],-1);let g=D(c,s),x=D(p,i),b=D(m,a);f=Y(Y(g,x),b)}else f=r;if(t==="otsu"){let g=mx(J(cm(f),"int32"),or([]),256);l=v6(g,u)}let d=e?Mn(f,l):Fe(f,l);return J(D(d,255),"int32")}function v6(r,t){let e=Ke([-1]),n=Ke([0]),o=Ke([0]),s,i,a,u,l,c;for(let p=0;p<r.size-1;p++){s=Rt(r,0,p+1),i=Rt(r,p+1),l=ut(mt(s),t),c=ut(mt(i),t);let m=mt(D(s,Gi(0,s.size)));a=ut(m,mt(s));let f=yo(i.shape,s.size),d=Y(Gi(0,i.size),f),h=D(i,d);u=ut(mt(h),mt(i));let g=lt(a,u),x=lt(a,u),b=D(l,c);o=D(D(b,g),x);let w=Fe(o,n);n=_e(w,o,n),e=_e(w,Ke([p]),e)}return e}var D_=T({threshold_:I6});function S6(r,t,e="nearest",n="constant",o=0,s){let i=v(r,"image","transform","float32"),a=v(t,"transforms","transform","float32");E(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),E(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),E(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:i,transforms:a},l={interpolation:e,fillMode:n,fillValue:o,outputShape:s};return k.runKernel(Ka,u,l)}var R_=T({transform_:S6});function N6(r,t,e){E(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),E(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);let n=v(r,"a","bandPart");E(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,i]=n.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(e<=i))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),e<0&&(e=i);let a=R(Gi(0,s,1,"int32"),[-1,1]),u=Gi(0,i,1,"int32"),l=lt(a,u),c=Fr(Mn(l,pt(+t,"int32")),un(l,pt(-e,"int32"))),p=Te([s,i],n.dtype);return R(qe(gr(R(n,[-1,s,i])).map(m=>_e(c,m,p))),o)}var F_=T({bandPart_:N6});function T6(r){let t;if(Array.isArray(r)){t=!1,E(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)E(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else t=!0,r=hr(r,r.shape[0],0).map(o=>zn(o,[0]));E(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let e=[],n=r;for(let o=0;o<r.length;++o)e.push(k.tidy(()=>{let s=n[o];if(o>0)for(let i=0;i<o;++i){let a=D(mt(D(e[i],s)),e[i]);s=lt(s,a)}return ut(s,Qa(s,"euclidean"))}));return t?qe(e,0):e}var O_=T({gramSchmidt_:T6});function k6(r,t=!1){if(E(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return P_(r,t);{let e=r.shape.slice(0,r.shape.length-2).reduce((u,l)=>u*l),n=gr(R(r,[e,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(u=>{let[l,c]=P_(u,t);o.push(l),s.push(c)});let i=R(qe(o,0),r.shape),a=R(qe(s,0),r.shape);return[i,a]}}function P_(r,t=!1){return k.tidy(()=>{E(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let e=r.shape[0],n=r.shape[1],o=Hu(e),s=an(r),i=Ws([[1]],[1,1]),a=an(i),u=e>=n?n:e;for(let l=0;l<u;++l){let c=s,p=a,m=o;[a,s,o]=k.tidy(()=>{let f=Rt(s,[l,l],[e-l,1]),d=Qa(f),h=Rt(s,[l,l],[1,1]),g=_e(Fe(h,0),Ws([[-1]]),Ws([[1]])),x=lt(h,D(g,d)),b=ut(f,x);b.shape[0]===1?a=an(i):a=oe([i,Rt(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let w=qt(ut(Mt(g,x),d)),C=Rt(s,[l,0],[e-l,n]),N=D(w,a),_=Pt(a);if(l===0)s=lt(C,Mt(N,Mt(_,C)));else{let F=lt(C,Mt(N,Mt(_,C)));s=oe([Rt(s,[0,0],[l,n]),F],0)}let A=Pt(N),$=Rt(o,[0,l],[e,o.shape[1]-l]);if(l===0)o=lt($,Mt(Mt($,a),A));else{let F=lt($,Mt(Mt($,a),A));o=oe([Rt(o,[0,0],[e,l]),F],1)}return[a,s,o]}),Nt([c,p,m])}return!t&&e>n&&(o=Rt(o,[0,0],[e,n]),s=Rt(s,[0,0],[n,n])),[o,s]})}var L_=T({qr_:k6});var Ze;(function(r){r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Ze||(Ze={}));function E6(r,t,e=Ze.SUM_BY_NONZERO_WEIGHTS){let n=v(r,"losses","computeWeightedLoss"),o=null;t!=null&&(o=v(t,"weights","computeWeightedLoss"));let s=o==null?n:D(n,o);if(e===Ze.NONE)return s;if(e===Ze.SUM)return mt(s);if(e===Ze.MEAN){if(o==null)return Ne(s);{let i=n.size/o.size,a=ut(mt(s),mt(o));return i>1?ut(a,pt(i)):a}}if(e===Ze.SUM_BY_NONZERO_WEIGHTS){if(o==null)return ut(mt(s),pt(n.size));{let i=D(o,fr(n.shape)),a=J(mt(Gs(i,pt(0))),"float32");return ut(mt(s),a)}}throw Error(`Unknown reduction: ${e}`)}var Ur=T({computeWeightedLoss_:E6});function _6(r,t,e,n=Ze.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","absoluteDifference"),s=v(t,"predictions","absoluteDifference"),i=null;e!=null&&(i=v(e,"weights","absoluteDifference")),Re(o.shape,s.shape,"Error in absoluteDifference: ");let a=Ee(lt(o,s));return Ur(a,i,n)}var M_=T({absoluteDifference_:_6});function A6(r,t,e,n,o=Ze.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","cosineDistance"),i=v(t,"predictions","cosineDistance"),a=null;n!=null&&(a=v(n,"weights","cosineDistance")),Re(s.shape,i.shape,"Error in cosineDistance: ");let u=pt(1),l=lt(u,mt(D(s,i),e,!0));return Ur(l,a,o)}var z_=T({cosineDistance_:A6});function $6(r,t,e,n=Ze.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","hingeLoss"),s=v(t,"predictions","hingeLoss"),i=null;e!=null&&(i=v(e,"weights","hingeLoss")),Re(o.shape,s.shape,"Error in hingeLoss: ");let a=pt(1);o=lt(D(pt(2),o),a);let u=Or(lt(a,D(o,s)));return Ur(u,i,n)}var B_=T({hingeLoss_:$6});function D6(r,t,e,n=1,o=Ze.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","huberLoss"),i=v(t,"predictions","huberLoss"),a=null;e!=null&&(a=v(e,"weights","huberLoss")),Re(s.shape,i.shape,"Error in huberLoss: ");let u=pt(n),l=Ee(lt(i,s)),c=zi(l,u),p=lt(l,c),m=Y(D(pt(.5),zt(c)),D(u,p));return Ur(m,a,o)}var V_=T({huberLoss_:D6});function R6(r,t,e,n=1e-7,o=Ze.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"labels","logLoss"),i=v(t,"predictions","logLoss"),a=null;e!=null&&(a=v(e,"weights","logLoss")),Re(s.shape,i.shape,"Error in logLoss: ");let u=pt(1),l=pt(n),c=qt(D(s,Nr(Y(i,l)))),p=D(lt(u,s),Nr(Y(lt(u,i),l))),m=lt(c,p);return Ur(m,a,o)}var G_=T({logLoss_:R6});function F6(r,t,e,n=Ze.SUM_BY_NONZERO_WEIGHTS){let o=v(r,"labels","meanSquaredError"),s=v(t,"predictions","meanSquaredError"),i=null;e!=null&&(i=v(e,"weights","meanSquaredError")),Re(o.shape,s.shape,"Error in meanSquaredError: ");let a=bm(o,s);return Ur(a,i,n)}var W_=T({meanSquaredError_:F6});function O6(r,t){let e=v(r,"labels","sigmoidCrossEntropyWithLogits"),n=v(t,"logits","sigmoidCrossEntropyWithLogits");Re(e.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=Or(n),s=D(n,e),i=ru(sr(qt(Ee(n))));return Y(lt(o,s),i)}function P6(r,t,e,n=0,o=Ze.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"multiClassLabels","sigmoidCrossEntropy"),i=v(t,"logits","sigmoidCrossEntropy"),a=null;if(e!=null&&(a=v(e,"weights","sigmoidCrossEntropy")),Re(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),n>0){let l=pt(n),c=pt(1),p=pt(.5);s=Y(D(s,lt(c,l)),D(p,l))}let u=O6(s,i);return Ur(u,a,o)}var U_=T({sigmoidCrossEntropy_:P6});function L6(r,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return cn((o,s,i)=>{let u=am(s,[e],!0),l=lt(J(s,"float32"),u);i([o,l]);let c=qt(D(l,o));return{value:mt(c,[e]),gradFunc:(f,d)=>{let[h,g]=d,x=bo(f.shape,[e]);return[D(R(f,x),lt(J(h,"float32"),sr(g))),D(R(f,x),lt(sr(g),J(h,"float32")))]}}})(r,t)}function M6(r,t,e,n=0,o=Ze.SUM_BY_NONZERO_WEIGHTS){let s=v(r,"onehotLabels","softmaxCrossEntropy"),i=v(t,"logits","softmaxCrossEntropy"),a=null;if(e!=null&&(a=v(e,"weights","softmaxCrossEntropy")),Re(s.shape,i.shape,"Error in softmaxCrossEntropy: "),n>0){let l=pt(n),c=pt(1),p=pt(s.shape[1]);s=Y(D(s,lt(c,l)),ut(l,p))}let u=L6(s,i);return Ur(u,a,o)}var H_=T({softmaxCrossEntropy_:M6});function z6(r,t,e,n){let o=v(r,"indices","sparseFillEmptyRows","int32"),s=v(t,"values","sparseFillEmptyRows"),i=v(e,"denseShape","sparseFillEmptyRows","int32"),a=v(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);let u={indices:o,values:s,denseShape:i,defaultValue:a},l=k.runKernel(Ml,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}var q_=T({sparseFillEmptyRows_:z6});function B6(r,t,e){let n=v(r,"inputIndices","sparseReshape","int32"),o=v(t,"inputShape","sparseReshape","int32"),s=v(e,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:n,inputShape:o,newShape:s},a=k.runKernel(Ua,i);return{outputIndices:a[0],outputShape:a[1]}}var K_=T({sparseReshape_:B6});function V6(r,t,e){let n=v(r,"data","sparseSegmentMean"),o=v(t,"indices","sparseSegmentMean","int32"),s=v(e,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:n,indices:o,segmentIds:s};return k.runKernel(zl,i)}var j_=T({sparseSegmentMean_:V6});function G6(r,t,e){let n=v(r,"data","sparseSegmentSum"),o=v(t,"indices","sparseSegmentSum","int32"),s=v(e,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:n,indices:o,segmentIds:s};return k.runKernel(Bl,i)}var X_=T({sparseSegmentSum_:G6});function W6(r,t,e,n,o,s,i,a){let u=v(r,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let l=v(t,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:e,nGramWidths:n,leftPad:o,rightPad:s,padWidth:i,preserveShortSequences:a},p={data:u,dataSplits:l},m=k.runKernel(Gl,p,c);return{nGrams:m[0],nGramsSplits:m[1]}}var Y_=T({stringNGrams_:W6});function U6(r,t,e=!0){let n=v(r,"input","stringSplit","string"),o=v(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:e},i={input:n,delimiter:o},a=k.runKernel(Wl,i,s);return{indices:a[0],values:a[1],shape:a[2]}}var Z_=T({stringSplit_:U6});function H6(r,t){let e=v(r,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let o={input:e};return k.runKernel(Ul,o,n)}var J_=T({stringToHashBucketFast_:H6});var q6={fft:lu,ifft:el,rfft:uu,irfft:ym},K6={hammingWindow:y_,hannWindow:iy,frame:ay,stft:b_},oo={flipLeftRight:C_,grayscaleToRGB:I_,resizeNearestNeighbor:my,resizeBilinear:py,rotateWithOffset:v_,cropAndResize:w_,nonMaxSuppression:S_,nonMaxSuppressionAsync:k_,nonMaxSuppressionWithScore:E_,nonMaxSuppressionWithScoreAsync:__,nonMaxSuppressionPadded:A_,nonMaxSuppressionPaddedAsync:$_,threshold:D_,transform:R_},iS={bandPart:F_,gramSchmidt:O_,qr:L_},j6={absoluteDifference:M_,computeWeightedLoss:Ur,cosineDistance:z_,hingeLoss:B_,huberLoss:V_,logLoss:G_,meanSquaredError:W_,sigmoidCrossEntropy:U_,softmaxCrossEntropy:H_},X6={sparseFillEmptyRows:q_,sparseReshape:K_,sparseSegmentMean:j_,sparseSegmentSum:X_},Y6={stringNGrams:Y_,stringSplit:Z_,stringToHashBucketFast:J_};var Q={};Ut(Q,{Serializable:()=>dh,SerializationMap:()=>Wi,registerClass:()=>aS});var dh=class{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}},Wi=class{constructor(){this.classNameMap={}}static getMap(){return Wi.instance==null&&(Wi.instance=new Wi),Wi.instance}static register(t){Wi.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function aS(r){E(r.className!=null,()=>"Class being registered does not have the static className property defined."),E(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),E(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Wi.register(r)}var Hr=class extends dh{minimize(t,e=!1,n){let{value:o,grads:s}=this.computeGradients(t,n);if(n!=null){let i=n.map(a=>({name:a.name,tensor:s[a.name]}));this.applyGradients(i)}else this.applyGradients(s);return Nt(s),e?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Dx(t,e)}dispose(){this.iterations_!=null&&Nt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:pt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}};Object.defineProperty(Hr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var ec=class extends Hr{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=k.backend.epsilon())}static get className(){return"Adadelta"}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,o)=>{let s=k.registeredVariables[n],i=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:B(()=>It(s).variable(i))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:B(()=>It(s).variable(i))});let a=Array.isArray(t)?t[o].tensor:t[n];if(a==null)return;let u=this.accumulatedGrads[o].variable,l=this.accumulatedUpdates[o].variable;B(()=>{let c=Y(D(u,this.rho),D(zt(a),1-this.rho)),p=D(ut(Se(Y(l,this.epsilon)),Se(Y(u,this.epsilon))),a),m=Y(D(l,this.rho),D(zt(p),1-this.rho));u.assign(c),l.assign(m);let f=Y(D(p,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Nt(this.accumulatedGrads.map(t=>t.variable)),Nt(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){let t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);let e=t.length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}};var rc=class extends Hr{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}static get className(){return"Adagrad"}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,o)=>{let s=k.registeredVariables[n];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:B(()=>yo(s.shape,this.initialAccumulatorValue).variable(!1))});let i=Array.isArray(t)?t[o].tensor:t[n];if(i==null)return;let a=this.accumulatedGrads[o].variable;B(()=>{let u=Y(a,zt(i));a.assign(u);let l=Y(D(ut(i,Se(Y(u,k.backend.epsilon()))),-this.learningRate),s);s.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Nt(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);let e=!1;this.accumulatedGrads=t.map(n=>({originalName:n.name,variable:n.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}};var nc=class extends Hr{constructor(t,e,n,o=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],B(()=>{this.accBeta1=pt(e).variable(),this.accBeta2=pt(n).variable()}),o==null&&(this.epsilon=k.backend.epsilon())}static get className(){return"Adam"}applyGradients(t){let e=Array.isArray(t)?t.map(n=>n.name):Object.keys(t);B(()=>{let n=lt(1,this.accBeta1),o=lt(1,this.accBeta2);e.forEach((s,i)=>{let a=k.registeredVariables[s],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:B(()=>It(a).variable(u))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${s}/v`,variable:B(()=>It(a).variable(u))});let l=Array.isArray(t)?t[i].tensor:t[s];if(l==null)return;let c=this.accumulatedFirstMoment[i].variable,p=this.accumulatedSecondMoment[i].variable,m=Y(D(c,this.beta1),D(l,1-this.beta1)),f=Y(D(p,this.beta2),D(zt(l),1-this.beta2)),d=ut(m,n),h=ut(f,o);c.assign(m),p.assign(f);let g=Y(D(ut(d,Y(Se(h),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(D(this.accBeta1,this.beta1)),this.accBeta2.assign(D(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Nt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&Nt(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){let t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),B(()=>{this.accBeta1.assign(ln(this.beta1,this.iterations_+1)),this.accBeta2.assign(ln(this.beta2,this.iterations_+1))});let e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}};var oc=class extends Hr{constructor(t,e,n,o=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=o,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],B(()=>{this.iteration=pt(0).variable(),this.accBeta1=pt(e).variable()}),o==null&&(this.epsilon=k.backend.epsilon())}static get className(){return"Adamax"}applyGradients(t){let e=Array.isArray(t)?t.map(n=>n.name):Object.keys(t);B(()=>{let n=lt(1,this.accBeta1),o=ut(-this.learningRate,Y(D(this.iteration,this.decay),1));e.forEach((s,i)=>{let a=k.registeredVariables[s],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:It(a).variable(u)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${s}/v`,variable:It(a).variable(u)});let l=Array.isArray(t)?t[i].tensor:t[s];if(l==null)return;let c=this.accumulatedFirstMoment[i].variable,p=this.accumulatedWeightedInfNorm[i].variable,m=Y(D(c,this.beta1),D(l,1-this.beta1)),f=D(p,this.beta2),d=Ee(l),h=Sn(f,d);c.assign(m),p.assign(h);let g=Y(D(ut(o,n),ut(m,Y(h,this.epsilon))),a);a.assign(g)}),this.iteration.assign(Y(this.iteration,1)),this.accBeta1.assign(D(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Nt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&Nt(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}};var rl=class extends Hr{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}static get className(){return"SGD"}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,o)=>{let s=Array.isArray(t)?t[o].tensor:t[n];if(s==null)return;let i=k.registeredVariables[n];B(()=>{let a=Y(D(this.c,s),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=De(pt(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}};var sc=class extends rl{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=pt(this.momentum)}static get className(){return"Momentum"}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,o)=>{let s=k.registeredVariables[n];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${n}/momentum`,variable:B(()=>It(s).variable(!1))});let i=this.accumulations[o].variable,a=Array.isArray(t)?t[o].tensor:t[n];a!=null&&B(()=>{let u,l=Y(D(this.m,i),a);this.useNesterov?u=Y(D(this.c,Y(a,D(l,this.m))),s):u=Y(D(this.c,l),s),i.assign(l),s.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Nt(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);let e=!1;this.accumulations=t.map(n=>({originalName:n.name,variable:n.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}};var ic=class extends Hr{constructor(t,e=.9,n=0,o=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,o==null&&(this.epsilon=k.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,o)=>{let s=k.registeredVariables[n],i=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:B(()=>It(s).variable(i))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:B(()=>It(s).variable(i))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:B(()=>It(s).variable(i))});let a=Array.isArray(t)?t[o].tensor:t[n];if(a==null)return;let u=this.accumulatedMeanSquares[o].variable,l=this.accumulatedMoments[o].variable;B(()=>{let c=Y(D(u,this.decay),D(zt(a),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[o].variable,m=Y(D(p,this.decay),D(a,1-this.decay)),f=ut(D(a,this.learningRate),Se(lt(c,Y(zt(m),this.epsilon)))),d=Y(D(l,this.momentum),f);u.assign(c),p.assign(m),l.assign(d);let h=lt(s,d);s.assign(h)}else{let p=Y(D(u,this.decay),D(zt(a),1-this.decay)),m=Y(D(l,this.momentum),ut(D(a,this.learningRate),Se(Y(p,this.epsilon))));u.assign(p),l.assign(m);let f=lt(s,m);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Nt(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Nt(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&Nt(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){let t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);let e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}};var Z6=[ec,rc,nc,oc,sc,ic,rl];function Q_(){for(let r of Z6)aS(r)}var Pr={};Ut(Pr,{browserFiles:()=>eA,browserHTTPRequest:()=>oA,concatenateArrayBuffers:()=>qp,copyModel:()=>oE,decodeWeights:()=>Kg,encodeWeights:()=>G1,fromMemory:()=>sA,fromMemorySync:()=>fS,getLoadHandlers:()=>j1,getModelArtifactsForJSON:()=>Kp,getModelArtifactsForJSONSync:()=>R0,getModelArtifactsInfoForJSON:()=>ki,getSaveHandlers:()=>K1,getWeightSpecs:()=>Xg,http:()=>dy,isHTTPScheme:()=>fy,listModels:()=>rE,loadWeights:()=>rA,moveModel:()=>sE,registerLoadRouter:()=>q1,registerSaveRouter:()=>H1,removeModel:()=>nE,weightsLoaderFactory:()=>pS,withSaveHandler:()=>iA,withSaveHandlerSync:()=>aA});var J6="model",Q6=".json",tX=".weights.bin";function tA(r){return new Promise(t=>setTimeout(t)).then(r)}var nl=class{constructor(t){if(!M().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(nl.URL_SCHEME)&&(t=t.slice(nl.URL_SCHEME.length)),(t==null||t.length===0)&&(t=J6),this.modelJsonFileName=t+Q6,this.weightDataFileName=t+tX}async save(t){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],o=jg(t,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=s,await tA(()=>i.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=e,await tA(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ki(t)}}}};nl.URL_SCHEME="downloads://";var lS=class{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),i=s.modelTopology;if(i==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:i});return}let u=Kp(s,l=>this.loadWeights(l));t(u)},n.onerror=o=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(t){let e=[],n=[];for(let i of t)e.push(...i.weights),n.push(...i.paths);let o=this.checkManifestAndWeightFiles(t),s=n.map(i=>this.loadWeightsFile(i,o[i]));return Promise.all(s).then(i=>[e,qp(i)])}loadWeightsFile(t,e){return new Promise((n,o)=>{let s=new FileReader;s.onload=i=>{let a=i.target.result;n(a)},s.onerror=i=>o(`Failed to weights data from file of path '${t}'.`),s.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){let e=[],n=this.weightsFiles.map(s=>D0(s.name)),o={};for(let s of t)s.paths.forEach(i=>{let a=D0(i);if(e.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(e.push(a),n.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);o[i]=this.weightsFiles[n.indexOf(a)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},eX=r=>M().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(nl.URL_SCHEME)?rX(r.slice(nl.URL_SCHEME.length)):null;Ie.registerSaveRouter(eX);function rX(r="model"){return new nl(r)}function eA(r){return new lS(r)}function uS(r,t,e,n){i(r),e=e==null?0:e,n=n==null?1:n,a(e,n);let o=0,s=u=>(u.then(l=>{let c=e+ ++o/r.length*(n-e);return t(c),l}),u);function i(u){E(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function a(u,l){E(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),E(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),E(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(r.map(s))}async function cS(r,t){t==null&&(t={});let e=t.fetchFunc==null?M().platform.fetch:t.fetchFunc,n=r.map(p=>e(p,t.requestInit,{isBinary:!0})),o=0,s=.5,a=(t.onProgress==null?await Promise.all(n):await uS(n,t.onProgress,o,s)).map(p=>p.arrayBuffer()),u=.5,l=1;return t.onProgress==null?await Promise.all(a):await uS(a,t.onProgress,u,l)}async function rA(r,t="",e,n){return pS(i=>cS(i,{requestInit:n}))(r,t,e)}function pS(r){return async(t,e="",n)=>{let o=t.map(()=>!1),s={},i=n!=null?n.map(()=>!1):[],a=[];if(t.forEach((f,d)=>{let h=0;f.weights.forEach(g=>{let x="quantization"in g?g.quantization.dtype:g.dtype,b=nh[x]*Jt(g.shape),w=()=>{o[d]=!0,s[d]==null&&(s[d]=[]),s[d].push({manifestEntry:g,groupOffset:h,sizeBytes:b})};n!=null?n.forEach((C,N)=>{C===g.name&&(w(),i[N]=!0)}):w(),a.push(g.name),h+=b})}),!i.every(f=>f)){let f=n.filter((d,h)=>!i[h]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let u=o.reduce((f,d,h)=>(d&&f.push(h),f),[]),l=[];u.forEach(f=>{t[f].paths.forEach(d=>{let h=e+(e.endsWith("/")?"":"/")+d;l.push(h)})});let c=await r(l),p={},m=0;return u.forEach(f=>{let d=t[f].paths.length,h=0;for(let C=0;C<d;C++)h+=c[m+C].byteLength;let g=new ArrayBuffer(h),x=new Uint8Array(g),b=0;for(let C=0;C<d;C++){let N=new Uint8Array(c[m+C]);x.set(N,b),b+=N.byteLength}s[f].forEach(C=>{let N=g.slice(C.groupOffset,C.groupOffset+C.sizeBytes),_=Kg(N,[C.manifestEntry]);for(let A in _)p[A]=_[A]}),m+=d}),p}}var nX="application/octet-stream",oX="application/json",hh=class{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(E(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=M().platform.fetch,E(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&E(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],o=jg(t,n);e.body.append("model.json",new Blob([JSON.stringify(o)],{type:oX}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:nX}),"model.weights.bin");let s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:ki(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(s){let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}let n=e.modelTopology,o=e.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Kp(e,s=>this.loadWeights(s))}async loadWeights(t){let e=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=sX(e),s=this.weightPathPrefix||n,i=Xg(t),a=[],u=[];for(let c of t)for(let p of c.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(p)):a.push(s+p+o);this.weightUrlConverter&&a.push(...await Promise.all(u));let l=await cS(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,qp(l)]}};hh.URL_SCHEME_REGEX=/^https?:\/\//;function sX(r){let t=r.lastIndexOf("/"),e=r.lastIndexOf("?"),n=r.substring(0,t),o=e>t?r.substring(e):"";return[n+"/",o]}function fy(r){return r.match(hh.URL_SCHEME_REGEX)!=null}var nA=(r,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(r)?e=r.every(n=>fy(n)):e=fy(r),e)return dy(r,t)}return null};Ie.registerSaveRouter(nA);Ie.registerLoadRouter(nA);function dy(r,t){return new hh(r,t)}function oA(r,t){return dy(r,t)}var gh=class{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}},hy=class{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}},mS=class{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}};function sA(r,t,e,n){let o=arguments;return new mS(fS(...o))}function fS(r,t,e,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new gh(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new gh({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new gh({modelTopology:r,weightSpecs:t,weightData:e,trainingConfig:n}))}function iA(r){return new hy(r)}function aA(r){return new hy(r)}var uA={};Ut(uA,{confusionMatrix:()=>lA});function iX(r,t,e){let n=v(r,"labels","confusionMatrix"),o=v(t,"predictions","confusionMatrix");E(e==null||e>0&&Number.isInteger(e),()=>`If provided, numClasses must be a positive integer, but got ${e}`),E(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),E(o.rank===1,()=>`Expected the rank of predictions to be 1, but got ${o.rank}`),E(n.shape[0]===o.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${o.shape[0]}. Labels and predictions should have the same number of elements.`),E(e>0&&Number.isInteger(e),()=>`numClasses is required to be a positive integer, but got ${e}`);let s=Bi(J(n,"int32"),e),i=Bi(J(o,"int32"),e),a=Pt(s),u=Mt(a,i);return J(u,"int32")}var lA=T({confusionMatrix_:iX});var gy={};Ut(gy,{fromPixels:()=>fX,fromPixelsAsync:()=>pX,toPixels:()=>mX});var ac;function cA(r,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,n=!1,o=!1,s=!1,i=!1,a=!1;if(r.data instanceof Uint8Array)e=!0;else if(typeof ImageData!="undefined"&&r instanceof ImageData)n=!0;else if(typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(Zd(Xd,k.backendName)!=null){let d={pixels:r},h={numChannels:t};return k.runKernel(Xd,d,h)}let[l,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],p;if(i)p=r.getContext("2d").getImageData(0,0,l,c).data;else if(n||e)p=r.data;else if(s||o||a){if(ac==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")ac=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else ac=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ac.canvas.width=l,ac.canvas.height=c,ac.drawImage(r,0,0,l,c),p=ac.getImageData(0,0,l,c).data}let m;if(t===4)m=new Int32Array(p);else{let d=l*c;m=new Int32Array(d*t);for(let h=0;h<d;h++)for(let g=0;g<t;++g)m[h*t+g]=p[h*4+g]}return Zx(m,[c,l,t],"int32")}function aX(r){return r!=null&&r.data instanceof Uint8Array}function lX(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function uX(r){return r!=null&&r.width!==0&&r.height!==0}function cX(r){return lX()&&!(r instanceof ImageBitmap)&&uX(r)&&!aX(r)}async function pX(r,t=3){let e=null;if(M().getBool("WRAP_TO_IMAGEBITMAP")&&cX(r)){let n;try{n=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch(o){n=null}n!=null&&n.width===r.width&&n.height===r.height?e=n:e=r}else e=r;return cA(e,t)}async function mX(r,t){let e=v(r,"img","toPixels");if(!(r instanceof Ft)){let l=e;e=J(l,"int32"),l.dispose()}if(e.rank!==2&&e.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let[n,o]=e.shape.slice(0,2),s=e.rank===2?1:e.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(e.dtype!=="float32"&&e.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`);let i=await e.data(),a=e.dtype==="float32"?255:1,u=new Uint8ClampedArray(o*n*4);for(let l=0;l<n*o;++l){let c=[0,0,0,255];for(let m=0;m<s;m++){let f=i[l*s+m];if(e.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(e.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);s===1?(c[0]=f*a,c[1]=f*a,c[2]=f*a):c[m]=f*a}let p=l*4;u[p+0]=Math.round(c[0]),u[p+1]=Math.round(c[1]),u[p+2]=Math.round(c[2]),u[p+3]=Math.round(c[3])}if(t!=null){t.width=o,t.height=n;let l=t.getContext("2d"),c=new ImageData(u,o,n);l.putImageData(c,0,0)}return e!==r&&e.dispose(),u}var fX=T({fromPixels_:cA});var xy={};Ut(xy,{prepareAndValidate:()=>pA});function pA(r,t){let e=r.shape.length,n=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${e}`);if(Jt(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=t.shape,s=o[o.length-1],i=1;for(let p=0;p<o.length-1;++p)i*=o[p];let a=r.shape,u=o.slice();u.pop();let l=1;for(let p=s;p<e;++p)l*=a[p],u.push(a[p]);let c=[...ai(r.shape).map(p=>p/l),1].slice(0,s);return[u,i,l,c]}var ze={};Ut(ze,{assertParamsValid:()=>hX,computeFlatOffset:()=>wX,computeOutShape:()=>xX,getNormalizedAxes:()=>yX,isSliceContinous:()=>bX,maskToAxes:()=>gX,parseSliceParams:()=>hS,sliceInfo:()=>CX,startForAxis:()=>bA,startIndicesWithElidedDims:()=>gA,stopForAxis:()=>wA,stopIndicesWithElidedDims:()=>xA,stridesForAxis:()=>yA,stridesWithElidedDims:()=>fA});var dS=-2,dX=-1;function hX(r,t,e){let n=r.shape.length;E(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),E(n===e.length,()=>`Error in slice${n}D: Length of size ${e} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)E(t[o]+e[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${t[o]+e[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function gX(r){let t=[],e=0;for(;r>0;)r&1&&t.push(e),r/=2,e++;return t}function xX(r,t,e){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((t[o]-r[o])/e[o]);return n}function fA(r,t,e,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<e;s++)s===0?o[t]=1:(o.splice(t,0,1),o.pop());return o}function dA(r,t,e){return e<=r?e:e-(t-1)}function hA(r,t){let e=[];for(let n=0;n<r;n++)e.push(t+n);return e}function yX(r,t,e,n,o,s,i,a,u){let l=r.length,c=new Array(l),p=new Array(l),m=new Array(l);if(t.length&&e>0){let f=t[0],d=e+1;c=gA(i,f,d,n,r),p=xA(a,f,d,o,r),m=fA(s,f,d,r)}else for(let f=0;f<l;f++)c[f]=bA(i,n,s,r,f,u),p[f]=wA(a,o,s,r,f,u),m[f]=yA(s,f,u);return{begin:c,end:p,strides:m}}function gA(r,t,e,n,o){let s=[...o],i=hA(e,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let u=dA(t,e,a),l=n[u];r&1<<u&&(l=0),s[a]=l}return s}function xA(r,t,e,n,o){let s=[...o],i=hA(e,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let u=dA(t,e,a),l=n[u];r&1<<u&&(l=Number.MAX_SAFE_INTEGER),s[a]=l}for(let a=0;a<s.length;a++){let u=o[a];s[a]<0&&(s[a]+=u),s[a]=np(0,s[a],o[a])}return s}function yA(r,t,e){let n=r[t];return(e&1<<t||n==null)&&(n=1),n}function bA(r,t,e,n,o,s){let i=t[o],a=e[o]||1;(r&1<<o||s&1<<o||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let u=n[o];return i<0&&(i+=u),i=np(0,i,u-1),i}function wA(r,t,e,n,o,s){let i=t[o],a=e[o]||1;(r&1<<o||s&1<<o||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let u=n[o];return i<0&&(i+=u),a>0?i=np(0,i,u):i=np(-1,i,u-1),i}function bX(r,t,e){let n=e.length;for(let o=0;o<e.length;o++)if(e[o]>1){n=o;break}for(let o=n+1;o<e.length;o++)if(t[o]>0||e[o]!==r[o])return!1;return!0}function wX(r,t){let e=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)e+=r[n]*t[n];return e}function hS(r,t,e){let n,o=r.shape.length;typeof t=="number"?n=[t,...new Array(o-1).fill(0)]:t.length<o?n=t.concat(new Array(o-t.length).fill(0)):n=t.slice(),n.forEach(i=>{E(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return e==null?s=new Array(o).fill(-1):typeof e=="number"?s=[e,...new Array(o-1).fill(-1)]:e.length<o?s=e.concat(new Array(o-e.length).fill(-1)):s=e,s=s.map((i,a)=>i>=0?i:(E(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),r.shape[a]-n[a])),[n,s]}function CX(r,t,e,n,o,s,i,a,u){let l;if(n==null?(l=new Array(t.length),l.fill(1)):l=n,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,p={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:l.slice(),beginMask:o,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};for(let w=0;w<p.dims;w++)c&&1<<w&a&&p.numAddAxisAfterEllipsis++,1<<w&i&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);let m={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};IX(p,m);let f=!0,d=!0,h=!0,g=[],x=[];for(let w=0;w<r.length;++w){if(m.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);let C=!!(m.shrinkAxisMask&1<<w),N=r[w];if(N===-1){g.push(C?1:-1);continue}let _=[m.beginMask&1<<w,m.endMask&1<<w],A=[m.strides[w]>0?0:-1,m.strides[w]>0?N:N-1];if(C&&m.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");h=h&&m.strides[w]===1;let $=!!(m.beginMask&1<<w&&m.endMask&1<<w);if(m.beginValid&&m.endValid){if(C){let G=m.begin[w]<0?N+m.begin[w]:m.begin[w];if(m.begin[w]=G,m.end[w]=m.begin[w]+1,G<0||G>=N)throw Error(`slice index ${m.begin[w]} of dimension ${w} out of bounds.`)}else m.begin[w]=mA(m.begin[w],0,m.strides[w],N,_,A),m.end[w]=mA(m.end[w],1,m.strides[w],N,_,A);let V=m.strides[w]===1&&m.begin[w]===0&&m.end[w]===N;f=f&&V,d=d&&(w===0&&m.strides[w]===1||V)}else f=f&&m.strides[w]===1&&$,d=d&&(w===0&&m.strides[w]===1||$);let F,P=!1;if(m.beginValid&&m.endValid?(F=m.end[w]-m.begin[w],P=!0):C?(F=1,P=!0):$&&N>=0&&(m.strides[w]<0?F=-N:F=N,P=!0),P){let V;F===0||F<0!=m.strides[w]<0?V=0:V=Math.trunc(F/m.strides[w])+(F%m.strides[w]!==0?1:0),g.push(V)}else g.push(-1)}for(let w=0;w<m.finalShapeGatherIndices.length;++w){let C=m.finalShapeGatherIndices[w];C>=0?x.push(g[C]):C===dS&&x.push(1)}return{finalShapeSparse:x.filter((w,C)=>m.finalShapeGatherIndices[C]!==dS),finalShape:x,isIdentity:f,sliceDim0:d,isSimpleSlice:h,begin:m.begin,end:m.end,strides:m.strides}}function IX(r,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=r.begin!=null,t.endValid=r.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(t.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,t.dims);for(;e<o;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=n}else if(1<<n&r.newAxisMask)t.finalShapeGatherIndices.push(dS),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);r.begin!=null&&(t.begin[e]=r.begin[n]),r.end!=null&&(t.end[e]=r.end[n]),t.strides[e]=r.strides[n],r.beginMask&1<<n&&(t.beginMask|=1<<e),r.endMask&1<<n&&(t.endMask|=1<<e),r.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(dX),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[e]=n,e++}}function mA(r,t,e,n,o,s){if(o[t])return e>0?s[t]:s[t+1&1];{let i=r<0?n+r:r;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var CA="4.2.0";var xh=class{static sgd(t){return new rl(t)}static momentum(t,e,n=!1){return new sc(t,e,n)}static rmsprop(t,e=.9,n=0,o=null,s=!1){return new ic(t,e,n,o,s)}static adam(t=.001,e=.9,n=.999,o=null){return new nc(t,e,n,o)}static adadelta(t=.001,e=.95,n=null){return new ec(t,e,n)}static adamax(t=.002,e=.9,n=.999,o=null,s=0){return new oc(t,e,n,o,s)}static adagrad(t,e=.1){return new rc(t,e)}};var lc=xh;var vX=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:r=>r())();function yh(){return new Promise(r=>vX(()=>r()))}var S={};Ut(S,{ERF_A1:()=>MX,ERF_A2:()=>zX,ERF_A3:()=>BX,ERF_A4:()=>VX,ERF_A5:()=>GX,ERF_P:()=>LX,PARALLELIZE_THRESHOLD:()=>yy,RowPartitionType:()=>Ui,SELU_SCALE:()=>xS,SELU_SCALEALPHA:()=>gS,applyActivation:()=>Qu,assertAndGetBroadcastShape:()=>Ot,assertAxesAreInnerMostDims:()=>pq,assertParamsConsistent:()=>SX,assignToTypedArray:()=>jX,axesAreInnerMostDims:()=>U0,calculateShapes:()=>m_,checkEinsumDimSizes:()=>t5,checkPadOnDimRoundingMode:()=>ve,combineLocations:()=>yE,combineRaggedTensorToTensorShapes:()=>TX,complexWithEvenIndex:()=>HX,complexWithOddIndex:()=>qX,computeConv2DInfo:()=>Wu,computeConv3DInfo:()=>cE,computeDefaultPad:()=>W0,computeDilation2DInfo:()=>mH,computeOptimalWindowSize:()=>AX,computeOutAndReduceShapes:()=>H0,computeOutShape:()=>NX,computePool2DInfo:()=>G0,computePool3DInfo:()=>fH,convertConv2DDataFormat:()=>pE,decodeEinsumEquation:()=>JX,eitherStridesOrDilationsAreOne:()=>$r,expandShapeToKeepDim:()=>bo,exponent:()=>YX,exponents:()=>XX,fromStringArrayToUint8:()=>C5,fromUint8ToStringArray:()=>w5,getAxesPermutation:()=>q0,getBroadcastDims:()=>gE,getComplexWithIndex:()=>KX,getEinsumComputePath:()=>e5,getEinsumPermutation:()=>QX,getFusedBiasGradient:()=>Ju,getFusedDyActivation:()=>Zu,getImageCenter:()=>$X,getInnerMostAxes:()=>mq,getPermuted:()=>RX,getRaggedRank:()=>EX,getReductionAxes:()=>xe,getReshaped:()=>DX,getReshapedPermuted:()=>FX,getRowPartitionTypesHelper:()=>kX,getSliceBeginCoords:()=>OX,getSliceSize:()=>PX,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>s5,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>i5,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>a5,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>c5,getSparseReshapeInputOutputMismatchErrorMessage:()=>m5,getSparseReshapeInputOutputMultipleErrorMessage:()=>p5,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>l5,getSparseReshapeNegativeOutputDimErrorMessage:()=>u5,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>g5,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>f5,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>d5,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>h5,getUndoAxesPermutation:()=>lh,isIdentityPermutation:()=>r5,log:()=>l4,mergeRealAndImagArrays:()=>WX,prepareAndValidate:()=>pA,prepareSplitSize:()=>o5,segment_util:()=>bS,shouldFuse:()=>tc,slice_util:()=>ze,splitRealAndImagArrays:()=>UX,stridesOrDilationsArePositive:()=>$i,tupleValuesAreOne:()=>ro,upcastType:()=>lr,validateDefaultValueShape:()=>_X,validateInput:()=>ny,validateUpdateShape:()=>rS,warn:()=>Ti});function SX(r,t){let e=r[0].length;r.forEach((o,s)=>{E(o.length===e,()=>`Error in concat${e}D: rank of tensors[${s}] must be the same as the rank of the rest (${e})`)}),E(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let n=r[0];r.forEach((o,s)=>{for(let i=0;i<e;i++)E(i===t||o[i]===n[i],()=>`Error in concat${e}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function NX(r,t){let e=r[0].slice();for(let n=1;n<r.length;n++)e[t]+=r[n][t];return e}var Ui;(function(r){r[r.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",r[r.VALUE_ROWIDS=1]="VALUE_ROWIDS",r[r.ROW_LENGTHS=2]="ROW_LENGTHS",r[r.ROW_SPLITS=3]="ROW_SPLITS",r[r.ROW_LIMITS=4]="ROW_LIMITS",r[r.ROW_STARTS=5]="ROW_STARTS"})(Ui||(Ui={}));function TX(r,t,e){let n=new Array;if(e==null&&t==null)return n;if(t==null)for(;n.length<r+e.length;)n.push(-1);else n=t.slice();if(e==null)return n;if(r+e.length!==n.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${r+e.length}, but shape.rank = ${n.length}`);for(let o=1;o<e.length;++o){let s=e[o],i=n[n.length-e.length+o],a=n[i];if(s>=0)if(a>=0){if(a!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${o+r}] = ${s} but shape[${o+r}] = ${a}`)}else n[i]=s}return n}function kX(r){let t={FIRST_DIM_SIZE:Ui.FIRST_DIM_SIZE,VALUE_ROWIDS:Ui.VALUE_ROWIDS,ROW_LENGTHS:Ui.ROW_LENGTHS,ROW_SPLITS:Ui.ROW_SPLITS,ROW_LIMITS:Ui.ROW_LIMITS,ROW_STARTS:Ui.ROW_STARTS},e=[];for(let n of r)if(n in t)e.push(t[n]);else break;return e}function EX(r){return r.length===0?0:r[0]===Ui.FIRST_DIM_SIZE?r.length-1:r.length}function _X(r,t){if(r==null||t==null)return;let e=r.length,n=t.length;if(e>=n)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${n})`);for(let o=0;o<Math.min(e,n-1);++o){let s=r[o],i=t[o+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${o-r.length}] = ${s} but ragged tensor input.flatValues.shape[${o-r.length}] = ${i}`)}}var yy=30;function AX(r){return r<=yy?r:ip(r,Math.floor(Math.sqrt(r)))}function $X(r,t,e){let n=e*(typeof r=="number"?r:r[0]),o=t*(typeof r=="number"?r:r[1]);return[n,o]}function DX(r,t,e,n=!0){let o=[];if(n)o=o.concat(t.slice(0)),o.push(r[0]/e),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=t.length;for(let i=0;i<s;++i)o=o.concat([r[i+1]/t[i],t[i]]);o=o.concat(r.slice(s+1))}return o}function RX(r,t,e=!0){let n=[];if(e){n.push(t);for(let o=t+1;o<r;++o)o<=2*t?(n.push(o),n.push(o-(t+1))):n.push(o)}else{let o=[],s=[];for(let i=1;i<r;++i)i>=t*2+1||i%2===1?s.push(i):o.push(i);n.push(...o),n.push(0),n.push(...s)}return n}function FX(r,t,e,n=!0){let o=[];n?o.push(r[0]/e):o.push(r[0]*e);for(let s=1;s<r.length;++s)s<=t.length?n?o.push(t[s-1]*r[s]):o.push(r[s]/t[s-1]):o.push(r[s]);return o}function OX(r,t){let e=[0];for(let n=0;n<t;++n)e.push(r[n][0]);return e}function PX(r,t,e){let n=r.slice(0,1);for(let o=0;o<e;++o)n.push(r[o+1]-t[o][0]-t[o][1]);return n}var gS=1.7580993408473768,xS=1.0507009873554805;var LX=.3275911,MX=.254829592,zX=-.284496736,BX=1.421413741,VX=-1.453152027,GX=1.061405429;function WX(r,t){if(r.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${t.length}.`);let e=new Float32Array(r.length*2);for(let n=0;n<e.length;n+=2)e[n]=r[n/2],e[n+1]=t[n/2];return e}function UX(r){let t=new Float32Array(r.length/2),e=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)t[n/2]=r[n],e[n/2]=r[n+1];return{real:t,imag:e}}function HX(r){let t=Math.ceil(r.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let o=0;o<r.length;o+=4)e[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:e,imag:n}}function qX(r){let t=Math.floor(r.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let o=2;o<r.length;o+=4)e[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:e,imag:n}}function KX(r,t){let e=r[t*2],n=r[t*2+1];return{real:e,imag:n}}function jX(r,t,e,n){r[n*2]=t,r[n*2+1]=e}function XX(r,t){let e=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(t?2:-2)*Math.PI*(o/r);e[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:e,imag:n}}function YX(r,t,e){let n=(e?2:-2)*Math.PI*(r/t),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var yS="->",ZX=/->/g,IA=",",vA="...";function JX(r,t){r=r.replace(/\s/g,"");let e=(r.length-r.replace(ZX,"").length)/yS.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${yS}").`);let[n,o]=r.split(yS);E(n.indexOf(vA)===-1,()=>`The ellipsis notation ("${vA}") is not supported yet.`);let s=n.split(IA),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let a=[];for(let m=0;m<o.length;++m){let f=o[m];if(!s.some(d=>d.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let m=0;m<n.length;++m){let f=n[m];a.indexOf(f)===-1&&f!==IA&&a.push(f)}let u=new Array(s.length);for(let m=0;m<i;++m){if(new Set(s[m].split("")).size!==s[m].length)throw new Error(`Found duplicate axes in input component ${s[m]}. Support for duplicate axes in input is not implemented yet.`);u[m]=[];for(let f=0;f<s[m].length;++f)u[m].push(a.indexOf(s[m][f]))}let l=a.length,c=o.length,p=[];for(let m=c;m<l;++m)p.push(m);return{allDims:a,summedDims:p,idDims:u}}function QX(r,t){let e=new Array(r);e.fill(-1);for(let o=0;o<t.length;++o)e[t[o]]=o;let n=[];for(let o=0;o<r;++o)e[o]===-1&&n.push(o);return e=e.filter(o=>o!==-1),{permutationIndices:e,expandDims:n}}function t5(r,t,e){let n=new Array(r);for(let o=0;o<e.length;++o){let s=e[o].shape;for(let i=0;i<t[o].length;++i)n[t[o][i]]===void 0?n[t[o][i]]=s[i]:E(n[t[o][i]]===s[i],()=>`Expected dimension ${n[t[o][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function e5(r,t){let e=r,n=[],o=0;r.length===0&&e.push(-1),o=r.length+1;for(let i=0;i<o;++i)n.push([]);let s=[];for(let i=0;i<e.length;++i){let a=e[i],u=n5(t,a);for(let l of u)s.indexOf(l)===-1&&(n[i].push(l),s.push(l))}return{path:e,steps:n}}function r5(r){return r.every((t,e)=>t===e)}function n5(r,t){let e=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(t)!==-1||t===-1)&&e.push(n);return e}function o5(r,t,e=0){let n=[];if(typeof t=="number")E(r.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(r.shape[e]/t);else{let o=t.reduce((i,a)=>(a===-1&&(i+=1),i),0);E(o<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((a,u)=>u>0?a+u:a);t[s]=r.shape[e]-i}E(r.shape[e]===t.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}function s5(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function i5(r,t){return`indices(${r}, 0) is invalid: ${t} < 0`}function a5(r,t,e){return`indices(${r}, 0) is invalid: ${t} >= ${e}`}function l5(r,t){return`only one output dimension may be -1, not both ${r} and ${t}`}function u5(r,t){return`size ${r} must be non-negative, not ${t}`}function c5(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function p5(r,t){let e=Jt(r),n=Jt(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${r} outputShape= ${t}`}function m5(r,t){let e=Jt(r),n=Jt(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${n}. inputShape=${r} outputShape=${t}`}function f5(){return"segment ids must be >= 0"}function d5(){return"segment ids are not increasing"}function h5(r,t){return`Segment id ${r} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function g5(r,t,e){return`Bad: indices[${r}] == ${t} out of range [0, ${e})`}var bS={};Ut(bS,{collectGatherOpShapeInfo:()=>b5,computeOutShape:()=>y5,segOpComputeOptimalWindowSize:()=>x5});function x5(r,t){let e=!1,n;for(r<=yy?(n=r,e=!0):n=ip(r,Math.floor(Math.sqrt(r)));!e;)n>t||n===r?e=!0:n=ip(r,n+1);return n}function y5(r,t,e){let n=[],o=r.length;for(let s=0;s<o;s++)s!==t?n.push(r[s]):n.push(e);return n}function b5(r,t,e,n){let o=t.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(e<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${e}).`);for(let p=0;p<n;++p)if(r.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let i=r.shape[e],a=[],u=1,l=1,c=1;for(let p=0;p<n;++p)a.push(r.shape[p]),u*=r.shape[p];for(let p=n;p<e;p++)a.push(r.shape[p]),l*=r.shape[p];for(let p=n;p<o;p++)a.push(t.shape[p]);for(let p=e+1;p<s;p++)a.push(r.shape[p]),c*=r.shape[p];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:a}}function w5(r){try{return r.map(t=>Up(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function C5(r){return r.map(t=>Kl(t))}var qr={};Ut(qr,{nonMaxSuppressionV3Impl:()=>ly,nonMaxSuppressionV4Impl:()=>uy,nonMaxSuppressionV5Impl:()=>cy,whereImpl:()=>ey});Q_();var by={kernelName:li,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>D(r,wo(J(e,"float32"),-1))}}};var SA={kernelName:la,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=zt(J(e,"float32")),o=Se(lt(pt(1),n));return qt(ut(r,o))}}}};var NA={kernelName:ua,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=Se(lt(zt(J(e,"float32")),1));return ut(r,n)}}}};var TA={kernelName:Jn,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Ot(e.shape,n.shape);return{a:()=>{let a=r,u=xe(e.shape,o);return u.length>0&&(a=mt(a,u)),R(a,e.shape)},b:()=>{let a=r,u=xe(n.shape,o);return u.length>0&&(a=mt(a,u)),R(a,n.shape)}}}};var kA={kernelName:Vo,saveAllInputs:!0,gradFunc:(r,t)=>{let e={};return t.forEach((n,o)=>{e[o]=()=>r.clone()}),e}};var EA={kernelName:Go,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>It(e)}}};var _A={kernelName:_l,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>It(e)}}};var AA={kernelName:ma,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ut(r,Se(lt(pt(1),zt(J(e,"float32")))))}}};var $A={kernelName:fa,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=Se(Y(pt(1),zt(J(e,"float32"))));return ut(r,n)}}}};var DA={kernelName:ga,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Ot(e.shape,n.shape);return{a:()=>{let a=Y(zt(e),zt(n)),u=D(r,ut(n,a)),l=xe(e.shape,o);return l.length>0&&(u=mt(u,l)),R(u,e.shape)},b:()=>{let a=Y(zt(e),zt(n)),u=qt(D(r,ut(e,a))),l=xe(n.shape,o);return l.length>0&&(u=mt(u,l)),R(u,n.shape)}}}};var RA={kernelName:da,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ut(r,Y(zt(J(e,"float32")),1))}}};var FA={kernelName:ha,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ut(r,lt(pt(1),zt(J(e,"float32"))))}}};function I5(r,t,e,n,o,s){let i=v(r,"dy","avgPool3dGrad"),a=v(t,"input","avgPool3dGrad"),u=i,l=a,c=!1;a.rank===4&&(c=!0,u=R(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=R(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),E(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),ve("avgPool3dGrad",o,s);let p={dy:u,input:l},m={filterSize:e,strides:n,pad:o,dimRoundingMode:s},f=k.runKernel(up,p,m);return c?R(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}var OA=T({avgPool3dGrad_:I5});var PA={kernelName:Al,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:a}=e;return{x:()=>OA(r,n,o,s,i,a)}}};function v5(r,t,e,n,o){let s=v(r,"dy","avgPoolGrad"),i=v(t,"input","avgPoolGrad");E(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let a=i,u=s,l=!1;i.rank===3&&(l=!0,a=R(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=R(s,[1,s.shape[0],s.shape[1],s.shape[2]])),E(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),E(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);let c={dy:u,input:a},p={filterSize:e,strides:n,pad:o},m=k.runKernel(lp,c,p);return l?R(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var LA=T({avgPoolGrad_:v5});var MA={kernelName:Wo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{filterSize:o,strides:s,pad:i}=e;return{x:()=>LA(r,n,o,s,i)}}};var zA={kernelName:Uo,inputsToSave:["a","b"],gradFunc:(r,t,e)=>{let[n,o]=t,{transposeA:s,transposeB:i}=e;return!s&&!i?{a:()=>Mt(r,o,!1,!0),b:()=>Mt(n,r,!0,!1)}:!s&&i?{a:()=>Mt(r,o,!1,!1),b:()=>Mt(r,n,!0,!1)}:s&&!i?{a:()=>Mt(o,r,!1,!0),b:()=>Mt(n,r,!1,!1)}:{a:()=>Mt(o,r,!0,!0),b:()=>Mt(r,n,!0,!0)}}};var BA={kernelName:ui,gradFunc:(r,t,e)=>{let{blockShape:n,crops:o}=e;return{x:()=>su(r,n,o)}}};var VA={kernelName:p1,gradFunc:(r,t,e)=>{let n=e,o=n.inputShape,s=n.shape,i=Array.from(s);for(let u=o.length-1;u>=0;u--)if(o[u]===s[u])i[u]=1;else if(o[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let a=[];for(let u=0;u<i.length;u++)i[u]>1&&a.push(u);return{x:()=>mt(r,a,!0)}}};var GA={kernelName:uo,gradFunc:r=>({x:()=>r.clone()})};var WA={kernelName:Ho,gradFunc:r=>({x:()=>It(r)})};var UA={kernelName:co,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{clipValueMin:o,clipValueMax:s}=e;return{x:()=>_e(Fr(un(n,o),Mn(n,s)),r,It(r))}}};var HA={kernelName:$l,inputsToSave:["x"],gradFunc:by.gradFunc};var qA={kernelName:ci,saveAllInputs:!0,gradFunc:(r,t,e)=>{let n=t.map(u=>u.shape),{axis:o}=e,s=pr(o,t[0].shape)[0],i=n.map(u=>u[s]);return hr(r,i,s).map(u=>()=>u)}};var KA={kernelName:qo,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,{dilations:s,strides:i,pad:a,dataFormat:u}=e;return E(ro(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>em(n.shape,r,o,i,a,u),filter:()=>Im(n,r,o.shape,i,a,u)}}};var jA={kernelName:Ko,inputsToSave:["dy","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,{strides:s,pad:i,dataFormat:a,dimRoundingMode:u}=e;return{dy:()=>vn(r,o,s,i,a,1,u),filter:()=>Im(r,n,o.shape,s,i,a,u)}}};function S5(r,t,e,n,o){let s=r;r.rank===4&&(s=R(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let i=t;i.rank===4&&(i=R(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),E(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),E(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),E(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),E(s.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${e[3]}.`),E(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`);let a={x:s,dy:i},u={strides:n,pad:o,filterShape:e};return k.runKernel(dp,a,u)}var XA=T({conv3DBackpropFilter_:S5});var YA={kernelName:Dl,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:n,strides:o,pad:s}=e;E(ro(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[i,a]=t;return{x:()=>bx(i.shape,r,a,o,s),filter:()=>XA(i,r,a.shape,o,s)}}};var ZA={kernelName:jo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>D(qt(dm(J(e,"float32"))),r)}}};var JA={kernelName:Xo,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>D(hm(J(e,"float32")),r)}}};var QA={kernelName:Yo,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o,exclusive:s,reverse:i}=e;return{x:()=>{let a=q0([o],n.rank),u=om(r,o,s,!i);return a!=null&&(u=Pt(u,a)),u}}}};var t2={kernelName:Zo,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:i}=e,a=n==null?[1,1]:n;E(ro(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[u,l]=t;return E(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),E(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),E(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),E($r(o,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${a}'.`),ve("depthwiseConv2d",s,i),{x:()=>sy(u.shape,r,l,o,s,a,i),filter:()=>oy(u,r,l.shape,o,s,a,i)}}};var e2={kernelName:Rl,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,s={x:n,filter:o,dy:r},i={x:n,filter:o,dy:r};return{x:()=>k.runKernel(Kd,s,e),filter:()=>k.runKernel(jd,i,e)}}};var r2={kernelName:Qo,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t,n={dy:r,y:e};return{x:()=>k.runKernel(Cp,n)}}};var n2={kernelName:wa,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,n=D(sr(qt(zt(e))),2/Math.sqrt(Math.PI));return{x:()=>D(r,n)}}};var o2={kernelName:ts,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>D(r,e)}}};var s2={kernelName:pi,inputsToSave:["input"],gradFunc:(r,t)=>{let[e]=t;return{input:()=>R(r,e.shape)}}};var i2={kernelName:Ia,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>D(r,sr(e))}}};var a2={kernelName:es,gradFunc:r=>({x:()=>It(r)})};var l2={kernelName:rs,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Ot(e.shape,n.shape);return{a:()=>{let a=ut(r,J(n,"float32")),u=xe(e.shape,o);return u.length>0?R(mt(a,u),e.shape):a},b:()=>{let a=D(r,J(e,"float32")),u=xe(n.shape,o);u.length>0&&(a=R(mt(a,u),n.shape));let l=zt(n);return qt(ut(a,J(l,"float32")))}}}};var u2={kernelName:ns,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,t,e)=>{let{varianceEpsilon:n}=e,[o,s,i,a]=t,u=a==null?pt(1):a,l=xe(s.shape,o.shape),c=[];if(s.rank===1){for(let C=0;C<o.shape.length-1;++C)c.push(o.shape[C]);c.push(1)}let p=lt(o,s),m=D(r,u),f=pm(Y(i,pt(n))),d=D(D(D(f,f),f),pt(-.5));return{x:()=>s.rank===1?R(D(D(r,Rr(R(f,[1,1,1,s.shape[0]]),c)),u),o.shape):R(D(D(r,f),u),o.shape),mean:()=>{let C=D(D(f,pt(-1)),m);return s.rank===1&&(C=mt(C,l)),R(C,s.shape)},variance:()=>{let C=D(D(d,p),m);return s.rank===1&&(C=mt(C,l)),R(C,s.shape)},scale:()=>{let C=D(p,f),N=D(r,C);return s.rank===1&&(N=mt(N,l)),R(N,s.shape)},offset:()=>{let C=r;return s.rank===1&&(C=mt(C,l)),R(C,s.shape)}}}};var m2={kernelName:mi,inputsToSave:["x","indices"],gradFunc:(r,t,e)=>{let[n,o]=t,{axis:s}=e,i=pr(s,n.shape)[0];return{x:()=>{let u=n.shape,l=o.size,c=u.slice(0,i),p=c.length,m=u.slice(s,u.length).slice(1),f=m.length,d=c2(0,p),h=c2(p+1,p+1+f),g=p2([c,[l],m]),x=R(r,g),b=R(o,[l]),w=p2([[p],d,h]),C=Pt(x,w),N=Cm(C,b,n.shape[i]),_=lh(w);return N=Pt(N,_),N},indices:()=>o}}};function c2(r,t){let e=[];for(let n=r;n<t;++n)e.push(n);return e}function p2(r){let t=[];for(let e=0;e<r.length;++e)for(let n=0;n<r[e].length;++n)t.push(r[e][n]);return t}var f2={kernelName:os,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>It(e),b:()=>It(n)}}};var d2={kernelName:po,gradFunc:r=>({x:()=>J(r,"float32")})};var h2={kernelName:Ta,gradFunc:r=>({x:()=>It(r)})};var g2={kernelName:ka,gradFunc:r=>({x:()=>It(r)})};var x2={kernelName:ss,gradFunc:r=>({x:()=>It(r)})};var y2={kernelName:is,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{alpha:o}=e,s=Fe(n,0);return{x:()=>_e(s,r,D(r,o))}}};var b2={kernelName:Aa,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ut(r,Y(e,1))}}};var w2={kernelName:as,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ut(r,J(e,"float32"))}}};var C2={kernelName:f1,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e;return{logits:()=>{let i=sr(n);return lt(r,D(mt(r,o,!0),i))}}}};function N5(r,t,e,n=5,o=1,s=1,i=.5){let a={x:r,y:t,dy:e},u={depthRadius:n,bias:o,alpha:s,beta:i};return k.runKernel(Tp,a,u)}var I2=T({localResponseNormalizationBackprop_:N5});var v2={kernelName:Ol,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{depthRadius:s,bias:i,alpha:a,beta:u}=e;return{x:()=>I2(n,o,r,s,i,a,u)}}};function wy(r,t,e,n){return t.rank<e.rank&&(t=R(t,bo(t.shape,n))),r.rank<e.rank&&(r=R(r,bo(r.shape,n))),{x:()=>D(r,J(Dr(e,t),r.dtype))}}var wS={kernelName:ls,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let n=e,{reductionIndices:o}=n,s=t[0],i=t[1],a=pr(o,s.shape),u=wy(r,i,s,a);return{x:()=>u.x()}}};var S2={kernelName:us,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>D(r,J(un(e,n),"float32")),b:()=>D(r,J(sm(e,n),"float32"))}}};function T5(r,t,e,n,o,s,i){let a=v(r,"dy","maxPool3dGrad"),u=v(t,"input","maxPool3dGrad"),l=v(e,"output","maxPool3dGrad"),c=a,p=u,m=l,f=!1;u.rank===4&&(f=!0,c=R(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),p=R(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),m=R(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),E(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),E(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),E(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),ve("maxPool3dGrad",s,i);let d={dy:c,input:p,output:m},h={filterSize:n,strides:o,pad:s,dimRoundingMode:i},g=k.runKernel(Ep,d,h);return f?R(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var N2=T({maxPool3dGrad_:T5});var T2={kernelName:Pl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=e;return{x:()=>N2(r,n,o,s,i,a,u)}}};function k5(r,t,e,n,o,s,i){let a=v(r,"dy","maxPoolGrad"),u=v(t,"input","maxPoolGrad"),l=v(e,"output","maxPoolGrad");E(u.rank===a.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${a.rank})`),E(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),E(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),ve("maxPoolGrad",s,i);let c={dy:a,input:u,output:l},p={filterSize:n,strides:o,pad:s,dimRoundingMode:i};return k.runKernel(kp,c,p)}var k2=T({maxPoolGrad_:k5});var E2={kernelName:cs,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{filterSize:s,strides:i,pad:a}=e;return{x:()=>k2(r,n,o,s,i,a)}}};var _2={kernelName:ps,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e,s=pr(o,n.shape),a=H0(n.shape,s)[1],u=Jt(a);return{x:()=>{let c=n.shape.slice();s.forEach(f=>{c[f]=1});let p=R(r,c);return ut(D(p,fr(n.shape,"float32")),u)}}}};var A2={kernelName:ms,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let n=e,{axis:o}=n,[s,i]=t,a=pr(o,s.shape),u=wy(r,i,s,a);return{x:()=>u.x()}}};var $2={kernelName:fs,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>D(r,J(Mn(e,n),"float32")),b:()=>D(r,J(Fe(e,n),"float32"))}}};var D2={kernelName:ds,inputsToSave:["x"],gradFunc:(r,t,e)=>{let n=t[0],{paddings:o}=e,s=o.map(i=>i[0]);return{x:()=>Rt(r,s,n.shape)}}};var R2={kernelName:Fa,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Ot(e.shape,n.shape);return{a:()=>{let a=xe(e.shape,o);return a.length>0?R(mt(r,a),e.shape):r},b:()=>{let a=D(r,qt(Li(ut(e,n)))),u=xe(n.shape,o);return u.length>0?R(mt(a,u),n.shape):a}}}};var F2={kernelName:hs,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Ot(e.shape,n.shape);return{a:()=>{let a=D(r,J(n,"float32")),u=xe(e.shape,o);return u.length>0?R(mt(a,u),e.shape):a},b:()=>{let a=D(r,J(e,"float32")),u=xe(n.shape,o);return u.length>0?R(mt(a,u),n.shape):a}}}};var O2={kernelName:fi,gradFunc:r=>({x:()=>qt(r)})};var P2={kernelName:gs,inputsToSave:["indices"],gradFunc:(r,t)=>{let e=t[0];return{indices:()=>Te(e.shape,"float32")}}};var L2={kernelName:di,gradFunc:r=>({x:()=>It(r)})};var M2={kernelName:hi,saveAllInputs:!0,gradFunc:(r,t,e)=>{let{axis:n}=e;return gr(r,n).map(s=>()=>s)}};var CS={kernelName:xs,inputsToSave:["x"],gradFunc:(r,t,e)=>{let n=t[0],{paddings:o}=e,s=o.map(i=>i[0]);return{x:()=>Rt(r,s,n.shape)}}};var z2={kernelName:ys,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,t)=>{let[e,n,o]=t,s=e,i=n,a=Ot(s.shape,i.shape);return{a:()=>{let c=J(i,"float32"),p=D(r,D(c,ln(s,lt(c,pt(1))))),m=xe(s.shape,a);return m.length>0&&(p=mt(p,m)),R(p,s.shape)},b:()=>{let c=Fe(s,0),p=_e(c,Nr(s),It(s)),m=D(r,D(o,p)),f=xe(i.shape,a);return f.length>0&&(m=mt(m,f)),R(m,i.shape)}}}};var B2={kernelName:bs,inputsToSave:["x","alpha"],gradFunc:(r,t)=>{let[e,n]=t,o=Fe(e,0);return{x:()=>_e(o,r,D(r,n)),alpha:()=>{let s=_e(o,It(r),D(r,e)),i=xe(n.shape,r.shape);return i.length>0&&(s=mt(s,i)),R(s,n.shape)}}}};function E5(r,t,e){let n=r.shape.slice();n[e]=1;let o=R(t,n),s=Uu(r,e,!0,!1),i=Uu(r,e,!0,!0),a=D(s,i);return D(o,a)}function _5(r,t,e){let n=r.shape.length,o=n-e.length,s=S.getAxesPermutation(e,n),i=r;s!=null&&(i=Pt(r,s));let a=i.shape.slice(),l=a.splice(n-e.length,e.length).reduce((m,f)=>m*f,1);a.push(l);let c=i.reshape(a),p=E5(c,t,o);if(p=p.reshape(i.shape),s!=null){let m=S.getUndoAxesPermutation(s);p=Pt(p,m)}return p}var V2={kernelName:ws,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e,s=[];return o==null?s=n.shape.map((i,a)=>a):typeof o=="number"?s=[o]:s=o,{x:()=>_5(n,r,s)}}};var G2={kernelName:Jo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Ot(e.shape,n.shape);return{a:()=>{let a=ut(r,J(n,"float32")),u=xe(e.shape,o);return u.length>0?R(mt(a,u),e.shape):a},b:()=>{let a=D(r,J(e,"float32")),u=xe(n.shape,o);u.length>0&&(a=R(mt(a,u),n.shape));let l=zt(n);return qt(ut(a,J(l,"float32")))}}}};var W2={kernelName:Cs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ut(r,qt(zt(e)))}}};var U2={kernelName:Ns,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,n=D(Mn(e,6),wo(e));return{x:()=>D(r,J(n,"float32"))}}};var H2={kernelName:Is,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>D(r,J(wo(e),"float32"))}}};var q2={kernelName:gi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,e.shape)}}};var K2={kernelName:Ss,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[n]=t,o={dy:r,images:n};return{images:()=>k.runKernel(Pp,o,e)}}};var j2={kernelName:vs,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[n]=t,o={dy:r,images:n};return{images:()=>k.runKernel(Op,o,e)}}};var X2={kernelName:Ts,gradFunc:(r,t,e)=>{let{dims:n}=e,o=pr(n,r.shape);return{x:()=>dr(r,o)}}};var Y2={kernelName:ks,gradFunc:r=>({x:()=>It(r)})};var Z2={kernelName:Es,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>qt(ut(r,D(ln(e,1.5),2)))}}};var J2={kernelName:xi,inputsToSave:["condition"],gradFunc:(r,t)=>{let[e]=t;return{condition:()=>J(It(e),"float32"),t:()=>D(r,J(e,r.dtype)),e:()=>D(r,J(nu(e),r.dtype))}}};var Q2={kernelName:Ba,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=Fe(e,pt(0)),o=pt(gS),s=pt(xS),i=D(r,s),a=D(D(r,o),sr(J(e,"float32")));return _e(n,i,a)}}}};var t$={kernelName:As,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>D(r,D(e,lt(pt(1),e)))}}};var e$={kernelName:Ga,gradFunc:r=>({x:()=>It(r)})};var r$={kernelName:_s,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>D(Ql(J(e,"float32")),r)}}};var n$={kernelName:Va,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>D(nm(J(e,"float32")),r)}}};var o$={kernelName:yi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{begin:o,size:s}=e,i=n.shape,[a,u]=hS(n,o,s),l=[];for(let c=0;c<r.rank;c++)l.push([a[c],i[c]-a[c]-u[c]]);return{x:()=>pn(r,l)}}};var s$={kernelName:Rs,outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n]=t,{dim:o}=e,s=!0,i=D(r,n);return{logits:()=>lt(i,D(mt(i,[o],s),n))}}};var i$={kernelName:Wa,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>D(r,Qr(e))}}};var IS={kernelName:bi,gradFunc:(r,t,e)=>{let{blockShape:n,paddings:o}=e;return{x:()=>Jl(r,n,o)}}};var vS={kernelName:wi,gradFunc:(r,t,e)=>{let{axis:n}=e;return{x:()=>oe(r,n)}}};var a$={kernelName:$s,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ut(r,D(Se(J(e,"float32")),2))}}};var l$={kernelName:Vl,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>D(r,D(J(e,"float32"),2))}}};var u$={kernelName:Fs,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=pt(2);return{a:()=>D(r,D(o,lt(e,n))),b:()=>D(r,D(o,lt(n,e)))}}};var c$={kernelName:mo,gradFunc:r=>({x:()=>It(r)})};var p$={kernelName:Os,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Ot(e.shape,n.shape);return{a:()=>{let a=r,u=xe(e.shape,o);return u.length>0&&(a=mt(a,u)),R(a,e.shape)},b:()=>{let a=r,u=xe(n.shape,o);return u.length>0&&(a=mt(a,u)),R(qt(a),n.shape)}}}};var m$={kernelName:Ds,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,o=n.shape.slice(),{axis:s}=e;pr(s,n.shape).forEach(l=>{o[l]=1});let a=R(r,o),u=D(a,fr(n.shape,"float32"));return{x:()=>u}}};var f$={kernelName:Ps,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ut(r,zt(Ql(e)))}}};var d$={kernelName:Ls,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>D(lt(pt(1),zt(e)),r)}}};var h$={kernelName:Qn,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{reps:o}=e;return{x:()=>{let i=It(n);if(n.rank===1)for(let a=0;a<o[0];++a)i=Y(i,Rt(r,[a*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)i=Y(i,Rt(r,[a*n.shape[0],u*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)i=Y(i,Rt(r,[a*n.shape[0],u*n.shape[1],l*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let a=0;a<o[0];++a)for(let u=0;u<o[1];++u)for(let l=0;l<o[2];++l)for(let c=0;c<o[3];++c)i=Y(i,Rt(r,[a*n.shape[0],u*n.shape[1],l*n.shape[2],c*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return i}}}};var g$={kernelName:to,gradFunc:(r,t,e)=>{let n=e,{perm:o}=n,s=lh(o);return{x:()=>Pt(r,s)}}};var x$={kernelName:Ci,gradFunc:(r,t,e)=>{let n=e,{axis:o}=n;return{value:()=>qe(r,o)}}};var y$={kernelName:Hl,inputsToSave:["segmentIds"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>A5(r,e)}}};function A5(r,t){let e=Sn(t,It(t)),n=Mi(r,e),o=un(t,pt(0,"int32")),s=n.rank-o.rank;for(let a=0;a<s;++a)o=ir(o,a+1);o=Fr(o,fr(n.shape,"bool"));let i=It(n);return _e(o,n,i)}var b$={kernelName:Ii,gradFunc:r=>({x:()=>It(r)})};var $5=[by,SA,NA,TA,kA,EA,_A,AA,$A,DA,RA,FA,PA,MA,zA,BA,VA,GA,WA,UA,HA,qA,jA,KA,YA,ZA,JA,QA,t2,e2,G2,r2,n2,o2,s2,i2,l2,a2,u2,m2,f2,d2,h2,g2,x2,y2,b2,w2,C2,v2,wS,wS,S2,T2,E2,_2,A2,$2,D2,R2,F2,O2,P2,L2,M2,CS,CS,z2,B2,V2,W2,U2,H2,q2,K2,j2,X2,Y2,Z2,J2,Q2,t$,e$,r$,n$,o$,s$,i$,IS,IS,vS,vS,a$,u$,l$,c$,p$,m$,f$,d$,h$,g$,x$,y$,b$];for(let r of $5)h1(r);O().prototype.abs=function(){return this.throwIfDisposed(),Ee(this)};O().prototype.acos=function(){return this.throwIfDisposed(),tx(this)};O().prototype.acosh=function(){return this.throwIfDisposed(),ex(this)};O().prototype.add=function(r){return this.throwIfDisposed(),Y(this,r)};O().prototype.all=function(r,t){return this.throwIfDisposed(),Jp(this,r,t)};O().prototype.any=function(r,t){return this.throwIfDisposed(),Gu(this,r,t)};O().prototype.argMax=function(r){return this.throwIfDisposed(),Ai(this,r)};O().prototype.argMin=function(r){return this.throwIfDisposed(),rx(this,r)};O().prototype.asScalar=function(){return this.throwIfDisposed(),E(this.size===1,()=>"The array must have only 1 element."),R(this,[])};O().prototype.asType=function(r){return this.throwIfDisposed(),J(this,r)};O().prototype.as1D=function(){return this.throwIfDisposed(),R(this,[this.size])};O().prototype.as2D=function(r,t){return this.throwIfDisposed(),R(this,[r,t])};O().prototype.as3D=function(r,t,e){return this.throwIfDisposed(),R(this,[r,t,e])};O().prototype.as4D=function(r,t,e,n){return this.throwIfDisposed(),R(this,[r,t,e,n])};O().prototype.as5D=function(r,t,e,n,o){return this.throwIfDisposed(),R(this,[r,t,e,n,o])};O().prototype.asin=function(){return this.throwIfDisposed(),nx(this)};O().prototype.asinh=function(){return this.throwIfDisposed(),ox(this)};O().prototype.atan=function(){return this.throwIfDisposed(),sx(this)};O().prototype.atan2=function(r){return this.throwIfDisposed(),ix(this,r)};O().prototype.atanh=function(){return this.throwIfDisposed(),ax(this)};O().prototype.avgPool=function(r,t,e,n){return this.throwIfDisposed(),Zl(this,r,t,e,n)};O().prototype.batchToSpaceND=function(r,t){return this.throwIfDisposed(),Jl(this,r,t)};O().prototype.batchNorm=function(r,t,e,n,o){return this.throwIfDisposed(),Ri(this,r,t,e,n,o)};O().prototype.broadcastTo=function(r){return this.throwIfDisposed(),Fi(this,r)};O().prototype.cast=function(r){return this.throwIfDisposed(),J(this,r)};O().prototype.ceil=function(){return this.throwIfDisposed(),fx(this)};O().prototype.clipByValue=function(r,t){return this.throwIfDisposed(),vr(this,r,t)};O().prototype.concat=function(r,t){return this.throwIfDisposed(),r instanceof Ft&&(r=[r]),oe([this,...r],t)};O().prototype.conv1d=function(r,t,e,n,o,s){return this.throwIfDisposed(),tm(this,r,t,e,n,o,s)};O().prototype.conv2dTranspose=function(r,t,e,n,o){return this.throwIfDisposed(),rm(this,r,t,e,n,o)};O().prototype.conv2d=function(r,t,e,n,o,s){return this.throwIfDisposed(),vn(this,r,t,e,n,o,s)};O().prototype.cos=function(){return this.throwIfDisposed(),Ql(this)};O().prototype.cosh=function(){return this.throwIfDisposed(),nm(this)};O().prototype.cumprod=function(r,t,e){return this.throwIfDisposed(),Uu(this,r,t,e)};O().prototype.cumsum=function(r,t,e){return this.throwIfDisposed(),om(this,r,t,e)};O().prototype.depthToSpace=function(r,t){return this.throwIfDisposed(),Cx(this,r,t)};O().prototype.depthwiseConv2d=function(r,t,e,n,o,s){return this.throwIfDisposed(),Oi(this,r,t,e,n,o,s)};O().prototype.dilation2d=function(r,t,e,n,o){return this.throwIfDisposed(),Ix(this,r,t,e,n,o)};O().prototype.divNoNan=function(r){return this.throwIfDisposed(),vx(this,r)};O().prototype.div=function(r){return this.throwIfDisposed(),ut(this,r)};O().prototype.dot=function(r){return this.throwIfDisposed(),Sx(this,r)};O().prototype.elu=function(){return this.throwIfDisposed(),Pi(this)};O().prototype.equal=function(r){return this.throwIfDisposed(),Dr(this,r)};O().prototype.erf=function(){return this.throwIfDisposed(),Nx(this)};O().prototype.euclideanNorm=function(r,t){return this.throwIfDisposed(),Tx(this,r,t)};O().prototype.exp=function(){return this.throwIfDisposed(),sr(this)};O().prototype.expandDims=function(r){return this.throwIfDisposed(),ir(this,r)};O().prototype.expm1=function(){return this.throwIfDisposed(),kx(this)};O().prototype.fft=function(){return this.throwIfDisposed(),lu(this)};O().prototype.flatten=function(){return this.throwIfDisposed(),R(this,[this.size])};O().prototype.floor=function(){return this.throwIfDisposed(),Li(this)};O().prototype.floorDiv=function(r){return this.throwIfDisposed(),Zp(this,r)};O().prototype.gather=function(r,t){return this.throwIfDisposed(),Mi(this,r,t)};O().prototype.greaterEqual=function(r){return this.throwIfDisposed(),un(this,r)};O().prototype.greater=function(r){return this.throwIfDisposed(),Fe(this,r)};O().prototype.ifft=function(){return this.throwIfDisposed(),el(this)};O().prototype.irfft=function(){return this.throwIfDisposed(),ym(this)};O().prototype.isFinite=function(){return this.throwIfDisposed(),Ex(this)};O().prototype.isInf=function(){return this.throwIfDisposed(),_x(this)};O().prototype.isNaN=function(){return this.throwIfDisposed(),Ax(this)};O().prototype.leakyRelu=function(r){return this.throwIfDisposed(),eu(this,r)};O().prototype.lessEqual=function(r){return this.throwIfDisposed(),Mn(this,r)};O().prototype.less=function(r){return this.throwIfDisposed(),sm(this,r)};O().prototype.localResponseNormalization=function(r,t,e,n){return this.throwIfDisposed(),$x(this,r,t,e,n)};O().prototype.logSigmoid=function(){return this.throwIfDisposed(),Fx(this)};O().prototype.logSoftmax=function(r){return this.throwIfDisposed(),im(this,r)};O().prototype.logSumExp=function(r,t){return this.throwIfDisposed(),am(this,r,t)};O().prototype.log=function(){return this.throwIfDisposed(),Nr(this)};O().prototype.log1p=function(){return this.throwIfDisposed(),ru(this)};O().prototype.logicalAnd=function(r){return this.throwIfDisposed(),Fr(this,r)};O().prototype.logicalNot=function(){return this.throwIfDisposed(),nu(this)};O().prototype.logicalOr=function(r){return this.throwIfDisposed(),lm(this,r)};O().prototype.logicalXor=function(r){return this.throwIfDisposed(),Ox(this,r)};O().prototype.matMul=function(r,t,e){return this.throwIfDisposed(),Mt(this,r,t,e)};O().prototype.maxPool=function(r,t,e,n){return this.throwIfDisposed(),ou(this,r,t,e,n)};O().prototype.max=function(r,t){return this.throwIfDisposed(),Sr(this,r,t)};O().prototype.maximum=function(r){return this.throwIfDisposed(),Sn(this,r)};O().prototype.mean=function(r,t){return this.throwIfDisposed(),Ne(this,r,t)};O().prototype.min=function(r,t){return this.throwIfDisposed(),Ja(this,r,t)};O().prototype.minimum=function(r){return this.throwIfDisposed(),zi(this,r)};O().prototype.mirrorPad=function(r,t){return this.throwIfDisposed(),Mx(this,r,t)};O().prototype.mod=function(r){return this.throwIfDisposed(),zx(this,r)};O().prototype.mul=function(r){return this.throwIfDisposed(),D(this,r)};O().prototype.neg=function(){return this.throwIfDisposed(),qt(this)};O().prototype.norm=function(r,t,e){return this.throwIfDisposed(),Qa(this,r,t,e)};O().prototype.notEqual=function(r){return this.throwIfDisposed(),Gs(this,r)};O().prototype.oneHot=function(r,t=1,e=0){return this.throwIfDisposed(),Bi(this,r,t,e)};O().prototype.onesLike=function(){return this.throwIfDisposed(),wr(this)};O().prototype.pad=function(r,t){return this.throwIfDisposed(),pn(this,r,t)};O().prototype.pool=function(r,t,e,n,o,s){return this.throwIfDisposed(),Bx(this,r,t,e,n,o,s)};O().prototype.pow=function(r){return this.throwIfDisposed(),ln(this,r)};O().prototype.prelu=function(r){return this.throwIfDisposed(),iu(this,r)};O().prototype.prod=function(r,t){return this.throwIfDisposed(),Vx(this,r,t)};O().prototype.reciprocal=function(){return this.throwIfDisposed(),Kx(this)};O().prototype.relu=function(){return this.throwIfDisposed(),Or(this)};O().prototype.relu6=function(){return this.throwIfDisposed(),um(this)};O().prototype.reshapeAs=function(r){return this.throwIfDisposed(),R(this,r.shape)};O().prototype.reshape=function(r){return this.throwIfDisposed(),R(this,r)};O().prototype.resizeBilinear=function(r,t,e){return this.throwIfDisposed(),py(this,r,t,e)};O().prototype.resizeNearestNeighbor=function(r,t,e){return this.throwIfDisposed(),my(this,r,t,e)};O().prototype.reverse=function(r){return this.throwIfDisposed(),dr(this,r)};O().prototype.rfft=function(){return this.throwIfDisposed(),uu(this)};O().prototype.round=function(){return this.throwIfDisposed(),cm(this)};O().prototype.rsqrt=function(){return this.throwIfDisposed(),pm(this)};O().prototype.selu=function(){return this.throwIfDisposed(),mm(this)};O().prototype.separableConv2d=function(r,t,e,n,o,s){return this.throwIfDisposed(),fm(this,r,t,e,n,o,s)};O().prototype.sigmoid=function(){return this.throwIfDisposed(),Qr(this)};O().prototype.sign=function(){return this.throwIfDisposed(),jx(this)};O().prototype.sin=function(){return this.throwIfDisposed(),dm(this)};O().prototype.sinh=function(){return this.throwIfDisposed(),hm(this)};O().prototype.slice=function(r,t){return this.throwIfDisposed(),Rt(this,r,t)};O().prototype.softmax=function(r){return this.throwIfDisposed(),au(this,r)};O().prototype.softplus=function(){return this.throwIfDisposed(),Vs(this)};O().prototype.spaceToBatchND=function(r,t){return this.throwIfDisposed(),su(this,r,t)};O().prototype.split=function(r,t){return this.throwIfDisposed(),hr(this,r,t)};O().prototype.sqrt=function(){return this.throwIfDisposed(),Se(this)};O().prototype.square=function(){return this.throwIfDisposed(),zt(this)};O().prototype.squaredDifference=function(r){return this.throwIfDisposed(),bm(this,r)};O().prototype.squeeze=function(r){return this.throwIfDisposed(),zn(this,r)};O().prototype.stack=function(r,t){this.throwIfDisposed();let e=r instanceof Ft?[this,r]:[this,...r];return qe(e,t)};O().prototype.step=function(r){return this.throwIfDisposed(),wo(this,r)};O().prototype.stridedSlice=function(r,t,e,n,o,s,i,a){return this.throwIfDisposed(),Xx(this,r,t,e,n,o,s,i,a)};O().prototype.sub=function(r){return this.throwIfDisposed(),lt(this,r)};O().prototype.sum=function(r,t){return this.throwIfDisposed(),mt(this,r,t)};O().prototype.tan=function(){return this.throwIfDisposed(),Yx(this)};O().prototype.tanh=function(){return this.throwIfDisposed(),Di(this)};O().prototype.tile=function(r){return this.throwIfDisposed(),Rr(this,r)};O().prototype.toBool=function(){return this.throwIfDisposed(),J(this,"bool")};O().prototype.toFloat=function(){return this.throwIfDisposed(),J(this,"float32")};O().prototype.toInt=function(){return this.throwIfDisposed(),J(this,"int32")};O().prototype.topk=function(r,t){return this.throwIfDisposed(),Jx(this,r,t)};O().prototype.transpose=function(r){return this.throwIfDisposed(),Pt(this,r)};O().prototype.unique=function(r){return this.throwIfDisposed(),Qx(this,r)};O().prototype.unsortedSegmentSum=function(r,t){return this.throwIfDisposed(),Cm(this,r,t)};O().prototype.unstack=function(r){return this.throwIfDisposed(),gr(this,r)};O().prototype.where=function(r,t){return this.throwIfDisposed(),_e(r,this,t)};O().prototype.zerosLike=function(){return this.throwIfDisposed(),It(this)};var Nn=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Nn.prototype)}},Kr=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Kr.prototype)}},z=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,z.prototype)}},vt=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,vt.prototype)}},vm=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,vm.prototype)}};var bh=class{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=t}};function vo(r,t){if(Array.isArray(r)){let e=[];for(let n=0;n<t;n++)e=e.concat(r);return e}else{let e=new Array(t);return e.fill(r),e}}function so(r,t){if(!r)throw new vm(t)}function NS(r,t){let e=0;for(let n of r)n===t&&e++;return e}function Tr(r){return r.length===1?r[0]:r}function ye(r){return Array.isArray(r)?r:[r]}function So(r){let e=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function ol(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}var Io={};function Sm(r){if(r==null)return null;let t={};return t.className=r.getClassName(),t.config=r.getConfig(),t}function SS(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(t=>SS(t));else{let t=Object.keys(r);for(let e of t){let n=r[e];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[e]=n.value:SS(n))}}}function Hi(r,t={},e={},n="object",o=!1){if(typeof r=="string"){let s=r,i;if(s in e)i=e[s];else if(s in Io)i=Io[s];else if(i=t[s],i==null)throw new z(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=r;if(s.className==null||s.config==null)throw new z(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,a,u;if(i in e?[a,u]=e[i]:i in Io?[a,u]=Io.className:i in t&&([a,u]=t[i]),a==null)throw new z(`Unknown ${n}: ${i}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let l={};for(let f of Object.keys(Io))l[f]=Io[f];for(let f of Object.keys(e))l[f]=e[f];let c=s.config;c.customObjects=l;let p=Object.assign({},Io);for(let f of Object.keys(e))Io[f]=e[f];SS(s.config);let m=u(a,s.config,e,o);return Io=Object.assign({},p),m}else{let l=Object.assign({},Io);for(let p of Object.keys(e))Io[p]=e[p];let c=new a(s.config);return Io=Object.assign({},l),c}}}function D5(r,t){return r<t?-1:r>t?1:0}function wh(r,t){return-1*D5(r,t)}function No(r){if(r==null)return r;let t=[];for(let e of r)t.indexOf(e)===-1&&t.push(e);return t}function w$(r){if(r==null)throw new z(`Invalid value in obj: ${JSON.stringify(r)}`);for(let t in r)if(r.hasOwnProperty(t))return!1;return!0}function qi(r,t,e){if(e!=null&&r.indexOf(e)<0)throw new z(`${e} is not a valid ${t}.  Valid values are ${r} or null/undefined.`)}function Cy(r,t,e=0,n=1/0){return so(e>=0),so(n>=e),Array.isArray(r)&&r.length>=e&&r.length<=n&&r.every(o=>typeof o===t)}function Qe(r,t){Array.isArray(r)?(y.assert(r.length>0,()=>`${t} is unexpectedly an empty array.`),r.forEach((e,n)=>Qe(e,`element ${n+1} of ${t}`))):y.assert(Number.isInteger(r)&&r>0,()=>`Expected ${t} to be a positive integer, but got ${C$(r)}.`)}function C$(r){return r===null?"null":Array.isArray(r)?"["+r.map(t=>C$(t)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function I$(r,t,e){let n=e!=null?e():y.now(),o;return(...i)=>{let a=e!=null?e():y.now();return a-n<t||(n=a,o=r(...i)),o}}function Iy(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var R5=0;function Sy(){return R5++}var vy={};function pu(r=""){return r in vy||(vy[r]=0),vy[r]+=1,r+vy[r].toString()}var v$=["channelsFirst","channelsLast"],S$=["nearest","bilinear"],N$=["valid","same","causal"],T$=["max","avg"],k$=["sum","mul","concat","ave"];var Nm=new Map;function Oe(r){qi(v$,"DataFormat",r)}function _$(r){qi(S$,"InterpolationFormat",r)}function mn(r){qi(N$,"PaddingMode",r)}function TS(r){qi(T$,"PoolMode",r)}var Ch=[],E$="/";function Hs(r,t){Ch.push(r);try{let e=t();return Ch.pop(),e}catch(e){throw Ch.pop(),e}}function F5(){return Ch.length===0?"":Ch.join(E$)+E$}function Ny(r){if(!A$(r))throw new Error("Not a valid tensor name: '"+r+"'");return F5()+r}function Ty(r){if(!A$(r))throw new Error("Not a valid tensor name: '"+r+"'");Nm.has(r)||Nm.set(r,0);let t=Nm.get(r);if(Nm.set(r,Nm.get(r)+1),t>0){let e=`${r}_${t}`;return Nm.set(e,1),e}else return r}var O5=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function A$(r){return!!r.match(O5)}function $$(r){return r===parseInt(r.toString(),10)}function To(r,t,e){t==null&&(t=0),e==null&&(e=r.length);let n=1;for(let o=t;o<e;++o)n*=r[o];return n}function uc(r){if(r.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<r.length;e++){let n=r[e];n<t&&(t=n)}return t}function qs(r){if(r.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<r.length;e++){let n=r[e];n>t&&(t=n)}return t}function fn(r,t){if(t<r)throw new z(`end (${t}) < begin (${r}) is forbidden.`);let e=[];for(let n=r;n<t;++n)e.push(n);return e}var kS;function ur(){return kS==null&&(kS=lE().epsilon()),kS}function dn(){return"channelsLast"}function tn(r,t){return J(r,t)}function il(r,t=-1){let e=r.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),R(r,e)}function D$(r,t){return B(()=>{if(r.shape.length!==2)throw new z(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let e=il(r,1);return Ey(e,[1,t,1])})}function R$(r){let t=[To(r.shape)];return R(r,t)}function F$(r){if(r.rank<=1)throw new z(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let t=[r.shape[0],To(r.shape,1)];return R(r,t)}function sl(r,t,e){return B(()=>{switch(r.rank){case 1:return gm(r,t,e);case 2:return ph(r,[t,0],[e,r.shape[1]]);case 3:return xm(r,[t,0,0],[e,r.shape[1],r.shape[2]]);case 4:return Yu(r,[t,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Rt(r,[t,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Rt(r,[t,0,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new z(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function ES(r,t,e){return B(()=>{switch(r.rank){case 1:return gm(r,t,e);case 2:return ph(r,[0,t],[r.shape[0],e]);case 3:return xm(r,[0,0,t],[r.shape[0],r.shape[1],e]);case 4:return Yu(r,[0,0,0,t],[r.shape[0],r.shape[1],r.shape[2],e]);default:throw new z(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Ih(r,t,e,n){return B(()=>{switch(r.rank){case 1:return gm(r,t,e);case 2:switch(n){case 1:return sl(r,t,e);case 2:return ES(r,t,e);default:throw new z(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return sl(r,t,e);case 2:return xm(r,[0,t,0],[r.shape[0],e,r.shape[2]]);case 3:return ES(r,t,e);default:throw new z(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return sl(r,t,e);case 2:return Yu(r,[0,t,0,0],[r.shape[0],e,r.shape[2],r.shape[3]]);case 3:return Yu(r,[0,0,t,0],[r.shape[0],r.shape[1],e,r.shape[3]]);case 4:return ES(r,t,e);default:throw new z(`The axis is not within the rank of the tensor ${n}`)}default:throw new z(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Tm(r,t=-1){let e;return t<0&&(e=r[0].rank,e!==0?t=e:t=0),t===r[0].rank&&(t=-1),oe(r,t)}function AS(r,t){switch(r.rank){case 1:return dx([r,t]);case 2:return hx([r,t],0);case 3:return gx([r,t],0);case 4:return xx([r,t],0);default:throw new z(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function Ey(r,t){if(Array.isArray(t)||(t=[t]),r.rank!==t.length)throw new z(`The length of input n (${t.length}) does not match the number of dimensions in input x (${r.rank})`);return Rr(r,t)}function km(r,t=0,e=1,n,o){return Xu(r,t,e,n,o)}function ko(r,t,e,n){if(r.rank<2||t.rank<2)throw new vt(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${t.shape}`);if(t.rank>=3){let o=r.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(o!==s)throw new vt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${t.shape}`)}if(r.rank===2&&t.rank===2)return cu.matMul({a:r,b:t,transposeA:!1,transposeB:!1,bias:n?_S(r.rank,n,dn()):null,activation:e});{let o=r.shape.slice(),s=o.pop();r=R(r,[-1,s]);let i=t.shape.slice(),a=i.pop(),u=i.pop(),l=[...i,a],c=Array.from({length:t.rank},(d,h)=>h===0?t.rank-2:h<=t.rank-2?h-1:h);t=R(Pt(t,c),[u,-1]);let p=[...o,...l],m=!1,f=!1;return R(cu.matMul({a:r,b:t,transposeA:m,transposeB:f,bias:n?_S(r.rank,n,dn()):null,activation:e}),p)}}function _y(r,t,e){return B(()=>(Array.isArray(t)?t=Ke(t,"int32"):t=J(t,"int32"),Mi(r,t,e)))}function cc(r){return D(r,r)}function _S(r,t,e){let n=t.shape;if(t.rank!==1&&t.rank!==r)throw new z(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${r}`);if(r===5){if(e==="channelsFirst")return n.length===1?R(t,[1,n[0],1,1,1]):R(t,[1,n[3],n[0],n[1],n[2]]);if(e==="channelsLast")return n.length===1?R(t,[1,1,1,1,n[0]]):R(t,[1].concat(n))}else if(r===4){if(e==="channelsFirst")return n.length===1?R(t,[1,n[0],1,1]):R(t,[1,n[2],n[0],n[1]]);if(e==="channelsLast")return n.length===1?R(t,[1,1,1,n[0]]):R(t,[1].concat(n))}else if(r===3){if(e==="channelsFirst")return n.length===1?R(t,[1,n[0],1]):R(t,[1,n[1],n[0]]);if(e==="channelsLast")return n.length===1?R(t,[1,1,n[0]]):R(t,[1].concat(n))}else if(r<3)return t;throw new z(`Unsupported input rank by biasAdd: ${t.rank}`)}function hn(r,t,e){return B(()=>(e==null&&(e=dn()),Oe(e),Y(r,_S(r.rank,t,e))))}function O$(r,t=1){if(t!==1)throw new vt(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Pi(r)}function P$(r){return B(()=>ut(r,Y(Ee(r),1)))}function Ay(r,t,e,n){return B(()=>nS(r,t,e,n))}function L$(r){return B(()=>{let t=Y(.5,D(.2,r));return vr(t,0,1)})}function mu(r,t,e=!1){return e?r():t()}var M$=["fanIn","fanOut","fanAvg"],z$=["normal","uniform","truncatedNormal"];function P5(r){qi(M$,"FanMode",r)}function L5(r){qi(z$,"Distribution",r)}var gn=class extends Q.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Em=class extends gn{apply(t,e){return Te(t,e)}};Em.className="Zeros";Q.registerClass(Em);var fu=class extends gn{apply(t,e){return fr(t,e)}};fu.className="Ones";Q.registerClass(fu);var _m=class extends gn{constructor(t){if(super(),typeof t!="object")throw new z(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new z(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return B(()=>D(pt(this.value),fr(t,e)))}getConfig(){return{value:this.value}}};_m.className="Constant";Q.registerClass(_m);var Am=class extends gn{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Vi(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Am.className="RandomUniform";Q.registerClass(Am);var $m=class extends gn{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new vt(`randomNormal does not support dType ${e}.`);return km(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};$m.className="RandomNormal";Q.registerClass($m);var Dm=class extends gn{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new vt(`truncatedNormal does not support dType ${e}.`);return wm(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Dm.className="TruncatedNormal";Q.registerClass(Dm);var Rm=class extends gn{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return B(()=>{if(t.length!==2||t[0]!==t[1])throw new z("Identity matrix initializer can only be used for 2D square matrices.");return D(this.gain,Hu(t[0]))})}getConfig(){return{gain:this.gain}}};Rm.className="Identity";Q.registerClass(Rm);function M5(r,t="channelsLast"){let e,n;if(Oe(t),r.length===2)e=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(t==="channelsFirst"){let o=To(r,2);e=r[1]*o,n=r[0]*o}else if(t==="channelsLast"){let o=To(r,0,r.length-2);e=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=To(r);e=Math.sqrt(o),n=Math.sqrt(o)}return[e,n]}var jr=class extends gn{constructor(t){if(super(),t.scale<0)throw new z(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,P5(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,L5(this.distribution),this.seed=t.seed}apply(t,e){let n=M5(t),o=n[0],s=n[1],i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,o):this.mode==="fanOut"?i/=Math.max(1,s):i/=Math.max(1,(o+s)/2),this.distribution==="normal"){let a=Math.sqrt(i);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new vt(`${this.getClassName()} does not support dType ${e}.`);return wm(t,0,a,e,this.seed)}else{let a=Math.sqrt(3*i);return Vi(t,-a,a,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};jr.className="VarianceScaling";Q.registerClass(jr);var pc=class extends jr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return jr.className}};pc.className="GlorotUniform";Q.registerClass(pc);var mc=class extends jr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return jr.className}};mc.className="GlorotNormal";Q.registerClass(mc);var fc=class extends jr{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return jr.className}};fc.className="HeNormal";Q.registerClass(fc);var dc=class extends jr{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return jr.className}};dc.className="HeUniform";Q.registerClass(dc);var hc=class extends jr{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return jr.className}};hc.className="LeCunNormal";Q.registerClass(hc);var gc=class extends jr{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return jr.className}};gc.className="LeCunUniform";Q.registerClass(gc);var Fm=class extends gn{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new vt("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return B(()=>{if(t.length<2)throw new vt("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);let n=t[0]>t[1]?[t[1],t[0]]:t,o=km(n,0,1,"float32"),s=iS.gramSchmidt(o);return t[0]>t[1]&&(s=Pt(s)),D(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Fm.className="Orthogonal";Q.registerClass(Fm);var B$={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function V$(r,t={}){return Hi(r,Q.SerializationMap.getMap().classNameMap,t,"initializer")}function ke(r){return Sm(r)}function de(r){if(typeof r=="string"){let t=r in B$?B$[r]:r;if(t==="GlorotNormal")return new mc;if(t==="GlorotUniform")return new pc;if(t==="HeNormal")return new fc;if(t==="HeUniform")return new dc;if(t==="LeCunNormal")return new hc;if(t==="LeCunUniform")return new gc;{let e={};return e.className=t,e.config={},V$(e)}}else return r instanceof gn?r:V$(r)}function $y(r){return Array.isArray(r)&&Array.isArray(r[0])}function Om(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function St(r){let t;if(Array.isArray(r)){if(r.length!==1)throw new z(`Expected Tensor length to be 1; got ${r.length}`);t=r[0]}else t=r;return t}function Bt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new z(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function Pm(r){let t=0;for(let e of r)e.shape.length===0?t+=1:t+=e.shape.reduce((n,o)=>n*o);return t}var W$="Variable",vh=class{constructor(t,e="float32",n=W$,o=!0,s=null){this.dtype=e==null?"float32":e,this.shape=t.shape,this.id=Sy(),n=n==null?W$:n,this.originalName=Ny(n),this.name=Ty(this.originalName),this.trainable_=o,this.constraint=s,this.val=ty(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),B5(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}};function B5(r,t){if(r.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(t.shape))}function Sh(r){return r.map(t=>t.read())}function Lm(r){r.forEach(t=>{t[0].write(t[1])})}var be=class{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}},en=class{constructor(t,e,n,o,s,i,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=o,this.callArgs=s,this.outputTensorIndex=a,this.id=Sy(),i!=null&&(this.originalName=Ny(i),this.name=Ty(this.originalName)),this.rank=e.length}},V5=0,al=class{constructor(t,e){this.callArgs=e,this.id=V5++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(let n of t.inboundLayers)n!=null&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){let t=[];for(let e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},G5=0,kt=class extends Q.Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=G5++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){let n=this.getClassName();e=So(n)+"_"+pu(n)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let n;if(t.batchInputShape!=null)n=t.batchInputShape;else if(t.inputShape!=null){let s=null;t.batchSize!=null&&(s=t.batchSize),n=[s].concat(t.inputShape)}this.batchInputShape=n;let o=t.dtype;o==null&&(o=t.inputDType),o==null&&(o="float32"),this.dtype=o}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new Kr(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new z(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Tr(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Tr(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Nn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Nn(`Layer ${this.name} is not connected, no input to return.`);return Tr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Nn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Nn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Tr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=ye(t),this.inputSpec==null||this.inputSpec.length===0)return;let e=ye(this.inputSpec);if(t.length!==e.length)throw new z(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){let o=t[n],s=e[n];if(s==null)continue;let i=o.rank;if(s.ndim!=null&&i!==s.ndim)throw new z(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(s.maxNDim!=null&&i>s.maxNDim)throw new z(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(s.minNDim!=null&&i<s.minNDim)throw new z(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(s.dtype!=null&&o.dtype!==s.dtype)throw new z(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${o.dtype}.`);if(s.axes){let a=o.shape;for(let u in s.axes){let l=Number(u),c=s.axes[u],p=l>=0?a[l]:a[a.length+l];if(c!=null&&[c,null].indexOf(p)===-1)throw new z(`Input ${n} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${c} but got shape ${a}.`)}}if(s.shape!=null)for(let a=0;a<s.shape.length;++a){let u=s.shape[a],l=o.shape[a];if(u!=null&&l!=null&&u!==l)throw new z(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${o.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();let n=ye(t),o=!0;for(let i of n)if(!(i instanceof en)){o=!1;break}let s=!0;for(let i of n)if(i instanceof en){s=!1;break}if(o===s)throw new z("Arguments to apply() must be all SymbolicTensors or all Tensors");return Hs(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);let i=[];for(let a of ye(t))i.push(a.shape);this.build(Tr(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let i=this.call(t,e),a=ye(i),u=[];for(let l of a)n.indexOf(l)!==-1&&(l=l.clone()),u.push(l);if(i=Tr(u),this.activityRegularizer!=null)throw new vt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{let i=W5(t),a=this.computeOutputShape(i),u,l=U5(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?u=a.map((c,p)=>new en(l,c,this,ye(t),e,this.name,p)):u=new en(l,a,this,ye(t),e,this.name),this.addInboundNode(t,u,null,null,i,a,e),this._refCount++,this.activityRegularizer!=null)throw new vt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&t[o]!=null&&t[o]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Nn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let t=[];for(let e of this.inboundNodes){let n=JSON.stringify(e.outputShapes);t.indexOf(n)===-1&&t.push(n)}if(t.length===1){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new Nn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Kr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Pm(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Sh(t?this.trainableWeights:this.weights)}setWeights(t){B(()=>{let e=this.weights;if(e.length!==t.length)throw new z(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;let n=[],o=Sh(e);for(let s=0;s<o.length;++s){let i=o[s],a=e[s],u=t[s];if(!y.arraysEqual(i.shape,u.shape))throw new z(`Layer weight shape ${i.shape} not compatible with provided weight shape ${u.shape}`);n.push([a,u])}Lm(n)})}addWeight(t,e,n,o,s,i,a,u){if(this._addedWeightNames.indexOf(t)!==-1)throw new z(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=u!=null?u():de("zeros"));let l=o.apply(e,n),c=new vh(l,n,t,i,a);return l.dispose(),s!=null&&this.addLoss(()=>s.apply(c.read())),i==null&&(i=!0),i?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=ye(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}addInboundNode(t,e,n,o,s,i,a=null){let u=ye(t);e=ye(e),n=ye(n),o=ye(o),s=Om(s),i=Om(i);let l=[],c=[],p=[];for(let m of u)l.push(m.sourceLayer),c.push(m.nodeIndex),p.push(m.tensorIndex);new al({outboundLayer:this,inboundLayers:l,nodeIndices:c,tensorIndices:p,inputTensors:u,outputTensors:e,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:i},a);for(let m=0;m<e.length;m++)e[m].sourceLayer=this,e[m].nodeIndex=this.inboundNodes.length-1,e[m].tensorIndex=m}getConfig(){let t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}};function W5(r){r=ye(r);let t=[];for(let e of r)t.push(e.shape);return Tr(t)}function U5(r){return"float32"}function $S(r,t,e){if((t==null||e!=null&&e>0)&&(t=r.sourceLayer,e=r.nodeIndex),t.inboundNodes.length===0)return[r];{let n=t.inboundNodes[e];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let i=n.inputTensors[s],a=n.inboundLayers[s],u=n.nodeIndices[s],l=$S(i,a,u);for(let c of l)o.indexOf(c)===-1&&o.push(c)}return o}}}var Ks=class extends kt{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:pu("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new z("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new z("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new z("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];let o=new en(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new al({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new z(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Ks.className="InputLayer";Q.registerClass(Ks);function Dy(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new z("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=r.batchShape;r.shape!=null&&t==null&&(t=[null].concat(r.shape));let e=r.dtype;return e==null&&(e="float32"),new Ks({batchInputShape:t,name:r.name,dtype:e,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function H5(r,t){if(r.dtype==null||r.dtype===t.dtype)return t;try{return J(t,r.dtype)}catch(e){throw new z(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Eo=class{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Eo)for(let e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(let e of t)this.add(e.key,e.value)}}add(t,e,n){if(this.id2Value[t.id]==null)this.id2Value[t.id]=H5(t,e),this.name2Id[t.name]=t.id,n!=null&&(this.id2Mask[t.id]=n);else throw new z(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof en){if(this.id2Value[t.id]==null)throw new z(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{let e=this.name2Id[t];if(e==null)throw new z(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof en){if(this.id2Value[t.id]==null)throw new z(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{let e=this.name2Id[t];if(e==null)throw new z(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&Nt(this.id2Mask)}},Ry=new bh,Fy=new bh;function H$(r){Ry!=null&&Ry.setMaxEntries(r),Fy!=null&&Fy.setMaxEntries(r)}function xc(r,t,e,n){let o=e==null?!1:e.training,s=Array.isArray(r),i=s?r:[r],a=i.map(d=>d.name),u=[],l=t.names();for(let d of a)l.indexOf(d)!==-1?u.push(t.getValue(d)):u.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let c=a.join(",")+"|"+t.names().sort().join(","),p=Ry.get(c),m;if(p==null){let d=q5(i,t);p=d.sorted,m=d.recipientCounts,Ry.put(c,p),Fy.put(c,m)}m={},o||Object.assign(m,Fy.get(c));let f=new Eo(t);for(let d=0;d<p.length;++d){if(n!=null){let F=oh().numTensors;F>n.maxNumTensors&&(n.maxNumTensors=F),F<n.minNumTensors&&(n.minNumTensors=F)}let h=p[d],g=h.sourceLayer;if(g instanceof Ks)continue;let x=[],b=[],w=[],C=!1;for(let F of h.inputs){let P=f.getValue(F),V=f.getMask(F);x.push(P),b.push(V),V!=null&&(C=!0),o||(m[F.name]--,m[F.name]===0&&!t.hasKey(F)&&a.indexOf(F.name)===-1&&!P.isDisposed&&F.sourceLayer.stateful!==!0&&w.push(P))}C&&(e=e||{},e.mask=b[0]);let N=ye(g.apply(x,e)),_=null;g.supportsMasking&&(_=g.computeMask(x,b));let A=j5(h),$=Array.isArray(A)?A:[A];for(let F=0;F<$.length;++F){f.hasKey($[F])||f.add($[F],N[F],Array.isArray(_)?_[0]:_);let P=a.indexOf($[F].name);P!==-1&&(u[P]=N[F])}o||Nt(w)}return f.disposeMasks(),s?u:u[0]}function q5(r,t){y.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let e=[],n={};if(r.length===1){let o=U$(r[0],t);e=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:i,recipientMap:a}=U$(s,t);for(let u of i)o.has(u.name)||(e.push(u),o.add(u.name));for(let u in a)n[u]==null&&(n[u]=new Set),a[u].forEach(l=>n[u].add(l))}}return{sorted:e,recipientCounts:K5(n)}}function K5(r){let t={};for(let e in r)t[e]=r[e].size;return t}function U$(r,t){let e=new Set,n=[],o={};for(let a of t.names())e.add(a);let s=[],i=[];for(s.push(r);s.length>0;){let a=s[s.length-1];if(e.has(a.name)){s.pop();continue}let u=i[i.length-1]===s.length-1;if(a.inputs.length===0||u)s.pop(),n.push(a),e.add(a.name),u&&i.pop();else{i.push(s.length-1);for(let l of a.inputs)o[l.name]==null&&(o[l.name]=new Set),o[l.name].add(a.name),!e.has(l.name)&&s.push(l)}}return{sorted:n,recipientMap:o}}function j5(r){let t;if(r.sourceLayer.inboundNodes.length===1)t=r.sourceLayer.output;else{let e=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){e=n;break}t=r.sourceLayer.getOutputAt(e)}return t}var X5=M();X5.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,H$);var j$={};Ut(j$,{maxNorm:()=>Y5,minMaxNorm:()=>Q5,nonNeg:()=>J5,unitNorm:()=>Z5});function DS(r,t){return B(()=>Se(mt(D(r,r),t,!0)))}var yc=class extends Q.Serializable{getConfig(){return{}}},Mm=class extends yc{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return B(()=>{let e=DS(t,this.axis),n=vr(e,0,this.maxValue);return D(t,ut(n,Y(ur(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Mm.className="MaxNorm";Q.registerClass(Mm);var zm=class extends yc{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return B(()=>ut(t,Y(ur(),DS(t,this.axis))))}getConfig(){return{axis:this.axis}}};zm.className="UnitNorm";Q.registerClass(zm);var Bm=class extends yc{apply(t){return Or(t)}};Bm.className="NonNeg";Q.registerClass(Bm);var Vm=class extends yc{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return B(()=>{let e=DS(t,this.axis),n=Y(D(this.rate,vr(e,this.minValue,this.maxValue)),D(1-this.rate,e));return D(t,ut(n,Y(ur(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Vm.className="MinMaxNorm";Q.registerClass(Vm);var q$={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Be(r){return Sm(r)}function K$(r,t={}){return Hi(r,Q.SerializationMap.getMap().classNameMap,t,"constraint")}function Ve(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in q$?q$[r]:r,config:{}};return K$(e)}else return r instanceof yc?r:K$(r)}function Y5(r){return new Mm(r)}function Z5(r){return new zm(r)}function J5(){return new Bm}function Q5(r){return new Vm(r)}var X$={};Ut(X$,{constant:()=>r8,glorotNormal:()=>u8,glorotUniform:()=>l8,heNormal:()=>c8,heUniform:()=>p8,identity:()=>i8,leCunNormal:()=>m8,leCunUniform:()=>f8,ones:()=>e8,orthogonal:()=>d8,randomNormal:()=>o8,randomUniform:()=>n8,truncatedNormal:()=>s8,varianceScaling:()=>a8,zeros:()=>t8});function t8(){return new Em}function e8(){return new fu}function r8(r){return new _m(r)}function n8(r){return new Am(r)}function o8(r){return new $m(r)}function s8(r){return new Dm(r)}function i8(r){return new Rm(r)}function a8(r){return new jr(r)}function l8(r){return new pc(r)}function u8(r){return new mc(r)}function c8(r){return new fc(r)}function p8(r){return new dc(r)}function m8(r){return new hc(r)}function f8(r){return new gc(r)}function d8(r){return new Fm(r)}var ED={};Ut(ED,{Layer:()=>kt,RNN:()=>kn,RNNCell:()=>pl,activation:()=>$Y,add:()=>BY,alphaDropout:()=>vZ,average:()=>VY,averagePooling1d:()=>qS,averagePooling2d:()=>KS,averagePooling3d:()=>jS,avgPool1d:()=>YY,avgPool2d:()=>JY,avgPool3d:()=>tZ,avgPooling1d:()=>ZY,avgPooling2d:()=>QY,avgPooling3d:()=>eZ,batchNormalization:()=>KY,bidirectional:()=>hZ,categoryEncoding:()=>EZ,centerCrop:()=>TZ,concatenate:()=>GY,conv1d:()=>IY,conv2d:()=>vY,conv2dTranspose:()=>SY,conv3d:()=>NY,conv3dTranspose:()=>TY,convLstm2d:()=>pZ,convLstm2dCell:()=>mZ,cropping2D:()=>EY,dense:()=>DY,depthwiseConv2d:()=>AY,dot:()=>qY,dropout:()=>RY,elu:()=>gY,embedding:()=>zY,flatten:()=>OY,gaussianDropout:()=>IZ,gaussianNoise:()=>CZ,globalAveragePooling1d:()=>rZ,globalAveragePooling2d:()=>nZ,globalMaxPool1d:()=>xZ,globalMaxPool2d:()=>yZ,globalMaxPooling1d:()=>SD,globalMaxPooling2d:()=>ND,gru:()=>sZ,gruCell:()=>iZ,input:()=>BS,inputLayer:()=>hY,layerNormalization:()=>jY,leakyReLU:()=>yY,lstm:()=>aZ,lstmCell:()=>lZ,masking:()=>SZ,maxPool1d:()=>bZ,maxPool2d:()=>wZ,maxPooling1d:()=>TD,maxPooling2d:()=>kD,maxPooling3d:()=>oZ,maximum:()=>WY,minimum:()=>UY,multiply:()=>HY,permute:()=>MY,prelu:()=>bY,reLU:()=>xY,repeatVector:()=>PY,rescaling:()=>NZ,reshape:()=>LY,resizing:()=>kZ,rnn:()=>fZ,separableConv2d:()=>kY,simpleRNN:()=>uZ,simpleRNNCell:()=>cZ,softmax:()=>wY,spatialDropout1d:()=>FY,stackedRNNCells:()=>dZ,thresholdedReLU:()=>CY,timeDistributed:()=>gZ,upSampling2d:()=>_Y,zeroPadding2d:()=>XY});async function Ki(r){if(r==null)return;let t=[],e=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let i=s;t.push(i.data()),e.push(o),n.push(i)}}if(t.length>0){let o=await Promise.all(t);for(let s=0;s<o.length;++s)r[e[s]]=o[s][0];Nt(n)}}function Oy(r){if(r!=null)for(let t in r){let e=r[t];typeof e!="number"&&e.dispose()}}var Y$;(function(r){r[r.SILENT=0]="SILENT",r[r.VERBOSE=1]="VERBOSE"})(Y$||(Y$={}));var h8=125,ll=class{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}},Py=class{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(let e of this.callbacks)e.setParams(t)}setModel(t){for(let e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(let n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainEnd(t)}},RS=class extends ll{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});let n=e.size==null?0:e.size;this.seen+=n;for(let o in e){let s=e[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let i;o in this.totals?i=this.totals[o]:this.totals[o]=0;let a=B(()=>Y(this.totals[o],D(s,n)));this.totals[o]=a,i!=null&&i.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?e[n]=this.totals[n]/this.seen:B(()=>{let o=D(ut(1,this.seen),this.totals[n]);e[n]=o,this.totals[n].dispose(),De(e[n])}))}},Ly=class extends ll{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(let n in e)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){let t=[],e=[],n=[];for(let s in this.history){let i=this.history[s];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){let u=i[a];t.push(u.data()),e.push(s),n.push(a)}}let o=await Promise.all(t);for(let s=0;s<o.length;++s)this.history[e[s]][n[s]].dispose(),this.history[e[s]][n[s]]=o[s][0]}},My=class extends ll{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||yh,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=h8),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");y.isNumber(this.yieldEvery)&&(this.maybeWait=I$(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){let o=[];this.yield!=null&&(await Ki(n),o.push(this.yield(t,e,n))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await Ki(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){let n=[];this.epochEnd!=null&&(await Ki(e),n.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){this.batchBegin!=null&&(await Ki(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){let n=[];this.batchEnd!=null&&(await Ki(e),n.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):y.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){this.trainBegin!=null&&(await Ki(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await Ki(t),await this.trainEnd(t))}};function zy(r,t){return r==null&&(r={}),r instanceof ll?[r]:Array.isArray(r)&&r[0]instanceof ll?r:ye(r).map(n=>new My(n,t))}var xn=class{constructor(){}static registerCallbackConstructor(t,e){y.assert(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),xn.checkForDuplicate(e),xn.constructors[t]==null&&(xn.constructors[t]=[]),xn.constructors[t].push(e)}static checkForDuplicate(t){for(let e in xn.constructors)xn.constructors[+e].forEach(o=>{if(o===t)throw new z("Duplicate callback constructor.")})}static clear(){xn.constructors={}}static createCallbacks(t){let e=[];for(let n in xn.constructors){let o=+n;t>=o&&e.push(...xn.constructors[o])}return e.map(n=>new n)}};xn.constructors={};function By(r,t,e,n,o,s,i,a,u){let l=new Ly,c=[new RS,...xn.createCallbacks(t)];r!=null&&c.push(...r),c.push(l);let p=new Py(c);return p.setParams({epochs:e,initialEpoch:n,samples:o,steps:s,batchSize:i,verbose:t,doValidation:a,metrics:u}),{callbackList:p,history:l}}function yn(r,t={},e=!1){return Hi(r,Q.SerializationMap.getMap().classNameMap,t,"layer",e)}function Nh(r,t){return B(()=>{r.dtype!=="float32"&&(r=J(r,"float32"));let e=mt(cc(r),t,!0),n=yo(e.shape,ur()),o=Se(Sn(e,n));return ut(r,o)})}function ji(r,t){return B(()=>Ne(cc(lt(t,r)),-1))}function Gm(r,t){return B(()=>Ne(Ee(lt(t,r)),-1))}function du(r,t){return B(()=>{let e=lt(r,t),n=vr(Ee(r),ur(),Number.MAX_VALUE),o=Ee(ut(e,n));return D(100,Ne(o,-1))})}function g8(r,t){return B(()=>{let e=vr(t,ur(),Number.MAX_VALUE),n=Nr(Y(1,e)),o=vr(r,ur(),Number.MAX_VALUE),s=Nr(Y(1,o));return Ne(cc(lt(n,s)),-1)})}function x8(r,t){return B(()=>{let e=Sn(0,lt(1,D(r,t)));return Ne(cc(e),-1)})}function y8(r,t){return B(()=>{let e=Sn(0,lt(1,D(r,t)));return Ne(e,-1)})}function b8(r,t){return B(()=>{let e=mt(D(r,t),-1),n=Sr(D(lt(1,r),t),-1);return Sn(0,Y(1,lt(n,e)))})}function w8(r,t){return B(()=>{let e=Math.log(2),n=lt(t,r),o=lt(Y(n,Vs(D(-2,n))),e);return Ne(o,-1)})}function bc(r,t,e=!1){return B(()=>{if(e)t=au(t);else{let n=mt(t,t.shape.length-1,!0);t=ut(t,n)}return t=vr(t,ur(),1-ur()),qt(mt(D(J(r,"float32"),Nr(t)),t.shape.length-1))})}function Wm(r,t,e=!1){return B(()=>{let n=J(Li(R$(r)),"int32");t=vr(t,ur(),1-ur());let o=t.shape,s=R(Bi(n,o[o.length-1]),o);return bc(s,t,e)})}function C8(r,t){if(!y.arraysEqual(r.shape,t.shape))throw new z(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(t.shape)}`);return B(()=>{let e=Or(t),n=qt(Ee(t));return Y(lt(e,D(t,r)),ru(sr(n)))})}function Um(r,t){return B(()=>{let e;return e=vr(t,ur(),1-ur()),e=Nr(ut(e,lt(1,e))),Ne(C8(r,e),-1)})}function I8(r,t){return B(()=>{let e=vr(r,ur(),1),n=vr(t,ur(),1);return mt(D(r,Nr(ut(e,n))),-1)})}function v8(r,t){return B(()=>{let e=Nr(Y(ur(),t));return Ne(lt(t,D(r,e)),-1)})}function kh(r,t){return B(()=>{let e=Nh(r,-1),n=Nh(t,-1),o=D(e,n);return qt(mt(o,-1))})}var Th={meanSquaredError:ji,meanAbsoluteError:Gm,meanAbsolutePercentageError:du,meanSquaredLogarithmicError:g8,squaredHinge:x8,hinge:y8,categoricalHinge:b8,logcosh:w8,categoricalCrossentropy:bc,sparseCategoricalCrossentropy:Wm,binaryCrossentropy:Um,kullbackLeiblerDivergence:I8,poisson:v8,cosineProximity:kh};function Vy(r){if(typeof r=="string"){if(r in Th)return Th[r];let t=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new z(t)}else return r}function Eh(r,t){return B(()=>{let e=D(.5,wr(t)),n=tn(Fe(t,e),r.dtype);return Ne(Dr(r,n),-1)})}function _h(r,t){return B(()=>tn(Dr(Ai(r,-1),Ai(t,-1)),"float32"))}function J$(r,t){return B(()=>J(mt(Fr(Dr(r,1),Dr(t,1))),"float32"))}function S8(r,t){return B(()=>J(mt(Fr(Dr(r,1),Dr(t,0))),"float32"))}function N8(r,t){return B(()=>J(mt(Fr(Dr(r,0),Dr(t,1))),"float32"))}function FS(r,t){return B(()=>{let e=J$(r,t),n=N8(r,t),o=Y(e,n);return J(_e(Fe(o,0),ut(e,o),0),"float32")})}function Q$(r,t){return B(()=>{let e=J$(r,t),n=S8(r,t),o=Y(e,n);return J(_e(Fe(o,0),ut(e,o),0),"float32")})}function Wy(r,t){return Um(r,t)}function Uy(r,t){return r.rank===t.rank&&(r=zn(r,[r.rank-1])),t=Ai(t,-1),t.dtype!==r.dtype&&(t=J(t,r.dtype)),J(Dr(r,t),"float32")}var T8=ji,k8=ji,E8=Gm,_8=Gm,A8=du,$8=du,Ah=bc,D8=kh,OS=Wm,Gy={binaryAccuracy:Eh,categoricalAccuracy:_h,precision:FS,categoricalCrossentropy:Ah,sparseCategoricalCrossentropy:OS,mse:T8,MSE:k8,mae:E8,MAE:_8,mape:A8,MAPE:$8,cosine:D8};function tD(r){if(typeof r=="string"&&r in Gy)return Gy[r];if(typeof r!="string"&&r!=null)return r;throw new z(`Unknown metric ${r}`)}function $h(r){if(so(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let t;for(let e of Object.keys(Th))if(Th[e]===r){t=e;break}if(t!==void 0)return t;for(let e of Object.keys(Gy))if(Gy[e]===r){t=e;break}return t!==void 0?t:r.name}}function rD(r){let t={Adagrad:()=>lc.adagrad(.01),Adadelta:()=>lc.adadelta(1,.95,ur()),Adam:()=>lc.adam(.001,.9,.999,ur()),Adamax:()=>lc.adamax(.002,.9,.999,ur(),0),RMSProp:()=>lc.rmsprop(.001,.9,0,ur()),SGD:()=>lc.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,r in t)return t[r]();throw new z(`Unknown Optimizer ${r}`)}function LS(r,t,e=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!PS(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){let n=JSON.stringify(r);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${1048576}.`)}}function PS(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let t=Object.keys(r);for(let e of t)if(typeof e!="string"||!PS(r[e]))return!1;return!0}else if(Array.isArray(r)){for(let t of r)if(!PS(t))return!1;return!0}else return!1;else{let t=typeof r;return t==="string"||t==="number"||t==="boolean"}}function nD(r,t,e,n=console.log){let o=O8(r),s=["Layer (type)","Input Shape","Output shape","Param #"];o?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(c=>Math.floor(t*c)));let i;if(!o){s.push("Receives inputs"),i=[];for(let c in r.nodesByDepth)i.push(...r.nodesByDepth[c])}n("_".repeat(t)),Hy(s,e,n),n("=".repeat(t));let a=r.layers;for(let c=0;c<a.length;++c)o?P8(a[c],e,n):L8(a[c],e,i,n),n((c===a.length-1?"=":"_").repeat(t));r.checkTrainableWeightsConsistency();let u=F8(r),l=Pm(r.nonTrainableWeights);n(`Total params: ${u+l}`),n(`Trainable params: ${u}`),n(`Non-trainable params: ${l}`),n("_".repeat(t))}function F8(r){let t;return r.collectedTrainableWeights!=null?t=Pm(r.collectedTrainableWeights):t=Pm(r.trainableWeights),t}function O8(r){let t=!0,e=[],n=[];for(let o in r.nodesByDepth)e.push(r.nodesByDepth[o]);for(let o of e){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){t=!1;break}n.push(...o)}if(t)for(let o of r.layers){let s=!1;for(let i of o.inboundNodes)if(n.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function Hy(r,t,e=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,t[o]),n+=" ".repeat(t[o]-n.length);e(n)}function P8(r,t,e){let n,o;try{o=r.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch(u){o="multiple"}try{n=JSON.stringify(r.outputShape)}catch(u){n="multiple"}let s=r.name,i=r.getClassName(),a=[`${s} (${i})`,o,n,r.countParams().toString()];Hy(a,t,e)}function L8(r,t,e,n){let o,s;try{s=r.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch(p){s="multiple"}try{o=JSON.stringify(r.outputShape)}catch(p){o="multiple"}let i=[];for(let p of r.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(p)===-1))for(let m=0;m<p.inboundLayers.length;++m){let f=p.inboundLayers[m].name,d=p.nodeIndices[m],h=p.tensorIndices[m];i.push(`${f}[${d}][${h}]`)}let a=r.name,u=r.getClassName(),l=i.length===0?"":i[0],c=[`${a} (${u})`,s,o,r.countParams().toString(),l];Hy(c,t,n);for(let p=1;p<i.length;++p)Hy(["","","","",i[p]],t,n)}function oD(r,t,e){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&t===0&&typeof e=="string"}function wc(r,t){if(r===null)return null;if(typeof r=="string")return ol(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];oD(t,o,s)?e.push(s):e.push(wc(s,t))}return e}else{let e={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")e[n]=o;else{let s=ol(n);e[s]=wc(o,s)}}return e}}function qy(r,t){if(r==null)return null;if(typeof r=="string")return So(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];oD(t,o,s)?e.push(s):e.push(qy(s,t))}return e}else{let e={};for(let n of Object.keys(r)){let o=r[n],s=So(n);(n==="name"||n==="className")&&typeof o=="string"?e[s]=o:e[s]=qy(o,n)}return e}}var Hm="4.2.0";var Bn=class extends kt{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=pu(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],No(this.inputs).length!==this.inputs.length)throw new z(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);No(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let w=b.sourceLayer,C=b.nodeIndex,N=b.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(C),this.outputLayersTensorIndices.push(N)}for(let b of this.inputs){let w=b.sourceLayer,C=b.nodeIndex,N=b.tensorIndex;so(C===0,"input layer has >1 nodes"),so(N===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(C),this.inputLayersTensorIndices.push(N)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let w=this.inputLayers[b];if(!(w instanceof Ks))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let e={},n={},o={},s={},i={},a=[],u=(b,w,C,N,_,A)=>{(N==null||_==null||A==null)&&(N=b.sourceLayer,_=b.nodeIndex,A=b.tensorIndex);let $=N.inboundNodes[_];if(C.indexOf($)!==-1)throw new Kr(`The tensor ${b.name} at layer "${N.name}" is part of a cycle.`);if(w.indexOf($)!==-1)return;this.containerNodes.add(Bn.nodeKey(N,_)),N.id in i||(i[N.id]=Object.keys(i).length),C.indexOf($)===-1&&C.push($);let F=$.inboundLayers.length;for(let P=0;P<F;P++){let V=$.inputTensors[P],G=$.inboundLayers[P],W=$.nodeIndices[P],q=$.tensorIndices[P];u(V,w,C,G,W,q)}for(w.push($);C.indexOf($)>=0;)C.splice(C.indexOf($),1);a.push($)},l=[],c=[];for(let b of this.outputs)u(b,l,c);let p=a.slice().reverse();for(let b of p){n[b.id]=b,b.id in e||(e[b.id]=0);let w=e[b.id],C=o[b.outboundLayer.id]==null?0:o[b.outboundLayer.id];w=Math.max(w,C),o[b.outboundLayer.id]=w,s[b.outboundLayer.id]=b.outboundLayer,e[b.id]=w;for(let N=0;N<b.inboundLayers.length;N++){let _=b.inboundLayers[N],A=b.nodeIndices[N],$=_.inboundNodes[A],F=e[$.id]==null?0:e[$.id];e[$.id]=Math.max(w+1,F),n[$.id]=$}}let m={};for(let b in e){let w=e[b];w in m||(m[w]=[]),m[w].push(n[b])}let f={};for(let b in o){let w=o[b];w in f||(f[w]=[]),f[w].push(s[b])}let d=Object.keys(f).map(b=>parseInt(b,10)).sort(wh);this.layers=[];for(let b of d){let w=f[b];w.sort((C,N)=>{let _=i[C.id],A=i[N.id];return _<A?-1:_>A?1:0});for(let C of w)C instanceof Bn&&this.internalContainerRefs.push(C),this.layers.push(C)}this.layersByDepth=f,d=Object.keys(m).map(b=>parseInt(b,10)).sort(wh);let h=this.inputs.slice(),g=[];for(let b of d)for(let w of m[b]){let C=w.outboundLayer;if(C!=null){for(let N of w.inputTensors)if(h.indexOf(N)===-1)throw new Kr(`Graph disconnected: cannot obtain value for tensor ${N} at layer "${C.name}". The following previous layers were accessed without issue: ${g}`);for(let N of w.outputTensors)h.push(N);g.push(C.name)}}this.nodesByDepth=m;let x=this.layers.map(b=>b.name);for(let b of x){let w=x.filter(C=>C===b).length;if(w!==1)throw new Kr(`The name "${b}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new al({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(let e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(n=>n.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new z("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(let e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){let e=[];for(let n of this.layers)e.push(...n.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){let n={},o=0;for(let i of this.layers)for(let a of i.weights){if(n[a.originalName]!=null)throw new z(`Duplicate weight name: ${a.originalName}`);n[a.originalName]=a,o++}let s=[];for(let i in t){let a=i;if(n[i]==null){let u=i.split("/");a=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(n[a]!=null)s.push([n[a],t[i]]);else if(e)throw new z(`Provided weight data has no target variable: ${i}`);delete n[a]}if(e){let i=[];for(let a in n)i.push(a);if(i.length>0)throw new z(`${i.length} of ${o} weights are not set: ${i}`)}Lm(s)}updatedConfig(){let t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${Hm}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){let n=qy(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return B(()=>{t=ye(t);let n=new Eo;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],t[o]);return xc(this.outputs,n,e)})}computeMask(t,e){return B(()=>{t=ye(t);let n;return e==null?n=vo(null,t.length):n=ye(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){let e=Om(t);if(e.length!==this.inputLayers.length)throw new z(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let a=0;a<e.length;a++){let u=this.inputLayers[a],l=e[a],c=u.name+"_0_0";n[c]=l}let o=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(wh);if(o.length>1)for(let a of o){let u=this.nodesByDepth[a];for(let l of u){let c=l.outboundLayer;if(this.inputLayers.map(h=>h.id).indexOf(c.id)!==-1)continue;let p=[];for(let h=0;h<l.inboundLayers.length;h++){let g=l.inboundLayers[h],x=l.nodeIndices[h],b=l.tensorIndices[h],w=`${g.name}_${x}_${b}`,C=n[w];p.push(C)}let m=c.computeOutputShape(Tr(p)),f=Om(m),d=c.inboundNodes.indexOf(l);for(let h=0;h<f.length;h++){let g=`${c.name}_${d}_${h}`;n[g]=f[h]}}}let s=[],i=[];for(let a=0;a<this.outputLayers.length;a++){let u=this.outputLayers[a],l=this.outputLayersNodeIndices[a],c=this.outputLayersTensorIndices[a],p=`${u.name}_${l}_${c}`;i.push(p)}for(let a=0;a<i.length;a++){let u=i[a];so(u in n),s.push(n[u])}return Tr(s)}runInternalGraph(t,e){e==null&&(e=vo(null,t.length));let n={};for(let u=0;u<this.inputs.length;++u){let l=this.inputs[u],c=t[u],p=e[u];n[l.id]=[c,p]}let o=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(wh);for(let u of o){let l=this.nodesByDepth[u];for(let c of l){let p=c.outboundLayer,m=c.inputTensors,f=c.outputTensors,d=new Array;for(let h of m)h.id in n&&d.push(n[h.id]);if(d.length===m.length){let h={},g,x,b,w;if(c.callArgs!=null&&(h=c.callArgs),d.length===1){let[C,N]=d[0];h.mask==null&&(h.mask=N),b=ye(p.call(C,h)),w=ye(p.computeMask(C,N)),g=[C],x=[N]}else g=d.map(C=>C[0]),x=d.map(C=>C[1]),h.mask==null&&(h.mask=x),b=ye(p.call(g,h)),w=ye(p.computeMask(g,x));if(p.activityRegularizer)throw new vt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let C=0;C<f.length;++C){let N=f[C],_=b[C],A=w[C];n[N.id]=[_,A]}}}}let s=[],i=[],a=[];for(let u of this.outputs){so(u.id in n,`Could not compute output ${u.name} : ${u.id}`);let[l,c]=n[u.id];a.push(l.shape),s.push(l),i.push(c)}return[s,i,a]}buildNodeConversionMap(t){let e={},n;for(let o of this.layers){n=o instanceof Bn?1:0;for(let s=0;s<o.inboundNodes.length;s++){let i=Bn.nodeKey(o,s);this.containerNodes.has(i)&&(e[i]=n,n+=1)}}return e}getLayer(t,e){if(e!=null){if(this.layers.length<=e)throw new z(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}else if(t==null)throw new z("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===t)return n;throw new z(`No such layer: ${t}`)}calculateLosses(){return B(()=>{let t=[];for(let e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){let o=Bn.nodeKey(e,n);this.containerNodes.has(o)&&t.push(...e.calculateLosses())}return t})}getConfig(){let t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(let i of this.layers){let a=i.getClassName(),u=i.getConfig(),l=[];for(let p=0;p<i.inboundNodes.length;p++){let m=i.inboundNodes[p],f=Bn.nodeKey(i,p),d={};if(this.containerNodes.has(f)){if(m.callArgs)try{JSON.stringify(m.callArgs),d=m.callArgs}catch(h){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),d={}}if(m.inboundLayers.length>0){let h=[];for(let g=0;g<m.inboundLayers.length;g++){let x=m.inboundLayers[g],b=m.nodeIndices[g],w=m.tensorIndices[g],C=Bn.nodeKey(x,b),N=e[C];N==null&&(N=0),h.push([x.name,N,w,d])}l.push(h)}}}let c={};c.name=i.name,c.className=a,c.config=u,c.inboundNodes=l,n.push(c)}t.layers=n;let o=[];for(let i=0;i<this.inputLayers.length;i++){let a=this.inputLayers[i],u=this.inputLayersNodeIndices[i],l=Bn.nodeKey(a,u);if(!this.containerNodes.has(l))continue;let c=e[l];c==null&&(c=0);let p=this.inputLayersTensorIndices[i];o.push([a.name,c,p])}t.inputLayers=o;let s=[];for(let i=0;i<this.outputLayers.length;i++){let a=this.outputLayers[i],u=this.outputLayersNodeIndices[i],l=Bn.nodeKey(a,u);if(!this.containerNodes.has(l))continue;let c=e[l];c==null&&(c=0);let p=this.outputLayersTensorIndices[i];s.push([a.name,c,p])}return t.outputLayers=s,t}static fromConfig(t,e,n={},o=!1){let s={},i={};function a(g,x){g.name in i?i[g.name].push(x):i[g.name]=[x]}function u(g,x){let b=[],w;for(let C of x){let N=C[0],_=C[1],A=C[2];if(w=C[3]==null?{}:C[3],!(N in s)){a(g,x);return}let $=s[N];if($.inboundNodes.length<=_){a(g,x);return}let F=$.inboundNodes[_];b.push(F.outputTensors[A])}b.length>0&&g.apply(Tr(b),w)}function l(g){let x=g.name,b=yn(g,e.customObjects!=null?e.customObjects:{});b.setFastWeightInitDuringBuild(o),s[x]=b,g.inboundNodes.forEach(C=>{if(!(C instanceof Array))throw new z(`Corrupted configuration, expected array for nodeData: ${C}`);a(b,C)})}let c=e.name,p=e.layers;for(let g of p)l(g);for(;!w$(i);)for(let g of p){let x=s[g.name];if(x.name in i){let b=i[x.name];delete i[x.name];for(let w of b)u(x,w)}}let m=[],f=[],d=e.inputLayers;for(let g of d){let x=g[0],b=g[1],w=g[2];so(x in s);let N=s[x].inboundNodes[b].outputTensors;m.push(N[w])}let h=e.outputLayers;for(let g of h){let x=g[0],b=g[1],w=g[2];so(x in s);let N=s[x].inboundNodes[b].outputTensors;f.push(N[w])}return new t({inputs:m,outputs:f,name:c})}get stateful(){if(this._stateful)throw new z("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let t of this.layers)if(t.stateful)return!0;return!1}resetStates(){B(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}};function M8(r,t,e){let n=t.length;if(r==null||Array.isArray(r)&&r.length===0)return t.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&t[0]in r?[r[t[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${e} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return t.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${e} must be either an array with ${n} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(r)}`)}function Ky(r,t){return M8(r,t,"classWeight")}async function jy(r,t,e,n){if(t!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){let o=B(()=>{if(r.shape.length===1)return an(r);if(r.shape.length===2){if(r.shape[1]>1)return Ai(r,1);if(r.shape[1]===1)return R(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await o.data());Nt(o);let i=[];return s.forEach(a=>{if(e[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(e[a])}),Ke(i,"float32")}else return null}function sD(r,t){return D(r,t)}var z8=32;function lD(r,t){let e,n,o=t;e=o.xs,n=o.ys,y.assert(e!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=iD("input",r.inputNames,e),i=iD("output",r.outputNames,n),a=s[0].shape[0];y.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),y.assert(i.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let u=0;u<s.length;u++)y.assert(s[u].shape[0]===a,()=>`Batch size mismatch: input ${r.inputNames[u]} has ${s[u].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);for(let u=0;u<i.length;u++)y.assert(i[u].shape[0]===a,()=>`Batch size mismatch: output ${r.outputNames[u]} has ${i[u].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);return{xs:s,ys:i}}function iD(r,t,e){if(e instanceof Ft)return[e];if(Array.isArray(e))return y.assert(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${r} keys ${t}.`),e;{let n=[];for(let o of t){if(e[o]==null)throw new z(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(e[o])}return n}}function B8(r){if(r.length===3)throw new vt("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function uD(r,t,e){let n=e.batchesPerEpoch!=null;if(y.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),y.assert(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),y.assert(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),y.assert(!n||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),y.assert(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=e.validationData!=null,s,i;if(o)if(aD(e.validationData))y.assert(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{let g=B8(e.validationData);s=g.xs,i=g.ys}let a=r.makeTrainFunction(),u=r.getDedupedMetricsNames(),l;o?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();let c=zy(e.callbacks,e.yieldEvery),p=e.verbose==null?1:e.verbose,{callbackList:m,history:f}=By(c,p,e.epochs,null,null,V8(t,e),null,o,l);m.setModel(r),r.history=f,await m.onTrainBegin(),r.stopTraining_=!1;let d=e.initialEpoch==null?0:e.initialEpoch,h=await t.iterator();for(;d<e.epochs;){let g={};await m.onEpochBegin(d);let x=0,b=0;for(n||(h=await t.iterator());!n||x<e.batchesPerEpoch;){let w=await h.next();if(n&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){let{xs:C,ys:N}=lD(r,w.value),_={};_.batch=b,_.size=C[0].shape[0],await m.onBatchBegin(b,_);let A=[];if(e.classWeight!=null){let P=Ky(e.classWeight,r.outputNames);for(let V=0;V<P.length;++V)A.push(await jy(N[V],null,P[V]))}let $=C.concat(N).concat(A),F=a($);Nt($);for(let P=0;P<u.length;++P){let V=u[P],G=F[P];_[V]=G,De(G)}await m.onBatchEnd(b,_),Oy(_),b++,x++}if(n?x>=e.batchesPerEpoch:w.done){if(o){let C;aD(e.validationData)?C=ye(await r.evaluateDataset(e.validationData,{batches:e.validationBatches})):C=ye(r.evaluate(s,i,{batchSize:e.validationBatchSize==null?z8:e.validationBatchSize,verbose:0}));for(let N=0;N<r.metricsNames.length;++N)g[`val_${r.metricsNames[N]}`]=C[N]}break}if(r.stopTraining_)break}if(await m.onEpochEnd(d,g),d++,r.stopTraining_)break}return await m.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function V8(r,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(r.size)&&(e=r.size),e}function aD(r){return typeof r.iterator=="function"}function G8(r){return typeof r.next=="function"}async function cD(r,t,e){e=e||{};let n=e.batches!=null,o=r.testFunction,s=[];if(e.verbose>0)throw new vt("Verbose mode is not implemented yet.");y.assert(!n||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);let i=G8(t)?t:await t.iterator(),a=0,u=0;for(;!n||u<e.batches;){let l=await i.next();if(s=B(()=>{if(l.value){let{xs:c,ys:p}=lD(r,l.value),m=c.concat(p),f=B(()=>o(m));if(Nt(m),u===0)for(let h=0;h<f.length;++h)s.push(pt(0));let d=m[0].shape[0];for(let h=0;h<f.length;++h){let g=f[h],x=s[h];s[h]=B(()=>Y(s[h],D(d,g))),u>0&&Nt(x)}Nt(f),a+=d,++u}return s}),l.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<s.length;++l){let c=s[l];s[l]=ut(s[l],a),Nt(c)}return Tr(s)}function Xy(r){y.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function qm(r,t,e){return r==null?[null]:Array.isArray(r)?r.map(n=>sl(n,t,e-t)):sl(r,t,e-t)}function Yy(r,t){return B(()=>r==null?null:Array.isArray(r)?r.map(e=>Yy(e,t)):_y(r,t.dtype==="int32"?t:J(t,"int32")))}function Zy(r,t){let e=[],n=0,o=null;for(;n<r;)o=n+t,o>=r&&(o=r),e.push([n,o]),n=o;return e}function MS(r){let t=[];r instanceof Ft&&(r=[r]);for(let e=0;e<r.length;++e){let n=r[e];if(n.rank===1)t.push(il(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function _o(r,t){if(r==null)return;let e=[];if(t instanceof Ft)e.push(t.id);else if(Array.isArray(t))t.forEach(o=>e.push(o.id));else if(t!=null)for(let o in t){let s=t[o];e.push(s.id)}let n=[];if(r instanceof Ft)e.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{e.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];e.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function W8(r){return r instanceof Ft}function zS(r){return Array.isArray(r)}function pD(r){return!W8(r)&&!zS(r)}function mD(r,t,e,n=!0,o=""){if(t==null||t.length===0){if(r!=null){let i=!1;if(zS(r)&&r.length>0)i=!0;else if(pD(r)){for(let a in r)if(r.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new z(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return t.map(i=>null);let s;if(pD(r)){r=r,s=[];for(let i of t){if(r[i]==null)throw new z(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(r[i])}}else if(zS(r)){if(r=r,r.length!==t.length)throw new z(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,t.length>1)throw new z(`The model ${o} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=MS(s),e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;let a=s[i];if(a.shape.length!==e[i].length)throw new z(`Error when checking ${o}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${a.shape}`);for(let u=0;u<e[i].length;++u){if(u===0&&!n)continue;let l=a.shape[u],c=e[i][u];if(c!=null&&c>=0&&l!==c)throw new z(`${o} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${o} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return s}function U8(r,t,e){let n=No(r.map(s=>s.shape[0]));n.sort();let o=No(t.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new z(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new z(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!y.arraysEqual(n,o))throw new z(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function H8(r,t,e){let n=[ji,Um,bc];for(let o=0;o<r.length;++o){let s=r[o],i=t[o],a=e[o];if(i!=null){if(i===bc&&s.shape[s.shape.length-1]===1)throw new z(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(i)!==-1){let u=s.shape.slice(1),l=a.slice(1);for(let c=0;c<u.length;++c){let p=u[c],m=l[c];if(m!=null&&p!==m)throw new z(`A target Tensor with shape ${s.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function fD(r,t,e,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==t.length)throw new z(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(t.length>1)throw new z(`The model expects ${t.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;let a=s[i];if(a.shape.length!==e[i].length)throw new z(`Error when checking ${o}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let u=0;u<e[i].length;++u){if(u===0&&!n)continue;let l=a.shape[u],c=e[i][u];if(c!=null&&c!==l)throw new z(`Error when checking ${o}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function q8(r,t){if(r==null||Array.isArray(r)&&r.length===0)return t.map(n=>[]);let e;if(typeof r=="string"||typeof r=="function")e=[r];else if(Array.isArray(r)||typeof r=="object")e=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(e))return t.map(n=>e);{let n=[];for(let o of t){let s=e.hasOwnProperty(o)?e[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var K8="layers-model",Vn=class extends Bn{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new z("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");nD(this,t,e,n)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=rD(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Hr))throw new z("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(let i in t.loss)if(this.outputNames.indexOf(i)===-1)throw new z(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(let i of this.outputNames)t.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),e.push(Vy(t.loss[i]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new z(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(a=>Vy(a))}else{let i=Vy(t.loss);this.outputs.forEach(a=>{e.push(i)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){let a=this.internalOutputShapes[i],u=this.outputNames[i];this.feedOutputNames.push(u),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}let n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Hs("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(n.indexOf(i)!==-1)continue;let a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});let o=q8(t.metrics,this.outputNames),s=(i,a,u)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([u,i])};Hs("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(n.indexOf(i)!==-1)continue;let a=o[i];(l=>{let c="",p,m,f;for(let d of l){if(typeof d=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(d)!==-1){let g=this.internalOutputShapes[i];g[g.length-1]===1||this.lossFunctions[i]===Um?["accuracy","acc"].indexOf(d)!==-1?m=Eh:["crossentropy","ce"].indexOf(d)!==-1&&(m=Wy):this.lossFunctions[i]===Wm?["accuracy","acc"].indexOf(d)!==-1?m=Uy:["crossentropy","ce"].indexOf(d)!==-1&&(m=OS):["accuracy","acc"].indexOf(d)!==-1?m=_h:["crossentropy","ce"].indexOf(d)!==-1&&(m=Ah);let x;["accuracy","acc"].indexOf(d)!==-1?x="acc":["crossentropy","ce"].indexOf(d)!==-1&&(x="ce"),f=m,p=c+x}else f=tD(d),p=c+$h(d);let h;Hs(p,()=>{h=f}),s(i,p,h)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){let o=n.batchSize==null?32:n.batchSize;Xy(o);let s=!0,i=this.standardizeUserDataXY(t,e,s,o);try{let a=i[0].concat(i[1]);this.makeTestFunction();let u=this.testFunction,l=this.testLoop(u,a,o,n.verbose,n.steps);return Tr(l)}finally{_o(i[0],t),_o(i[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),cD(this,t,e)}checkNumSamples(t,e,n,o="steps"){let s;if(n!=null){if(s=null,e!=null)throw new z(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?s=t[0].shape[0]:s=t.shape[0];else throw new z(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return s}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new z("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(e),o=n?e:[e],s=this.retrieveSymbolicTensors(o),i=new Eo;if(t instanceof Ft&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new z(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)i.add(this.inputs[u],t[u])}else for(let u of this.inputs){let l=t[u.name];if(l==null)throw new z(`No value is provided for the model's input ${u.name}`);i.add(u,l)}let a=xc(s,i);return n?a:a[0]}retrieveSymbolicTensors(t){let e=vo(null,t.length),n=t.length;for(let o of this.layers){let s=Array.isArray(o.output)?o.output:[o.output],i=s.map(a=>a.name);for(let a=0;a<t.length;++a){let u=i.indexOf(t[a]);if(u!==-1&&(e[a]=s[u],n--),n===0)break}if(n===0)break}if(n>0){let o=[];throw e.forEach((s,i)=>{s==null&&o.push(t[i])}),new z(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return e}predictLoop(t,e=32,n=!1){return B(()=>{let o=this.checkNumSamples(t);if(n)throw new vt("Verbose predictLoop() is not implemented yet.");let s=Zy(o,e),i=this.outputs.map(a=>[]);for(let a=0;a<s.length;++a)B(()=>{let l=s[a][0],c=s[a][1],p=qm(t,l,c),m=[];if(Array.isArray(p))for(let d=0;d<p.length;++d)m.push({key:this.inputs[d],value:p[d]});else m.push({key:this.inputs[0],value:p});let f=new Eo(m);return xc(this.outputs,f)}).forEach((l,c)=>i[c].push(l));return Tr(i.map(a=>oe(a,0)))})}predict(t,e={}){let n=MS(t);fD(n,this.inputNames,this.feedInputShapes,!1);try{let o=e.batchSize==null?32:e.batchSize;return Xy(o),this.predictLoop(n,o)}finally{_o(n,t)}}predictOnBatch(t){fD(t,this.inputNames,this.feedInputShapes,!0);let e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,o){if(this.optimizer_==null)throw new Kr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let i=0;i<this.feedOutputShapes.length;++i){let a=this.feedOutputShapes[i];this.feedLossFns[i]===Wm?s.push(a.slice(0,a.length-1).concat([1])):s.push(a)}if(t=mD(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=mD(e,this.feedOutputNames,s,!1,"target"),U8(t,e,null),H8(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&t[0].shape[0]%o!==0)throw new z(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,o,s=!0,i){let[a,u]=this.standardizeUserDataXY(t,e,s,i);if(n!=null)throw new Error("sample weight is not supported yet.");let l=null;if(o!=null){let c=Ky(o,this.outputNames);l=[];for(let p=0;p<c.length;++p)l.push(await jy(u[p],null,c[p]))}return[a,u,l]}testLoop(t,e,n,o=0,s){return B(()=>{let i=this.checkNumSamples(e,n,s,"steps"),a=[];if(o>0)throw new vt("Verbose mode is not implemented yet.");if(s!=null)throw new vt("steps mode in testLoop() is not implemented yet");{let u=Zy(i,n),l=Ke(fn(0,i));for(let c=0;c<u.length;++c){let p=u[c][0],m=u[c][1],f=sl(l,p,m-p),d=Yy(e,f),h=t(d);if(c===0)for(let g=0;g<h.length;++g)a.push(pt(0));for(let g=0;g<h.length;++g){let x=h[g];a[g]=Y(a[g],D(m-p,x))}}for(let c=0;c<a.length;++c)a[c]=ut(a[c],i)}return a})}getDedupedMetricsNames(){let t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){let o=t[n],s=o;if(NS(t,o)>1){let i=NS(t.slice(0,n),o);s+=`_${i}`}e.push(s)}return e}makeTrainFunction(){return t=>{let e=[],n=t.slice(0,this.inputs.length),o=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{let p=[];for(let h=0;h<this.inputs.length;++h)p.push({key:this.inputs[h],value:n[h]});let m=new Eo(p),f=xc(this.outputs,m,{training:!0}),d;for(let h=0;h<this.lossFunctions.length;++h){let g=this.lossFunctions[h],x=g(o[h],f[h]);s[h]!=null&&(x=sD(x,s[h]));let b=Ne(x);e.push(b),h===0?d=x:d=Y(d,x)}for(let h=0;h<this.metricsTensors.length;++h){let g;if(this.outputs.length>1&&h<this.outputs.length)g=e[h];else{let x=this.metricsTensors[h][0],b=this.metricsTensors[h][1];g=Ne(x(o[b],f[b]))}De(g),i.push(g)}return d=Ne(d),this.calculateLosses().forEach(h=>{d=Y(d,h)}),d},u=this.collectedTrainableWeights.map(p=>p.read()),l=!0;return[this.optimizer_.minimize(a,l,u)].concat(i)}}makeTestFunction(){this.testFunction=t=>B(()=>{let e=[],n,o=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let l=0;l<this.inputs.length;++l)i.push({key:this.inputs[l],value:o[l]});let a=new Eo(i),u=xc(this.outputs,a);for(let l=0;l<this.lossFunctions.length;++l){let c=this.lossFunctions[l],p=Ne(c(s[l],u[l]));l===0?n=p:n=Y(n,p),e.push(n)}for(let l=0;l<this.metricsTensors.length;++l){let c=this.metricsTensors[l][0],p=this.metricsTensors[l][1],m=Ne(c(s[p],u[p]));e.push(m)}return e})}async fit(t,e,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let o,s,i,a,u,l,c,p,m;try{let f=n.batchSize==null?32:n.batchSize;Xy(f);let d=!1,h=await this.standardizeUserData(t,e,n.sampleWeight,n.classWeight,d,f);o=h[0],s=h[1],m=h[2];let g=!1,x;if(n.validationData!=null&&n.validationData.length>0){if(g=!0,n.validationData.length===2)u=n.validationData[0],l=n.validationData[1];else throw n.validationData.length===3?new vt("validationData including sample weights is not supported yet."):new z(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let F=!0,P=await this.standardizeUserData(u,l,null,null,F,f);c=P[0],p=P[1],x=c.concat(p)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){g=!0;let F=Math.floor(o[0].shape[0]*(1-n.validationSplit)),P=o[0].shape[0];c=qm(o,F,P),i=o,o=qm(o,0,F),p=qm(s,F,P),a=s,s=qm(s,0,F),x=c.concat(p)}else n.validationSteps!=null&&(g=!0);let b=o.concat(s).concat(m);this.checkTrainableWeightsConsistency();let w=this.makeTrainFunction(),C=this.getDedupedMetricsNames(),N,_;g?(this.makeTestFunction(),N=this.testFunction,_=C.slice().concat(C.map(F=>"val_"+F))):(N=null,x=[],_=C.slice());let A=zy(n.callbacks,n.yieldEvery);return await this.fitLoop(w,b,C,f,n.epochs,n.verbose,A,N,x,n.shuffle,_,n.initialEpoch,null,null)}finally{this.isTraining=!1,_o(o,t),_o(s,e),_o(i,t),_o(a,e),_o(c,u),_o(p,l),m!=null&&Nt(m)}}async fitLoop(t,e,n,o,s,i,a,u,l,c,p,m,f,d){o==null&&(o=32),s==null&&(s=1),c==null&&(c=!0),m==null&&(m=0);let h=!1;if(u!=null&&l!=null&&(h=!0),d!=null&&(h=!0,f==null))throw new z("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=this.checkNumSamples(e,o,f,"steps_per_epoch"),x;g!=null&&(x=fn(0,g)),i==null&&(i=1);let{callbackList:b,history:w}=By(a,i,s,m,g,f,o,h,p);b.setModel(this),this.history=w,await b.onTrainBegin(),this.stopTraining_=!1;for(let C=m;C<s;++C){await b.onEpochBegin(C);let N={};if(f!=null)throw new vt("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new vt("batch shuffling is not implemneted yet");c&&y.shuffle(x);let _=Ke(x),A=Zy(g,o);for(let $=0;$<A.length;++$){let F={};if(await b.onBatchBegin($,F),B(()=>{let P=A[$][0],V=A[$][1],G=sl(_,P,V-P);F.batch=$,F.size=V-P;let W=Yy(e,G),q=t(W);for(let H=0;H<n.length;++H){let K=n[H],X=q[H];F[K]=X,De(X)}if($===A.length-1&&h){let H=this.testLoop(u,l,o);for(let K=0;K<n.length;++K){let X=n[K],Z=H[K];De(Z),N["val_"+X]=Z}}}),await b.onBatchEnd($,F),Oy(F),this.stopTraining_)break}_.dispose()}if(await b.onEpochEnd(C,N),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return uD(this,t,e)}async trainOnBatch(t,e){let n=await this.standardizeUserData(t,e),o=n[0],s=n[1],a=this.makeTrainFunction()(o.concat(s)),u=[];for(let l of a){let c=await l.data();u.push(c[0])}return Nt(a),_o(n[0],t),_o(n[1],e),Tr(u)}getNamedWeights(t){let e=[],n=t!=null&&t.trainableOnly,o=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let i=0;i<o.length;++i)n&&!o[i].trainable||e.push({name:o[i].originalName,tensor:s[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){let t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let e=oh().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-oh().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=So(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>So(e))}else{let e=Object.keys(this.loss);t={};let n=this.loss;for(let o of e)if(typeof n[o]=="string")t[o]=So(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[So($h(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>So($h(t)));{let t={};for(let e in this.metrics)t[e]=So($h(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let e=wc(t.optimizer_config),n=yn(e),o;if(typeof t.loss=="string")o=ol(t.loss);else if(Array.isArray(t.loss))o=t.loss.map(i=>ol(i));else if(t.loss!=null){o={};for(let i in t.loss)o[i]=ol(t.loss[i])}let s;if(Array.isArray(t.metrics))s=t.metrics.map(i=>ol(i));else if(t.metrics!=null){s={};for(let i in t.metrics)s[i]=ol(t.metrics[i])}this.compile({loss:o,metrics:s,optimizer:n})}async save(t,e){if(typeof t=="string"){let l=Pr.getSaveHandlers(t);if(l.length===0)throw new z(`Cannot find any save handlers for URL '${t}'`);if(l.length>1)throw new z(`Found more than one (${l.length}) save handlers for URL '${t}'`);t=l[0]}if(t.save==null)throw new z("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await Pr.encodeWeights(this.getNamedWeights(e)),o=!1,s=null,a={modelTopology:this.toJSON(s,o),format:K8,generatedBy:`TensorFlow.js tfjs-layers v${Hm}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();let l="optimizer",{data:c,specs:p}=await Pr.encodeWeights(await this.optimizer.getWeights(),l);n.specs.push(...p),n.data=Pr.concatenateArrayBuffers([n.data,c])}return this.userDefinedMetadata!=null&&(LS(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=n.data,a.weightSpecs=n.specs,t.save(a)}setUserDefinedMetadata(t){LS(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}};Vn.className="Model";Q.registerClass(Vn);var Jy=class extends Vn{};Jy.className="Functional";Q.registerClass(Jy);async function dD(r,t){"modelTopology"in r||(r={modelTopology:r}),r=r;let e=r.modelTopology;e.model_config!=null&&(e=e.model_config);let n=wc(e),o=yn(n,t);if(r.weightsManifest!=null){let s=await Pr.loadWeights(r.weightsManifest,r.pathPrefix,o.weights.map(a=>a.originalName)),i={};for(let a of o.weights)i[a.originalName]=s[a.originalName];o.loadWeights(i),Nt(s)}return o}async function hD(r,t){if(t==null&&(t={}),typeof r=="string"){let e=Pr.getLoadHandlers(r,t);if(e.length===0)e.push(Pr.browserHTTPRequest(r,t));else if(e.length>1)throw new z(`Found more than one (${e.length}) load handlers for URL '${r}'`);r=e[0]}return j8(r,void 0,t)}async function j8(r,t,e){if(e==null&&(e={}),r.load==null)throw new z("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let n=await r.load(),o=n.modelTopology;o.model_config!=null&&(o=o.model_config);let s=e.strict==null?!0:e.strict,i=n.weightData!=null&&n.weightSpecs!=null&&s,a=yn(wc(o),t,i),u=n.trainingConfig;if(u!=null&&a.loadTrainingConfig(u),n.userDefinedMetadata!=null&&a.setUserDefinedMetadata(n.userDefinedMetadata),n.weightData!=null){if(n.weightSpecs==null)throw new z("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:l,optimizerWeights:c}=X8(n.weightData,n.weightSpecs);a.loadWeights(l,s),a.optimizer!=null&&c.length>0&&await a.optimizer.setWeights(c),Nt(l),Nt(c.map(p=>p.tensor))}return a}function X8(r,t){let e=Pr.decodeWeights(r,t),n={},o=[];return t.forEach(s=>{s.group==="optimizer"?o.push({name:s.name,tensor:e[s.name]}):n[s.name]=e[s.name]}),{modelWeights:n,optimizerWeights:o}}var Xi=class extends Vn{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:pu("sequential_"),t.layers!=null)for(let e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new z(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){let e=t instanceof Xi||t instanceof Vn,n;if(e){if(n=t,n.outputs.length!==1)throw new z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new z("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new z("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let o=Dy({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(o)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(t.inboundNodes.length!==1)throw new z(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=$S(this.outputs[0])}this.inboundNodes=[],new al({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:vo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{let o=t.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(Bt(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Vn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new Kr("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new Kr("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new Kr("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new Kr("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},o=!1){let s,i={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new z("Legacy serialization format not supported yet.");s=e}else y.assert(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=e.layers,delete e.layers,i=e;let a=new t(i);if(!(a instanceof Xi))throw new vt(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(let u of s){let c=yn(u,void 0,o);o&&c.setFastWeightInitDuringBuild(!0),a.add(c)}return a}set stopTraining(t){if(this.model==null)throw new z("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new z("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let t=[];for(let e of this.layers){let n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}};Xi.className="Sequential";Q.registerClass(Xi);function Y8(r){return new Vn(r)}function Z8(r){return new Xi(r)}function BS(r){return Dy(r)}function J8(r,t){xn.registerCallbackConstructor(r,t)}var rn=class extends Q.Serializable{getConfig(){return{}}},Qy=class extends rn{apply(t,e=1){return O$(t,e)}};Qy.className="elu";Q.registerClass(Qy);var tb=class extends rn{apply(t){return mm(t)}};tb.className="selu";Q.registerClass(tb);var eb=class extends rn{apply(t){return Or(t)}};eb.className="relu";Q.registerClass(eb);var rb=class extends rn{apply(t){return B(()=>zi(6,Or(t)))}};rb.className="relu6";Q.registerClass(rb);var nb=class extends rn{apply(t){return t}};nb.className="linear";Q.registerClass(nb);var ob=class extends rn{apply(t){return Qr(t)}};ob.className="sigmoid";Q.registerClass(ob);var sb=class extends rn{apply(t){return L$(t)}};sb.className="hardSigmoid";Q.registerClass(sb);var ib=class extends rn{apply(t){return Vs(t)}};ib.className="softplus";Q.registerClass(ib);var ab=class extends rn{apply(t){return P$(t)}};ab.className="softsign";Q.registerClass(ab);var lb=class extends rn{apply(t){return Di(t)}};lb.className="tanh";Q.registerClass(lb);var Km=class extends rn{apply(t,e=-1){return au(t,e)}};Km.className="softmax";Q.registerClass(Km);var ub=class extends rn{apply(t,e=-1){return im(t,e)}};ub.className="logSoftmax";Q.registerClass(ub);var cb=class extends rn{apply(t,e=1){return B(()=>D(Qr(D(t,e)),t))}};cb.className="swish";Q.registerClass(cb);var pb=class extends rn{apply(t){return B(()=>D(t,Di(Vs(t))))}};pb.className="mish";Q.registerClass(pb);function js(r){return r.getClassName()}function VS(r,t={}){return Hi(r,Q.SerializationMap.getMap().classNameMap,t,"activation")}function Xs(r){if(r==null){let t={};return t.className="linear",t.config={},VS(t)}if(typeof r=="string"){let t={};return t.className=r,t.config={},VS(t)}else return r instanceof rn?r:VS(r)}function GS(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var mb=class extends Q.Serializable{},hu=class extends mb{constructor(t){super(),GS(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return B(()=>{let e=Te([1]);return this.hasL1&&(e=Y(e,mt(D(this.l1,Ee(t))))),this.hasL2&&(e=Y(e,mt(D(this.l2,cc(t))))),R(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}};hu.className="L1L2";Q.registerClass(hu);function yD(r){return GS(r),new hu({l1:r!=null?r.l1:null,l2:0})}function bD(r){return GS(r),new hu({l2:r!=null?r.l2:null,l1:0})}var gD={l1l2:"L1L2"};function me(r){return Sm(r)}function xD(r,t={}){return Hi(r,Q.SerializationMap.getMap().classNameMap,t,"regularizer")}function we(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in gD?gD[r]:r,config:{}};return xD(e)}else return r instanceof mb?r:xD(r)}var jm=class extends kt{constructor(t){super(t==null?{}:t),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=St(t);let n=Or(t);return this.maxValue!=null&&(n=vr(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){let t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}};jm.className="ReLU";Q.registerClass(jm);var Xm=class extends kt{constructor(t){super(t==null?{}:t),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){let n=St(t);return eu(n,this.alpha)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};Xm.className="LeakyReLU";Q.registerClass(Xm);var Ym=class extends kt{constructor(t){if(super(t==null?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=de(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=we(t.alphaRegularizer),this.alphaConstraint=Ve(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new z(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Bt(t);let e=t.slice(1);if(this.sharedAxes!=null)for(let o of this.sharedAxes)e[o-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let o=1;o<t.length;++o)n[o]=t[o];this.inputSpec=[new be({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=St(t),iu(t,this.alpha.read())}getConfig(){let t={alphaInitializer:ke(this.alphaInitializer),alphaRegularizer:me(this.alphaRegularizer),alphaConstraint:Be(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}};Ym.className="PReLU";Q.registerClass(Ym);var Zm=class extends kt{constructor(t){if(super(t==null?{}:t),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new vt(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){let n=St(t);return Pi(n)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};Zm.className="ELU";Q.registerClass(Zm);var Jm=class extends kt{constructor(t){super(t==null?{}:t),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){let n=St(t);return D(n,J(Fe(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){let t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}};Jm.className="ThresholdedReLU";Q.registerClass(Jm);var Qm=class extends kt{constructor(t){super(t==null?{}:t),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new Km().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){let n=St(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){let t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}};Qm.className="Softmax";Q.registerClass(Qm);function gu(r,t,e){if(typeof r=="number")return vo(r,t);if(r.length!==t)throw new z(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${r.length} elements.`);for(let n=0;n<t;++n){let o=r[n];if(!$$(o))throw new z(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function Tn(r,t,e,n,o=1){if(r==null)return r;let s=t+(t-1)*(o-1),i;return e==="same"?i=r:i=r-s+1,Math.floor((i+n-1)/n)}function Ys(r,t,e,n){if(r==null)return null;if(n==="valid")r=r*t+qs([e-t,0]);else if(n==="same")r=r*t;else throw new z(`Unsupport padding mode: ${n}.`);return r}function Dh(r,t){return B(()=>(Oe(t),t==="channelsFirst"?Pt(r,[0,2,3,1]):r))}function WS(r,t){return B(()=>(Oe(t),t==="channelsFirst"?Pt(r,[0,2,3,4,1]):r))}function tY(r,t,e,n=1,o="valid",s,i=1){return B(()=>{if(s==null&&(s=dn()),Oe(s),r.shape.length!==3)throw new z(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(t.shape.length!==3)throw new z(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new z(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(r=Pt(r,[0,2,1])),o==="causal")throw new vt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=tm(r,t,n,o==="same"?"same":"valid","NWC",i);return e!=null&&(a=hn(a,e)),a})}function wD(r,t,e,n=[1,1],o="valid",s,i,a=null){return B(()=>{if(s==null&&(s=dn()),Oe(s),r.rank!==3&&r.rank!==4)throw new z(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(t.rank!==3&&t.rank!==4)throw new z(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let u=Dh(r,s);if(o==="causal")throw new vt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=cu.conv2d({x:u,filter:t,strides:n,pad:o==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:a}),s==="channelsFirst"&&(u=Pt(u,[0,3,1,2])),u})}function eY(r,t,e,n=[1,1,1],o="valid",s,i){return B(()=>{if(s==null&&(s=dn()),Oe(s),r.rank!==4&&r.rank!==5)throw new z(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(t.rank!==4&&t.rank!==5)throw new z(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let a=WS(r,s);if(o==="causal")throw new vt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=yx(a,t,n,o==="same"?"same":"valid","NDHWC",i),e!=null&&(a=hn(a,e)),s==="channelsFirst"&&(a=Pt(a,[0,4,1,2,3])),a})}var Cc=class extends kt{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Cc.verifyArgs(e),this.rank=t,Qe(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new vt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=gu(e.kernelSize,t,"kernelSize"),this.strides=gu(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,mn(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Oe(this.dataFormat),this.activation=Xs(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=de(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ve(e.biasConstraint),this.biasRegularizer=we(e.biasRegularizer),this.activityRegularizer=we(e.activityRegularizer),this.dilationRate=gu(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new z(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new z(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new z(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(so("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!Cy(t.kernelSize,"number",1,3))throw new z(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){let t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:js(this.activation),useBias:this.useBias,biasInitializer:ke(this.biasInitializer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),biasConstraint:Be(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}},xu=class extends Cc{constructor(t,e){super(t,e),this.kernel=null,xu.verifyArgs(e),this.filters=e.filters,Qe(this.filters,"filters"),this.kernelInitializer=de(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ve(e.kernelConstraint),this.kernelRegularizer=we(e.kernelRegularizer)}build(t){t=Bt(t);let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new z(`The channel dimension of the input should be defined. Found ${t[e]}`);let n=t[e],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return B(()=>{t=St(t);let n,o=this.bias==null?null:this.bias.read(),s=Iy(this.activation.getClassName());if(s!=null&&this.rank===2)n=wD(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=tY(t,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=wD(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=eY(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new vt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(t){t=Bt(t);let e=[],n=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<n.length;++s){let i=Tn(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);e.push(i)}let o=[t[0]];return this.dataFormat==="channelsLast"?(o=o.concat(e),o.push(this.filters)):(o.push(this.filters),o=o.concat(e)),o}getConfig(){let t={filters:this.filters,kernelInitializer:ke(this.kernelInitializer),kernelRegularizer:me(this.kernelRegularizer),kernelConstraint:Be(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new z(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}},ul=class extends xu{constructor(t){super(2,t),ul.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Cy(t.kernelSize,"number",1,2))throw new z(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}};ul.className="Conv2D";Q.registerClass(ul);var cl=class extends xu{constructor(t){super(3,t),cl.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new z(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}};cl.className="Conv3D";Q.registerClass(cl);var tf=class extends ul{constructor(t){if(super(t),this.inputSpec=[new be({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new z(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Bt(t),t.length!==4)throw new z("Input should have rank 4; Received input shape: "+JSON.stringify(t));let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new z("The channel dimension of the inputs should be defined. Found `None`.");let n=t[e],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new be({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return B(()=>{let n=St(t);if(n.shape.length!==4)throw new z(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);let u=o[i],l=o[a],c=this.kernelSize[0],p=this.kernelSize[1],m=this.strides[0],f=this.strides[1],d=Ys(u,m,c,this.padding),h=Ys(l,f,p,this.padding),g=[s,d,h,this.filters];this.dataFormat!=="channelsLast"&&(n=Pt(n,[0,2,3,1]));let x=rm(n,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Pt(x,[0,3,1,2])),this.bias!=null&&(x=hn(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(t){t=Bt(t);let e=t.slice(),n,o,s;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3):(n=3,o=1,s=2);let i=this.kernelSize[0],a=this.kernelSize[1],u=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[o]=Ys(e[o],u,i,this.padding),e[s]=Ys(e[s],l,a,this.padding),e}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}};tf.className="Conv2DTranspose";Q.registerClass(tf);var ef=class extends cl{constructor(t){if(super(t),this.inputSpec=[new be({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new z(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Bt(t),t.length!==5)throw new z("Input should have rank 5; Received input shape: "+JSON.stringify(t));let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new z("The channel dimension of the inputs should be defined. Found `None`.");let n=t[e],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new be({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return B(()=>{let n=St(t);if(n.shape.length!==5)throw new z(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let o=n.shape,s=o[0],i,a,u;this.dataFormat==="channelsFirst"?(u=2,i=3,a=4):(u=1,i=2,a=3);let l=o[u],c=o[i],p=o[a],m=this.kernelSize[0],f=this.kernelSize[1],d=this.kernelSize[2],h=this.strides[0],g=this.strides[1],x=this.strides[2],b=Ys(l,h,m,this.padding),w=Ys(c,g,f,this.padding),C=Ys(p,x,d,this.padding),N=[s,b,w,C,this.filters];this.dataFormat!=="channelsLast"&&(n=Pt(n,[0,2,3,4,1]));let _=wx(n,this.kernel.read(),N,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(_=Pt(_,[0,4,1,2,3])),this.bias!==null&&(_=hn(_,this.bias.read(),this.dataFormat)),this.activation!==null&&(_=this.activation.apply(_)),_})}computeOutputShape(t){t=Bt(t);let e=t.slice(),n,o,s,i;this.dataFormat==="channelsFirst"?(n=1,o=2,s=3,i=4):(n=4,o=1,s=2,i=3);let a=this.kernelSize[0],u=this.kernelSize[1],l=this.kernelSize[2],c=this.strides[0],p=this.strides[1],m=this.strides[2];return e[n]=this.filters,e[o]=Ys(e[o],c,a,this.padding),e[s]=Ys(e[s],p,u,this.padding),e[i]=Ys(e[i],m,l,this.padding),e}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}};ef.className="Conv3DTranspose";Q.registerClass(ef);var fb=class extends xu{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new z("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new z("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new z(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=de(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=we(e.depthwiseRegularizer),this.depthwiseConstraint=Ve(e.depthwiseConstraint),this.pointwiseInitializer=de(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=we(e.pointwiseRegularizer),this.pointwiseConstraint=Ve(e.pointwiseConstraint)}build(t){if(t=Bt(t),t.length<this.rank+2)throw new z(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new z(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);let n=t[e],o=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let a=0;a<this.rank;++a)s.push(1);s.push(n*this.depthMultiplier,this.filters);let i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new be({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return B(()=>{t=St(t);let n;if(this.rank===1)throw new vt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Pt(t,[0,2,3,1])),n=fm(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=hn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Pt(n,[0,3,1,2])),n})}getConfig(){let t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=ke(this.depthwiseInitializer),t.pointwiseInitializer=ke(this.pointwiseInitializer),t.depthwiseRegularizer=me(this.depthwiseRegularizer),t.pointwiseRegularizer=me(this.pointwiseRegularizer),t.depthwiseConstraint=Be(this.depthwiseConstraint),t.pointwiseConstraint=Be(this.pointwiseConstraint),t}};fb.className="SeparableConv";var rf=class extends fb{constructor(t){super(2,t)}};rf.className="SeparableConv2D";Q.registerClass(rf);var yu=class extends xu{constructor(t){super(1,t),yu.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Cy(t.kernelSize,"number",1,1))throw new z(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}};yu.className="Conv1D";Q.registerClass(yu);var nf=class extends kt{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return B(()=>{if(t=St(t),this.dataFormat==="channelsLast"){let n=Ih(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ih(n,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Ih(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ih(n,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}};nf.className="Cropping2D";Q.registerClass(nf);var of=class extends kt{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Oe(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,_$(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){let e=t[2]==null?null:this.size[0]*t[2],n=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,n]}else{let e=t[1]==null?null:this.size[0]*t[1],n=t[2]==null?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return B(()=>{let n=St(t),o=n.shape;if(this.dataFormat==="channelsFirst"){n=Pt(n,[0,2,3,1]);let s=this.size[0]*o[2],i=this.size[1]*o[3],a=this.interpolation==="nearest"?oo.resizeNearestNeighbor(n,[s,i]):oo.resizeBilinear(n,[s,i]);return Pt(a,[0,3,1,2])}else{let s=this.size[0]*o[1],i=this.size[1]*o[2];return this.interpolation==="nearest"?oo.resizeNearestNeighbor(n,[s,i]):oo.resizeBilinear(n,[s,i])}})}getConfig(){let t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}};of.className="UpSampling2D";Q.registerClass(of);function rY(r,t,e=[1,1],n="valid",o,s){return B(()=>{o==null&&(o=dn()),Oe(o);let i=Dh(r,o);if(r.rank!==4)throw new z(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(t.rank!==4)throw new z(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Oi(i,t,e,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(i=Pt(i,[0,3,1,2])),i})}var sf=class extends Cc{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=de(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ve(t.depthwiseConstraint),this.depthwiseRegularizer=we(t.depthwiseRegularizer)}build(t){if(t=Bt(t),t.length<4)throw new z(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);let e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new z(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);let n=t[e],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return B(()=>{t=St(t);let n=rY(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=hn(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(t){t=Bt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2],o=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=Tn(e,this.kernelSize[0],this.padding,this.strides[0]),i=Tn(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],o,s,i]:[t[0],s,i,o]}getConfig(){let t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=ke(this.depthwiseInitializer),t.depthwiseRegularizer=me(this.depthwiseRegularizer),t.depthwiseConstraint=Be(this.depthwiseRegularizer),t}};sf.className="DepthwiseConv2D";Q.registerClass(sf);function US(r,t,e,n){if(Array.isArray(r)){if(t!=null||e!=null)throw new z("When inputs is an array, neither initialState or constants should be provided");n!=null&&(e=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(t=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return t=o(t),e=o(e),{inputs:r,initialState:t,constants:e}}function HS(r,t,e,n=!1,o,s,i=!1,a=!1){return B(()=>{let u=t.shape.length;if(u<3)throw new z(`Input should be at least 3D, but is ${u}D.`);let l=[1,0].concat(fn(2,u));if(t=Pt(t,l),s!=null)throw new vt("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=J(J(o,"bool"),"float32"),o.rank===u-1&&(o=ir(o,-1)),o=Pt(o,l)),n&&(t=dr(t,0),o!=null&&(o=dr(o,0)));let c=[],p,m=e,f=t.shape[0],d=gr(t),h;o!=null&&(h=gr(o));for(let x=0;x<f;++x){let b=d[x],w=B(()=>r(b,m));if(o==null)p=w[0],m=w[1];else{let C=B(()=>{let N=h[x],_=lt(wr(N),N),A=Y(D(w[0],N),D(m[0],_)),$=m.map((F,P)=>Y(D(w[1][P],N),D(F,_)));return{output:A,newStates:$}});p=C.output,m=C.newStates}a&&c.push(p)}let g;return a&&(g=qe(c,1)),[p,g,m]})}var kn=class extends kt{constructor(t){super(t);let e;if(t.cell==null)throw new z("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new Sc({cells:t.cell}):e=t.cell,e.stateSize==null)throw new z("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new be({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return fn(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){$y(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);let n=e[0],o;if(this.returnSequences?o=[t[0],t[1],n]:o=[t[0],n],this.returnState){let s=[];for(let i of e)s.push([t[0],i]);return[o].concat(s)}else return o}computeMask(t,e){return B(()=>{Array.isArray(e)&&(e=e[0]);let n=this.returnSequences?e:null;if(this.returnState){let o=this.states.map(s=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new vt("Constants support is not implemented in RNN yet.");$y(t)&&(t=t[0]),t=t;let n=this.stateful?t[0]:null,o=t.slice(2);this.inputSpec[0]=new be({shape:[n,null,...o]});let s=[t[0]].concat(t.slice(2));this.cell.build(s);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!y.arraysEqual(this.stateSpec.map(a=>a.shape[a.shape.length-1]),i))throw new z(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(a=>new be({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){B(()=>{if(!this.stateful)throw new Nn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Te([n,o])):this.states_=[Te([n,this.cell.stateSize])];else if(t==null)Nt(this.states_),this.keptStates!=null&&(Nt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Te([n,o])):this.states_[0]=Te([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):Nt(this.states_);for(let o=0;o<this.states_.length;++o){let s=t[o],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,a=[n,i];if(!y.arraysEqual(s.shape,a))throw new z(`State ${o} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[o]=s}}this.states_=this.states_.map(o=>De(o.clone()))})}apply(t,e){let n=e==null?null:e.initialState,o=e==null?null:e.constants;e==null&&(e={});let s=US(t,n,o,this.numConstants);t=s.inputs,n=s.initialState,o=s.constants;let i=[],a=[];if(n!=null){e.initialState=n,i=i.concat(n),this.stateSpec=[];for(let l of n)this.stateSpec.push(new be({shape:l.shape}));a=a.concat(this.stateSpec)}if(o!=null&&(e.constants=o,i=i.concat(o),this.numConstants=o.length),i[0]instanceof en){let l=[t].concat(i),c=this.inputSpec.concat(a),p=this.inputSpec;this.inputSpec=c;let m=super.apply(l,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return B(()=>{let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;t=St(t),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(t));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new z(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let a={training:o},l=HS((d,h)=>{let g=this.cell.call([d].concat(h),a);return[g[0],g.slice(1)]},t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),c=l[0],p=l[1],m=l[2];this.stateful&&this.resetStates(m,o);let f=this.returnSequences?p:c;return this.returnState?[f].concat(m):f})}getInitialState(t){return B(()=>{let e=Te(t.shape);return e=mt(e,[1,2]),e=il(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Ey(e,[1,n]):e):this.cell.stateSize>1?[Ey(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){let t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===kn.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),t),e)}static fromConfig(t,e,n={}){let o=e.cell,s=yn(o,n);return new t(Object.assign(e,{cell:s}))}};kn.className="RNN";Q.registerClass(kn);var pl=class extends kt{},Ic=class extends pl{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Qe(this.units,"units"),this.activation=Xs(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=de(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=de(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=de(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=we(t.kernelRegularizer),this.recurrentRegularizer=we(t.recurrentRegularizer),this.biasRegularizer=we(t.biasRegularizer),this.kernelConstraint=Ve(t.kernelConstraint),this.recurrentConstraint=Ve(t.recurrentConstraint),this.biasConstraint=Ve(t.biasConstraint),this.dropout=uc([1,qs([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=uc([1,qs([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Bt(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return B(()=>{if(t=t,t.length!==2)throw new z(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];let o=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=fl({ones:()=>wr(t),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=fl({ones:()=>wr(n),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let s,i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?s=ko(D(t,i),this.kernel.read()):s=ko(t,this.kernel.read()),this.bias!=null&&(s=hn(s,this.bias.read())),a!=null&&(n=D(n,a));let u=Y(s,ko(n,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:js(this.activation),useBias:this.useBias,kernelInitializer:ke(this.kernelInitializer),recurrentInitializer:ke(this.recurrentInitializer),biasInitializer:ke(this.biasInitializer),kernelRegularizer:me(this.kernelRegularizer),recurrentRegularizer:me(this.recurrentRegularizer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),kernelConstraint:Be(this.kernelConstraint),recurrentConstraint:Be(this.recurrentConstraint),biasConstraint:Be(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}};Ic.className="SimpleRNNCell";Q.registerClass(Ic);var af=class extends kn{constructor(t){t.cell=new Ic(t),super(t)}call(t,e){return B(()=>{this.cell.dropoutMask!=null&&(Nt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Nt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return new t(e)}};af.className="SimpleRNN";Q.registerClass(af);var vc=class extends pl{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new z("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Qe(this.units,"units"),this.activation=Xs(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Xs(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=de(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=de(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=de(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=we(t.kernelRegularizer),this.recurrentRegularizer=we(t.recurrentRegularizer),this.biasRegularizer=we(t.biasRegularizer),this.kernelConstraint=Ve(t.kernelConstraint),this.recurrentConstraint=Ve(t.recurrentConstraint),this.biasConstraint=Ve(t.biasConstraint),this.dropout=uc([1,qs([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=uc([1,qs([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Bt(t);let e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return B(()=>{if(t=t,t.length!==2)throw new z(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);let n=e.training==null?!1:e.training,o=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=fl({ones:()=>wr(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=fl({ones:()=>wr(o),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,a,u,l;0<this.dropout&&this.dropout<1&&(t=D(t,s[0]));let c=ko(t,this.kernel.read());this.useBias&&(c=hn(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=D(o,i[0]));let p=this.recurrentKernel.read(),[m,f]=hr(p,[2*this.units,this.units],p.rank-1),d=ko(o,m),[h,g,x]=hr(c,3,c.rank-1),[b,w]=hr(d,2,d.rank-1);a=this.recurrentActivation.apply(Y(h,b)),u=this.recurrentActivation.apply(Y(g,w));let C=ko(D(u,o),f);l=this.activation.apply(Y(x,C));let N=Y(D(a,o),D(Y(1,qt(a)),l));return[N,N]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:js(this.activation),recurrentActivation:js(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ke(this.kernelInitializer),recurrentInitializer:ke(this.recurrentInitializer),biasInitializer:ke(this.biasInitializer),kernelRegularizer:me(this.kernelRegularizer),recurrentRegularizer:me(this.recurrentRegularizer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),kernelConstraint:Be(this.kernelConstraint),recurrentConstraint:Be(this.recurrentConstraint),biasConstraint:Be(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}};vc.className="GRUCell";Q.registerClass(vc);var lf=class extends kn{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new vc(t),super(t)}call(t,e){return B(()=>{this.cell.dropoutMask!=null&&(Nt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Nt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};lf.className="GRU";Q.registerClass(lf);var ml=class extends pl{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Qe(this.units,"units"),this.activation=Xs(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Xs(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=de(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=de(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=de(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=we(t.kernelRegularizer),this.recurrentRegularizer=we(t.recurrentRegularizer),this.biasRegularizer=we(t.biasRegularizer),this.kernelConstraint=Ve(t.kernelConstraint),this.recurrentConstraint=Ve(t.recurrentConstraint),this.biasConstraint=Ve(t.biasConstraint),this.dropout=uc([1,qs([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=uc([1,qs([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=Bt(t);let n=t[t.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,i=this.units;o=new(e=class extends gn{apply(u,l){let c=s.apply([i]),p=new fu().apply([i]),m=s.apply([i*2]);return AS(AS(c,p),m)}},e.className="CustomInit",e)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return B(()=>{let n=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new z(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let o=t[1],s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=fl({ones:()=>wr(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=fl({ones:()=>wr(o),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,a=this.recurrentDropoutMask,u,l,c,p;0<this.dropout&&this.dropout<1&&(t=D(t,i[0]));let m=ko(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=D(o,a[0])),m=Y(m,ko(o,this.recurrentKernel.read())),this.useBias&&(m=hn(m,this.bias.read()));let[f,d,h,g]=hr(m,4,m.rank-1);u=this.recurrentActivation.apply(f),l=this.recurrentActivation.apply(d),c=Y(D(l,s),D(u,this.activation.apply(h))),p=this.recurrentActivation.apply(g);let x=D(p,this.activation.apply(c));return[x,x,c]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:js(this.activation),recurrentActivation:js(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ke(this.kernelInitializer),recurrentInitializer:ke(this.recurrentInitializer),biasInitializer:ke(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:me(this.kernelRegularizer),recurrentRegularizer:me(this.recurrentRegularizer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),kernelConstraint:Be(this.kernelConstraint),recurrentConstraint:Be(this.recurrentConstraint),biasConstraint:Be(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}};ml.className="LSTMCell";Q.registerClass(ml);var uf=class extends kn{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new ml(t),super(t)}call(t,e){return B(()=>{this.cell.dropoutMask!=null&&(Nt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Nt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};uf.className="LSTM";Q.registerClass(uf);var Sc=class extends pl{constructor(t){super(t),this.cells=t.cells}get stateSize(){let t=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return B(()=>{t=t;let n=t.slice(1),o=[];for(let a of this.cells.slice().reverse())Array.isArray(a.stateSize)?o.push(n.splice(0,a.stateSize.length)):o.push(n.splice(0,1));o.reverse();let s=[],i;for(let a=0;a<this.cells.length;++a){let u=this.cells[a];n=o[a],a===0?i=[t[0]].concat(n):i=[i[0]].concat(n),i=u.call(i,e),s.push(i.slice(1))}n=[];for(let a of s.slice().reverse())n.push(...a);return[i[0]].concat(n)})}build(t){$y(t)&&(t=t[0]),t=t;let e;this.cells.forEach((n,o)=>{Hs(`RNNCell_${o}`,()=>{n.build(t),Array.isArray(n.stateSize)?e=n.stateSize[0]:e=n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){let t=super.getConfig(),e=s=>({className:s.getClassName(),config:s.getConfig()}),o={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),o)}static fromConfig(t,e,n={}){let o=[];for(let s of e.cells)o.push(yn(s,n));return new t({cells:o})}get trainableWeights(){if(!this.trainable)return[];let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){let e=[];for(let n of this.cells)e.push(...n.trainableWeights);return e.concat(t)}return t}getWeights(){let t=[];for(let e of this.cells)t.push(...e.weights);return Sh(t)}setWeights(t){let e=[];for(let n of this.cells){let o=n.weights.length,s=t.splice(o);for(let i=0;i<n.weights.length;++i)e.push([n.weights[i],s[i]])}Lm(e)}};Sc.className="StackedRNNCells";Q.registerClass(Sc);function fl(r){let{ones:t,rate:e,training:n=!1,count:o=1,dropoutFunc:s}=r,i=()=>s!=null?s(t(),e):Ay(t(),e),a=()=>mu(i,t,n);return!o||o<=1?De(a().clone()):Array(o).fill(void 0).map(a).map(l=>De(l.clone()))}var nY=function(r,t){var e={};for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&t.indexOf(n)<0&&(e[n]=r[n]);if(r!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,n=Object.getOwnPropertySymbols(r);o<n.length;o++)t.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(r,n[o])&&(e[n[o]]=r[n[o]]);return e};var db=class extends kn{constructor(t){if(t.unroll)throw new vt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new vt("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new be({ndim:5})]}call(t,e){return B(()=>{if(this.cell.dropoutMask!=null&&(Nt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Nt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new z("ConvRNN2D cell does not support constants");let n=e==null?null:e.mask,o=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:n,training:o,initialState:s})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return B(()=>{let{stateSize:e}=this.cell,n=t.shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)],i=Te(s);return Array.isArray(e)?Array(e.length).fill(i):[i]})}resetStates(t,e=!1){B(()=>{if(!this.stateful)throw new Nn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),s=[o[0],...o.slice(2)];if(n[0]==null)throw new z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Te(s)):this.states_=[Te(s)];else if(t==null)Nt(this.states_),this.keptStates!=null&&(Nt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Te(s)):this.states_[0]=Te(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Nt(this.states_);for(let a=0;a<this.states_.length;++a){let u=t[a],l=s;if(!y.arraysEqual(u.shape,l))throw new z(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${u.shape}`);this.states_[a]=u}}this.states_=this.states_.map(a=>De(a.clone()))})}computeSingleOutputShape(t){let{dataFormat:e,filters:n,kernelSize:o,padding:s,strides:i,dilationRate:a}=this.cell,u=e==="channelsFirst",l=t[u?3:2],c=t[u?4:3],p=Tn(l,o[0],s,i[0],a[0]),m=Tn(c,o[1],s,i[1],a[1]);return[...t.slice(0,2),...u?[n,p,m]:[p,m,n]]}};db.className="ConvRNN2D";var Nc=class extends ml{constructor(t){let{filters:e,kernelSize:n,strides:o,padding:s,dataFormat:i,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,Qe(this.filters,"filters"),this.kernelSize=gu(n,2,"kernelSize"),this.kernelSize.forEach(u=>Qe(u,"kernelSize")),this.strides=gu(o||1,2,"strides"),this.strides.forEach(u=>Qe(u,"strides")),this.padding=s||"valid",mn(this.padding),this.dataFormat=i||"channelsLast",Oe(this.dataFormat),this.dilationRate=gu(a||1,2,"dilationRate"),this.dilationRate.forEach(u=>Qe(u,"dilationRate"))}build(t){var e;t=Bt(t);let n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new z(`The channel dimension of the input should be defined. Found ${t[n]}`);let o=t[n],s=4,i=this.kernelSize.concat([o,this.filters*s]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let a=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){let l=this.biasInitializer,c=this.filters;u=new(e=class extends gn{apply(m,f){let d=l.apply([c]),h=fr([c]),g=l.apply([c*2]);return Tm([d,h,g])}},e.className="CustomInit",e)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return B(()=>{if(t.length!==3)throw new z(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let n=e.training||!1,o=t[0],s=t[1],i=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=fl({ones:()=>wr(o),rate:this.dropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));let u=this.dropoutMask,l=(rt,ot,at)=>!ot||!ot[at]?rt:D(ot[at],rt),c=l(o,u,0),p=l(o,u,1),m=l(o,u,2),f=l(o,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=fl({ones:()=>wr(s),rate:this.recurrentDropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));let d=this.recurrentDropoutMask,h=l(s,d,0),g=l(s,d,1),x=l(s,d,2),b=l(s,d,3),w=3,[C,N,_,A]=hr(this.kernel.read(),a,w),[$,F,P,V]=this.useBias?hr(this.bias.read(),a):[null,null,null,null];c=this.inputConv(c,C,$,this.padding),p=this.inputConv(p,N,F,this.padding),m=this.inputConv(m,_,P,this.padding),f=this.inputConv(f,A,V,this.padding);let[G,W,q,H]=hr(this.recurrentKernel.read(),a,w);h=this.recurrentConv(h,G),g=this.recurrentConv(g,W),x=this.recurrentConv(x,q),b=this.recurrentConv(b,H);let K=this.recurrentActivation.apply(Y(c,h)),X=this.recurrentActivation.apply(Y(p,g)),Z=Y(D(X,i),D(K,this.activation.apply(Y(m,x)))),et=D(this.recurrentActivation.apply(Y(f,b)),this.activation.apply(Z));return[et,et,Z]})}getConfig(){let t=super.getConfig(),{units:e}=t,n=nY(t,["units"]),o={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),o)}inputConv(t,e,n,o){let s=vn(t,e,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?hn(s,n,this.dataFormat):s}recurrentConv(t,e){return vn(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Nc.className="ConvLSTM2DCell";Q.registerClass(Nc);var cf=class extends db{constructor(t){let e=new Nc(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}};cf.className="ConvLSTM2D";Q.registerClass(cf);var Tc=class extends kt{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;let e=t.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?e[o]:this.noiseShape[o]);return n}call(t,e){return B(()=>{this.invokeCallHook(t,e);let n=St(t);if(0<this.rate&&this.rate<1){let o=e.training==null?!1:e.training,s=this.getNoiseShape(n);return mu(()=>Ay(n,this.rate,s,this.seed),()=>n,o)}return t})}getConfig(){let t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}};Tc.className="Dropout";Q.registerClass(Tc);var pf=class extends Tc{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){let e=t.shape;return[e[0],1,e[2]]}};pf.className="SpatialDropout1D";Q.registerClass(pf);var mf=class extends kt{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Qe(this.units,"units"),this.activation=Xs(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=de(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=de(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ve(t.kernelConstraint),this.biasConstraint=Ve(t.biasConstraint),this.kernelRegularizer=we(t.kernelRegularizer),this.biasRegularizer=we(t.biasRegularizer),this.activityRegularizer=we(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Bt(t);let e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=Bt(t);let e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return B(()=>{this.invokeCallHook(t,e);let n=St(t),o=Iy(this.activation.getClassName()),s;return o!=null?s=ko(n,this.kernel.read(),o,this.bias?this.bias.read():null):(s=ko(n,this.kernel.read()),this.bias!=null&&(s=hn(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let t={units:this.units,activation:js(this.activation),useBias:this.useBias,kernelInitializer:ke(this.kernelInitializer),biasInitializer:ke(this.biasInitializer),kernelRegularizer:me(this.kernelRegularizer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),kernelConstraint:Be(this.kernelConstraint),biasConstraint:Be(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}};mf.className="Dense";Q.registerClass(mf);var ff=class extends kt{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Bt(t);for(let e of t.slice(1))if(e==null)throw new z(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],To(t,1)]}call(t,e){return B(()=>{this.invokeCallHook(t,e);let n=St(t);if(this.dataFormat==="channelsFirst"&&n.rank>1){let o=[0];for(let s=2;s<n.rank;++s)o.push(s);o.push(1),n=Pt(n,o)}return F$(n)})}getConfig(){let t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);let e=super.getConfig();return Object.assign(t,e),t}};ff.className="Flatten";Q.registerClass(ff);var df=class extends kt{constructor(t){super(t),this.supportsMasking=!0,this.activation=Xs(t.activation)}call(t,e){return B(()=>{this.invokeCallHook(t,e);let n=St(t);return this.activation.apply(n)})}getConfig(){let t={activation:js(this.activation)},e=super.getConfig();return Object.assign(t,e),t}};df.className="Activation";Q.registerClass(df);var hf=class extends kt{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return B(()=>(t=St(t),D$(t,this.n)))}getConfig(){let t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}};hf.className="RepeatVector";Q.registerClass(hf);var gf=class extends kt{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){let n="Total size of new array must be unchanged.",o=e.slice(),s=1,i=null;for(let u=0;u<o.length;++u){let l=o[u];if(this.isUnknown(l))if(i===null)i=u;else throw new z("Can only specifiy one unknown dimension.");else s*=l}let a=To(t);if(i!==null){if(s===0||a%s!==0)throw new z(n);o[i]=a/s}else if(a!==s)throw new z(n);return o}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return B(()=>{this.invokeCallHook(t,e);let n=St(t),o=n.shape,s=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return R(n,s)})}getConfig(){let t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}};gf.className="Reshape";Q.registerClass(gf);var xf=class extends kt{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);let e=fn(1,t.dims.length+1);if(!y.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new be({ndim:this.dims.length+1})]}computeOutputShape(t){t=Bt(t);let e=t.slice();return this.dims.forEach((n,o)=>{e[o+1]=t[n]}),e}call(t,e){return Pt(St(t),this.dimsIncludingBatch)}getConfig(){let t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}};xf.className="Permute";Q.registerClass(xf);var yf=class extends kt{constructor(t){super(t==null?{}:t),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){let n=St(t),o=-1;return Gu(Gs(n,this.maskValue),o)}call(t,e){return B(()=>{this.invokeCallHook(t,e);let n=St(t),o=-1,s=!0,i=Gu(Gs(n,this.maskValue),o,s);return D(n,J(i,n.dtype))})}};yf.className="Masking";Q.registerClass(yf);var bf=class extends kt{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(ye(t.inputLength))}this.inputDim=t.inputDim,Qe(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Qe(this.outputDim,"outputDim"),this.embeddingsInitializer=de(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=we(t.embeddingsRegularizer),this.activityRegularizer=we(t.activityRegularizer),this.embeddingsConstraint=Ve(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return B(()=>this.maskZero?(t=St(t),Gs(t,It(t))):null)}computeOutputShape(t){if(t=Bt(t),this.inputLength==null)return[...t,this.outputDim];let e=ye(this.inputLength);if(e.length!==t.length-1)throw new z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let o=0;o<e.length;++o){let s=e[o],i=t[o+1];if(s!=null&&i!=null&&s!==i)throw new z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);s==null&&(e[n]=i),n++}}return[t[0],...e,this.outputDim]}call(t,e){return B(()=>{this.invokeCallHook(t,e);let n=St(t);n.dtype!=="int32"&&(n=tn(n,"int32"));let o=_y(this.embeddings.read(),R(n,[n.size]));return R(o,Bt(this.computeOutputShape(n.shape)))})}getConfig(){let t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ke(this.embeddingsInitializer),embeddingsRegularizer:me(this.embeddingsRegularizer),activityRegularizer:me(this.activityRegularizer),embeddingsConstraint:Be(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}};bf.className="Embedding";Q.registerClass(bf);var dl=class extends kt{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new vt}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;let n=t.slice(0,t.length-e.length);for(let o=0;o<e.length;++o){let s=t[t.length-e.length+o],i=e[o];if(s==null||i==null||s<0||i<0)n.push(null);else if(s===1)n.push(i);else if(i===1)n.push(s);else{if(s!==i)throw new z("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Bt(t)]),t=t,t.length<2)throw new z(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(let s of t)s!=null&&s[0]!==null&&e.push(s[0]);if(e=No(e),e.length>1)throw new z(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=t[0]==null?null:t[0].slice(1);for(let s=1;s<t.length;++s){let i=t[s]==null?null:t[s].slice(1);n=this.computeElementwiseOpOutputShape(n,i)}let o=t.map(s=>s.length);t.indexOf(null)===-1&&No(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return B(()=>{if(t=t,this.reshapeRequired){let n=[],o=t.map(s=>s.rank);if(o.indexOf(null)===-1){let s=qs(o);for(let i of t){let a=i.rank;for(let u=0;u<s-a;++u)i=il(i,1);n.push(i)}return this.mergeFunction(n)}else{let s=!1;for(let u of t){let l=u.rank;if(l==null){let c=u.shape,p=c[0],m=c.slice(1).concat([p]),f=R(u,[p].concat(To(c.slice(1))));f=Pt(f,[1,0]),f=R(f,m),n.push(f),s=!0}else if(l>1){let c=fn(1,l).concat([0]);n.push(Pt(u,c)),s=!0}else n.push(u)}let i=this.mergeFunction(n),a=i.rank;if(s){if(a==null){let u=i.shape,l=u.length,c=u[l-1],p=[c].concat(u.slice(0,u.length-1));i=R(Pt(R(i,[-1,c]),[1,0]),p)}else if(a>1){let u=[a-1].concat(fn(0,a-1));i=Pt(i,u)}}return i}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let o=1;o<t.length;++o){let s=t[o]==null?null:t[o].slice(1);e=this.computeElementwiseOpOutputShape(e,s)}let n=[];for(let o of t)o!=null&&o[0]!==null&&n.push(o[0]);return n=No(n),n.length===1?e=n.concat(e):e=[null].concat(e),e}computeMask(t,e){return B(()=>{if(e==null)return null;if(!Array.isArray(e))throw new z("`mask` should be an Array");if(!Array.isArray(t))throw new z("`inputs` should be an Array");if(e.length!==t.length)throw new z(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(o=>o==null))return null;e=e.map(o=>o==null?o:ir(o,0));let n=e[0];for(let o=1;o<e.length-1;++o)n=Fr(n,e[o]);return n})}},wf=class extends dl{constructor(t){super(t)}mergeFunction(t){return B(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Y(e,t[n]);return e})}};wf.className="Add";Q.registerClass(wf);var Cf=class extends dl{constructor(t){super(t)}mergeFunction(t){return B(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=D(e,t[n]);return e})}};Cf.className="Multiply";Q.registerClass(Cf);var If=class extends dl{constructor(t){super(t)}mergeFunction(t){return B(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Y(e,t[n]);return D(1/t.length,e)})}};If.className="Average";Q.registerClass(If);var vf=class extends dl{constructor(t){super(t)}mergeFunction(t){return B(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=Sn(e,t[n]);return e})}};vf.className="Maximum";Q.registerClass(vf);var Sf=class extends dl{constructor(t){super(t)}mergeFunction(t){return B(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=zi(e,t[n]);return e})}};Sf.className="Minimum";Q.registerClass(Sf);var Nf=class extends dl{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new z("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(let o of t)if(o!=null){e=!1;break}if(e)return;let n=[];for(let o=0;o<t.length;++o){let s=t[o].slice();s.splice(this.axis,1);let i=!1;for(let a of n)if(y.arraysEqual(a,s)){i=!0;break}i||n.push(s)}if(n.length>1)throw new z("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return B(()=>Tm(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new z("A `Concatenate` layer should be called on a list of inputs.");let e=t,n=e[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(let s of e.slice(1)){if(n[o]==null||s[o]==null){n[o]=null;break}n[o]+=s[o]}return n}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new z("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new z("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new z(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return B(()=>{let n=!0;if(e.forEach(i=>{if(i!=null){n=!1;return}}),n)return null;let o=[];for(let i=0;i<t.length;++i)e[i]==null?o.push(J(wr(t[i]),"bool")):e[i].rank<t[i].rank?o.push(ir(e[i],-1)):o.push(e[i]);let s=oe(o,this.axis);return Jp(s,-1,!1)})}getConfig(){let t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}};Nf.className="Concatenate";Q.registerClass(Nf);function Rh(r,t){for(;r<0;)r+=t;return r}function oY(r,t,e){if(r.shape.length>3||t.shape.length>3)throw new vt("batchDot is not implemented for tensors of 4D or higher rank yet");if(y.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),y.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),r.dtype==="complex64"||t.dtype==="complex64")throw new vt("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=t.shape.length;e==null&&(e=[n-1,o-2]);let s=e;return B(()=>{let i;if(n>o){i=n-o;let u=[];for(let l=0;l<i;++l)u.push(1);t=R(t,t.shape.concat(u))}else if(o>n){i=o-n;let u=[];for(let l=0;l<i;++l)u.push(1);r=R(r,r.shape.concat(u))}else i=0;let a;if(r.shape.length===2&&t.shape.length===2)s[0]===s[1]?a=mt(D(r,t),s[0]):a=mt(D(Pt(r,[1,0]),t),s[1]);else{let u=s[0]!==r.shape.length-1,l=s[1]===t.shape.length-1;a=Mt(r,t,u,l)}if(i>0){let u;n>o?u=n+o-3:u=n-1;let l=[];for(let c=u;c<u+i;++c)l.push(c);a=zn(a,l)}return a.shape.length===1&&(a=ir(a,1)),a})}var Tf=class extends dl{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){y.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let e=t[0],n=t[1];if(e.length>3||n.length>3)throw new vt("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(e,n);if(e[o[0]]!==n[o[1]])throw new z(`Dimension incompatibility: ${e[o[0]]} !== ${n[o[1]]}`)}mergeFunction(t){if(t.length!==2)throw new z(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],n=t[1],o;return Array.isArray(this.axes)?o=this.axes.map((s,i)=>Rh(s,t[i].shape.length)):o=[Rh(this.axes,e.shape.length),Rh(this.axes,n.shape.length)],this.normalize&&(e=Nh(e,o[0]),n=Nh(n,o[1])),oY(e,n,o)}interpretAxes(t,e){let n;return Array.isArray(this.axes)?n=this.axes:n=[Rh(this.axes,t.length),Rh(this.axes,e.length)],n}computeOutputShape(t){y.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new vt("Dot layer does not support tensors of 4D or higher rank yet.");let o=this.interpretAxes(e,n);e.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);let s=e.concat(n);return s.length===1&&s.push(1),s}computeMask(t,e){return null}getConfig(){let t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}};Tf.className="Dot";Q.registerClass(Tf);var kf=class extends kt{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return B(()=>{this.invokeCallHook(t,e);let n=St(t);return mu(()=>Y(km(n.shape,0,this.stddev),n),()=>n,e.training||!1)})}};kf.className="GaussianNoise";Q.registerClass(kf);var Ef=class extends kt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return B(()=>{this.invokeCallHook(t,e);let n=St(t);return this.rate>0&&this.rate<1?mu(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return D(n,km(n.shape,1,s))},()=>n,e.training||!1):n})}};Ef.className="GaussianDropout";Q.registerClass(Ef);var _f=class extends kt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||St(t).shape}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return B(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(t);return mu(()=>{let s=St(t),i=1.6732632423543772,a=1.0507009873554805,u=-i*a,l=un(Vi(n),this.rate);l=tn(l,"float32");let c=((1-this.rate)*(1+this.rate*u**2))**-.5,p=-c*u*this.rate,m=Y(D(s,l),D(Y(l,-1),u));return Y(D(m,c),p)},()=>St(t),e.training||!1)}return t})}};_f.className="AlphaDropout";Q.registerClass(_f);function Fh(r,t,e,n,o,s=.001){let i;if(r.rank===2)i=ux(r,t,e,n,o,s);else if(r.rank===3)i=cx(r,t,e,n,o,s);else if(r.rank===4)i=px(r,t,e,n,o,s);else throw new vt(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return i}function sY(r,t,e,n,o=.001){return B(()=>{let s=qu(r,n),i=s.mean,a=s.variance;return[Fh(r,i,a,e,t,o),i,a]})}function iY(r,t,e,n,o=.001){return B(()=>{let s=qu(r,n),i=s.mean,a=s.variance,u=[];for(let d of fn(0,r.rank))n.indexOf(d)!==-1?u.push(1):u.push(r.shape[d]);let l=R(i,u),c=R(a,u),p=t==null?null:R(t,u),m=e==null?null:R(e,u);return[Fh(r,l,c,m,p,o),i,a]})}function aY(r,t,e,n,o=.001){return y.arraysEqual(n.slice().sort(),fn(0,r.rank-1))?sY(r,t,e,n,o):iY(r,t,e,n,o)}var Af=class extends kt{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=de(t.betaInitializer||"zeros"),this.gammaInitializer=de(t.gammaInitializer||"ones"),this.movingMeanInitializer=de(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=de(t.movingVarianceInitializer||"ones"),this.betaConstraint=Ve(t.betaConstraint),this.gammaConstraint=Ve(t.gammaConstraint),this.betaRegularizer=we(t.betaRegularizer),this.gammaRegularizer=we(t.gammaRegularizer)}build(t){t=Bt(t);let e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(n==null)throw new z(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new be({ndim:t.length,axes:{[e]:n}})];let o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return B(()=>{let n=e.training==null?!1:e.training,o=St(t),s=o.shape,i=s.length,a=fn(0,i),u=this.axis>=0?this.axis:this.axis+i;a.splice(u,1);let l=vo(1,i);l[u]=s[u];let c=a.slice();c.sort();let p=!y.arraysEqual(c,fn(0,i).slice(0,i-1)),m=()=>{if(p){let b=R(this.movingMean.read(),l),w=R(this.movingVariance.read(),l),C=this.center?R(this.beta.read(),l):null,N=this.scale?R(this.gamma.read(),l):null;return Fh(o,b,w,C,N,this.epsilon)}else return Fh(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return m();let[f,d,h]=aY(o,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(b,w,C)=>{B(()=>{let N=1-C,_=b.read(),A=D(lt(_,w),N);b.write(lt(_,A))})};return(()=>{g(this.movingMean,d,this.momentum),g(this.movingVariance,h,this.momentum)})(),f})}getConfig(){let t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ke(this.betaInitializer),gammaInitializer:ke(this.gammaInitializer),movingMeanInitializer:ke(this.movingMeanInitializer),movingVarianceInitializer:ke(this.movingVarianceInitializer),betaRegularizer:me(this.betaRegularizer),gammaRegularizer:me(this.gammaRegularizer),betaConstraint:Be(this.betaConstraint),gammaConstraint:Be(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}};Af.className="BatchNormalization";Q.registerClass(Af);var $f=class extends kt{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=de(t.betaInitializer||"zeros"),this.gammaInitializer=de(t.gammaInitializer||"ones"),this.betaRegularizer=we(t.betaRegularizer),this.gammaRegularizer=we(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Bt(t);let e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=e);for(let s of this.axis)if(s<0||s>=e)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==No(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(s=>t[s]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(t,e){let n=St(t),o=n.shape,s=o.length;return B(()=>{let{mean:a,variance:u}=qu(n,this.axis,!0),l=vo(1,s);for(let h of this.axis)l[h]=o[h];let c=h=>h!=null&&h.shape.length!==s?R(h,l):h,p=this.scale?c(this.gamma.read()):null,m=this.center?c(this.beta.read()):null,f=[],d=[];for(let h=0;h<s;++h)this.axis.indexOf(h)!==-1?(f.push(o[h]),d.push(1)):(f.push(1),d.push(o[h]));return a=Rr(a,f),u=Rr(u,f),p!=null&&(p=Rr(p,d)),m!=null&&(m=Rr(m,d)),Fh(n,a,u,m,p,this.epsilon)})}getConfig(){let t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ke(this.betaInitializer),gammaInitializer:ke(this.gammaInitializer),betaRegularizer:me(this.betaRegularizer),gammaRegularizer:me(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}};$f.className="LayerNormalization";Q.registerClass($f);function lY(r,t,e){return B(()=>{if(r.rank!==4)throw new z(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new z("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=dn()),e!=="channelsLast"&&e!=="channelsFirst")throw new z(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return e==="channelsFirst"?n=[[0,0],[0,0],t[0],t[1]]:n=[[0,0],t[0],t[1],[0,0]],pn(r,n)})}var Df=class extends kt{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?dn():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new z(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new z(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new z(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new be({ndim:4})]}computeOutputShape(t){t=Bt(t);let e,n;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?n=t[3]+this.padding[1][0]+this.padding[1][1]:n=null,[t[0],t[1],e,n]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?n=t[2]+this.padding[1][0]+this.padding[1][1]:n=null,[t[0],e,n,t[3]])}call(t,e){return B(()=>lY(St(t),this.padding,this.dataFormat))}getConfig(){let t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}};Df.className="ZeroPadding2D";Q.registerClass(Df);function wb(r,t,e,n,o,s){return B(()=>{Oe(o),TS(s),mn(n),e==null&&(e=[1,1]),n==null&&(n="valid"),o==null&&(o=dn()),s==null&&(s="max"),r=Dh(r,o);let i,a=n==="same"?"same":"valid";return s==="max"?i=ou(r,t,e,a):i=Zl(r,t,e,a),o==="channelsFirst"&&(i=Pt(i,[0,3,1,2])),i})}function CD(r,t,e,n,o,s){return B(()=>{Oe(o),TS(s),mn(n),e==null&&(e=[1,1,1]),n==null&&(n="valid"),o==null&&(o=dn()),s==null&&(s="max"),r=WS(r,o);let i,a=n==="same"?"same":"valid";return s==="max"?i=Lx(r,t,e,a):i=lx(r,t,e,a),o==="channelsFirst"&&(i=Pt(i,[0,4,1,2,3])),i})}var hb=class extends kt{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new z(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(Qe(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new z(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);Qe(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,mn(this.padding),this.inputSpec=[new be({ndim:3})]}computeOutputShape(t){t=Bt(t);let e=Tn(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return B(()=>{this.invokeCallHook(t,e),t=il(St(t),2);let n=this.poolingFunction(St(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return zn(n,[2])})}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}},Rf=class extends hb{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Oe(s),mn(o),wb(t,e,n,o,s,"max")}};Rf.className="MaxPooling1D";Q.registerClass(Rf);var Ff=class extends hb{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Oe(s),mn(o),wb(t,e,n,o,s,"avg")}};Ff.className="AveragePooling1D";Q.registerClass(Ff);var gb=class extends kt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new z(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Qe(this.poolSize,"poolSize"),Qe(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Oe(this.dataFormat),mn(this.padding),this.inputSpec=[new be({ndim:4})]}computeOutputShape(t){t=Bt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Tn(e,this.poolSize[0],this.padding,this.strides[0]),n=Tn(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return B(()=>(this.invokeCallHook(t,e),this.poolingFunction(St(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},Of=class extends gb{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Oe(s),mn(o),wb(t,e,n,o,s,"max")}};Of.className="MaxPooling2D";Q.registerClass(Of);var Pf=class extends gb{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Oe(s),mn(o),wb(t,e,n,o,s,"avg")}};Pf.className="AveragePooling2D";Q.registerClass(Pf);var xb=class extends kt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new z(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Qe(this.poolSize,"poolSize"),Qe(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Oe(this.dataFormat),mn(this.padding),this.inputSpec=[new be({ndim:5})]}computeOutputShape(t){t=Bt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2],o=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Tn(e,this.poolSize[0],this.padding,this.strides[0]),n=Tn(n,this.poolSize[1],this.padding,this.strides[1]),o=Tn(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,n,o]:[t[0],e,n,o,t[4]]}call(t,e){return B(()=>(this.invokeCallHook(t,e),this.poolingFunction(St(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},Lf=class extends xb{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Oe(s),mn(o),CD(t,e,n,o,s,"max")}};Lf.className="MaxPooling3D";Q.registerClass(Lf);var Mf=class extends xb{constructor(t){super(t)}poolingFunction(t,e,n,o,s){return Oe(s),mn(o),CD(t,e,n,o,s,"avg")}};Mf.className="AveragePooling3D";Q.registerClass(Mf);var yb=class extends kt{constructor(t){super(t),this.inputSpec=[new be({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new vt}},zf=class extends yb{constructor(t){super(t||{})}call(t,e){return B(()=>{let n=St(t);return Ne(n,1)})}};zf.className="GlobalAveragePooling1D";Q.registerClass(zf);var Bf=class extends yb{constructor(t){super(t||{})}call(t,e){return B(()=>{let n=St(t);return Sr(n,1)})}};Bf.className="GlobalMaxPooling1D";Q.registerClass(Bf);var bb=class extends kt{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Oe(this.dataFormat),this.inputSpec=[new be({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new vt}getConfig(){let t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},Vf=class extends bb{call(t,e){return B(()=>{let n=St(t);return this.dataFormat==="channelsLast"?Ne(n,[1,2]):Ne(n,[2,3])})}};Vf.className="GlobalAveragePooling2D";Q.registerClass(Vf);var Gf=class extends bb{call(t,e){return B(()=>{let n=St(t);return this.dataFormat==="channelsLast"?Sr(n,[1,2]):Sr(n,[2,3])})}};Gf.className="GlobalMaxPooling2D";Q.registerClass(Gf);var Cb=class extends kt{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){let t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){let o=e.layer,s=yn(o,n);delete e.layer;let i={layer:s};return Object.assign(i,e),new t(i)}},Wf=class extends Cb{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Bt(t),t.length<3)throw new z(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];let e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Bt(t);let e=[t[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),o=t[1];return[n[0],o].concat(n.slice(1))}call(t,e){return B(()=>(t=St(t),HS((i,a)=>[St(this.layer.call(i,e)),[]],t,[],!1,null,null,!1,!0)[1]))}};Wf.className="TimeDistributed";Q.registerClass(Wf);function uY(r){qi(k$,"BidirectionalMergeMode",r)}var cY="concat",Uf=class extends Cb{constructor(t){super(t);let e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=yn(n),e.goBackwards=e.goBackwards!==!0;let o={};if(o.className=t.layer.getClassName(),o.config=e,this.backwardLayer=yn(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?cY:t.mergeMode,uY(this.mergeMode),t.weights)throw new vt("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){let e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let n,o,s;return this.returnState&&(s=e.slice(1)),n=e[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(s).concat(s.slice()):[n].concat(s).concat(s.slice()):Tr(o)}apply(t,e){let n=e==null?null:e.initialState,o=e==null?null:e.constants;e==null&&(e={});let s=US(t,n,o,this.numConstants);if(t=s.inputs,n=s.initialState,o=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(n==null||n.length===0)&&o==null)return super.apply(t,e);let i=[],a=[];if(n!=null){let l=n.length;if(l%2>0)throw new z("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,i.push(...n);let c=n.map(p=>new be({shape:p.shape}));this.forwardLayer.stateSpec=c.slice(0,l/2),this.backwardLayer.stateSpec=c.slice(l/2),a.push(...c)}if(o!=null)throw new vt("Support for constants in Bidirectional layers is not implemented yet.");let u=i[0]instanceof en;for(let l of i)if(l instanceof en!==u)throw new z("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){let l=[t].concat(i),c=this.inputSpec.concat(a),p=this.inputSpec;this.inputSpec=c;let m=super.apply(l,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return B(()=>{let n=e.initialState,o,s;if(n==null)o=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{let u=n.slice(0,n.length/2),l=n.slice(n.length/2);o=this.forwardLayer.call(t,Object.assign(e,{initialState:u})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:l}))}let i;this.returnState&&(Array.isArray(o)&&(i=o.slice(1).concat(s.slice(1))),o=o[0],s=s[0]),this.returnSequences&&(s=dr(s,1));let a;return this.mergeMode==="concat"?a=Tm([o,s]):this.mergeMode==="sum"?a=Y(o,s):this.mergeMode==="ave"?a=D(.5,Y(o,s)):this.mergeMode==="mul"?a=D(o,s):this.mergeMode==null&&(a=[o,s]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Hs(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Hs(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[e,e]:n=e:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let s=this.forwardLayer.states.map(i=>null);return Array.isArray(n)?n.concat(s).concat(s):[n].concat(s).concat(s)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){let t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){let n=yn(e.layer);if(delete e.layer,e.numConstants!=null)throw new vt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let o=e;return o.layer=n,new t(o)}};Uf.className="Bidirectional";Q.registerClass(Uf);var Hf=class extends kt{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){let t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return B(()=>(t=St(t),t.dtype!=="float32"&&(t=tn(t,"float32")),Y(D(t,this.scale),this.offset)))}};Hf.className="Rescaling";Q.registerClass(Hf);var{resizeBilinear:pY,cropAndResize:mY}=oo,qf=class extends kt{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,n,o,s,i,a,u){return B(()=>{let l,c=!1,p=e/i,m=n/a,f=(o+e)/i,d=(s+n)/a,h=[p,m,f,d],g=[];t.rank===3?(c=!0,l=qe([t])):l=t;for(let N=0;N<l.shape[0];N++)g.push(h);let x=or(g,[g.length,4]),b=Gi(0,g.length,1,"int32"),C=mY(l,x,b,[o,s],"nearest");return c?tn(St(gr(C)),u):tn(C,u)})}upsize(t,e,n,o){return B(()=>{let s=pY(t,[e,n]);return tn(s,o)})}call(t,e){return B(()=>{let n=St(t),o=n.dtype,s=n.shape,i=s[s.length-3],a=s[s.length-2],u=0;i!==this.height&&(u=Math.floor((i-this.height)/2));let l=0;return a!==this.width&&(l=Math.floor((a-this.width)/2),l===0&&(l=1)),u>=0&&l>=0?this.centerCrop(n,u,l,this.height,this.width,i,a,o):this.upsize(t,this.height,this.width,o)})}getConfig(){let t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=Bt(t);let e=t.length-3,n=t.length-2;return t[e]=this.height,t[n]=this.width,t}};qf.className="CenterCrop";Q.registerClass(qf);function ID(r,t,e,n){let o=St(r);if(o.dtype!=="int32"&&(o=tn(o,"int32")),t==="int")return o;let s=o.shape;if(o.rank===0&&(o=ir(o,-1)),t==="oneHot"&&o.shape[o.shape.length-1]!==1&&(o=ir(o,-1)),o.rank>2)throw new z(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${o.rank}.`);let i=["multiHot","oneHot"].includes(t),a=o,u;if(typeof n!="undefined"&&t==="count"?u=ah(a,n,e,i):u=ah(a,[],e,i),t!=="tfIdf")return u;if(n)return D(u,n);throw new z("When outputMode is 'tfIdf', weights must be provided.")}var Kf=class extends kt{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){let t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=Bt(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return B(()=>{t=St(t),t.dtype!=="int32"&&(t=tn(t,"int32"));let n;if(typeof e.countWeights!="undefined"){if(this.outputMode!=="count")throw new z(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);n=St(e.countWeights)}let o=Sr(t),s=Ja(t),i=Fe(this.numTokens,o).bufferSync().get(0),a=un(s,0).bufferSync().get(0);if(!(i&&a))throw new z(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return ID(t,this.outputMode,this.numTokens,n)})}};Kf.className="CategoryEncoding";Q.registerClass(Kf);var dY=["bilinear","nearest"],vD=new Set(dY),jf=class extends kt{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(vD.has(t.interpolation))this.interpolation=t.interpolation;else throw new z(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){t=Bt(t);let e=t[2];return[this.height,this.width,e]}getConfig(){let t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return B(()=>{let n=[this.height,this.width];if(this.interpolation==="bilinear")return oo.resizeBilinear(t,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return oo.resizeNearestNeighbor(t,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...vD]} are supported`)})}};jf.className="Resizing";Q.registerClass(jf);function hY(r){return new Ks(r)}function gY(r){return new Zm(r)}function xY(r){return new jm(r)}function yY(r){return new Xm(r)}function bY(r){return new Ym(r)}function wY(r){return new Qm(r)}function CY(r){return new Jm(r)}function IY(r){return new yu(r)}function vY(r){return new ul(r)}function SY(r){return new tf(r)}function NY(r){return new cl(r)}function TY(r){return new ef(r)}function kY(r){return new rf(r)}function EY(r){return new nf(r)}function _Y(r){return new of(r)}function AY(r){return new sf(r)}function $Y(r){return new df(r)}function DY(r){return new mf(r)}function RY(r){return new Tc(r)}function FY(r){return new pf(r)}function OY(r){return new ff(r)}function PY(r){return new hf(r)}function LY(r){return new gf(r)}function MY(r){return new xf(r)}function zY(r){return new bf(r)}function BY(r){return new wf(r)}function VY(r){return new If(r)}function GY(r){return new Nf(r)}function WY(r){return new vf(r)}function UY(r){return new Sf(r)}function HY(r){return new Cf(r)}function qY(r){return new Tf(r)}function KY(r){return new Af(r)}function jY(r){return new $f(r)}function XY(r){return new Df(r)}function qS(r){return new Ff(r)}function YY(r){return qS(r)}function ZY(r){return qS(r)}function KS(r){return new Pf(r)}function JY(r){return KS(r)}function QY(r){return KS(r)}function jS(r){return new Mf(r)}function tZ(r){return jS(r)}function eZ(r){return jS(r)}function rZ(r){return new zf(r)}function nZ(r){return new Vf(r)}function SD(r){return new Bf(r)}function ND(r){return new Gf(r)}function TD(r){return new Rf(r)}function kD(r){return new Of(r)}function oZ(r){return new Lf(r)}function sZ(r){return new lf(r)}function iZ(r){return new vc(r)}function aZ(r){return new uf(r)}function lZ(r){return new ml(r)}function uZ(r){return new af(r)}function cZ(r){return new Ic(r)}function pZ(r){return new cf(r)}function mZ(r){return new Nc(r)}function fZ(r){return new kn(r)}function dZ(r){return new Sc(r)}function hZ(r){return new Uf(r)}function gZ(r){return new Wf(r)}var xZ=SD,yZ=ND,bZ=TD,wZ=kD;function CZ(r){return new kf(r)}function IZ(r){return new Ef(r)}function vZ(r){return new _f(r)}function SZ(r){return new yf(r)}function NZ(r){return new Hf(r)}function TZ(r){return new qf(r)}function kZ(r){return new jf(r)}function EZ(r){return new Kf(r)}var _D={};Ut(_D,{MAPE:()=>zZ,MSE:()=>GZ,binaryAccuracy:()=>_Z,binaryCrossentropy:()=>AZ,categoricalAccuracy:()=>DZ,categoricalCrossentropy:()=>RZ,cosineProximity:()=>PZ,mape:()=>BZ,meanAbsoluteError:()=>LZ,meanAbsolutePercentageError:()=>MZ,meanSquaredError:()=>VZ,mse:()=>WZ,precision:()=>FZ,recall:()=>OZ,sparseCategoricalAccuracy:()=>$Z});function _Z(r,t){return Eh(r,t)}function AZ(r,t){return Wy(r,t)}function $Z(r,t){return Uy(r,t)}function DZ(r,t){return _h(r,t)}function RZ(r,t){return Ah(r,t)}function FZ(r,t){return FS(r,t)}function OZ(r,t){return Q$(r,t)}function PZ(r,t){return kh(r,t)}function LZ(r,t){return Gm(r,t)}function MZ(r,t){return du(r,t)}function zZ(r,t){return du(r,t)}function BZ(r,t){return du(r,t)}function VZ(r,t){return ji(r,t)}function GZ(r,t){return ji(r,t)}function WZ(r,t){return ji(r,t)}var AD={};Ut(AD,{modelFromJSON:()=>dD});var $D={};Ut($D,{l1:()=>HZ,l1l2:()=>UZ,l2:()=>qZ});function UZ(r){return new hu(r)}function HZ(r){return yD(r)}function qZ(r){return bD(r)}var vb=class extends ll{constructor(){super(...arguments),this.model=null}setModel(t){if(!(t instanceof Vn))throw new Error("model must be a LayersModel, not some other Container");this.model=t}};function Ib(r,t){return r<t}function DD(r,t){return r>t}var Sb=class extends vb{constructor(t){if(super(),t==null&&(t={}),t.restoreBestWeights)throw new vt("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=t.monitor||"val_loss",this.minDelta=Math.abs(t.minDelta||0),this.patience=t.patience||0,this.verbose=t.verbose||0,this.mode=t.mode||"auto",this.baseline=t.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Ib:this.mode==="max"?this.monitorFunc=DD:this.monitor.indexOf("acc")!==-1?this.monitorFunc=DD:this.monitorFunc=Ib,this.monitorFunc===Ib&&(this.minDelta*=-1)}async onTrainBegin(t){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Ib?1/0:-1/0}async onEpochEnd(t,e){await Ki(e);let n=this.getMonitorValue(e);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=t,this.model.stopTraining=!0)))}async onTrainEnd(t){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(t){t==null&&(t={});let e=t[this.monitor];return e==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(t)}`),e}};function KZ(r){return new Sb(r)}var jZ={earlyStopping:KZ};var XZ=M();XZ.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var io;(function(r){r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_QINT16=15]="DT_QINT16",r[r.DT_QUINT16=16]="DT_QUINT16",r[r.DT_UINT16=17]="DT_UINT16",r[r.DT_COMPLEX128=18]="DT_COMPLEX128",r[r.DT_HALF=19]="DT_HALF",r[r.DT_RESOURCE=20]="DT_RESOURCE",r[r.DT_VARIANT=21]="DT_VARIANT",r[r.DT_UINT32=22]="DT_UINT32",r[r.DT_UINT64=23]="DT_UINT64",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",r[r.DT_QINT16_REF=115]="DT_QINT16_REF",r[r.DT_QUINT16_REF=116]="DT_QUINT16_REF",r[r.DT_UINT16_REF=117]="DT_UINT16_REF",r[r.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",r[r.DT_HALF_REF=119]="DT_HALF_REF",r[r.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",r[r.DT_VARIANT_REF=121]="DT_VARIANT_REF",r[r.DT_UINT32_REF=122]="DT_UINT32_REF",r[r.DT_UINT64_REF=123]="DT_UINT64_REF"})(io||(io={}));var RD;(function(r){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(RD||(RD={}));var XS={};function ZZ(r,t){let e={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:t};XS[r]=e}function Nb(r){return XS[r]}function JZ(r){delete XS[r]}function I(r,t,e,n,o){let s=t.inputParams[r];if(s&&s.inputIndexStart!==void 0){let a=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?a+1:s.inputIndexEnd;if(s.type==="tensor")return Cr(t.inputNames[s.inputIndexStart],e,n,o);if(s.type==="tensors")return t.inputNames.slice(a,u).map(m=>Cr(m,e,n,o));let l=Cr(t.inputNames.slice(a)[0],e,n,o),c=l.dataSync();return s.type==="number"?c[0]:y.toNestedArray(l.shape,c)}let i=t.attrParams[r];return i&&i.value}function Cr(r,t,e,n){let[o,s]=bn(r);if(n!=null){let a=n.getHashTableHandleByName(o);if(a!=null)return a}let i=e.currentContextIds.find(a=>!!t[Tb(o,a)]);return i!==void 0?t[Tb(o,i)][s]:void 0}function FD(r,t,e){return t[Tb(r,e.currentContextId)]}function Zs(r,t){let[e,n,o]=bn(r);return[Tb(e,t&&t.currentContextId),n,o]}function Tb(r,t){return t?`${r}-${t}`:r}function bn(r){let t=r.split(":");if(t.length===1)return[r,0,void 0];let e=t[0],n=t.length===3?t[1]:void 0,o=Number(t[t.length-1]);return[e,o,n]}function Oh(r,t,e){let n=I("pad",r,t,e);if(n==="explicit"){n=I("explicitPaddings",r,t,e);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Js(r){return r.kept?r:an(r)}var YS={};Ut(YS,{json:()=>QZ});var QZ=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var ZS={};Ut(ZS,{json:()=>t7});var t7=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var JS={};Ut(JS,{json:()=>e7});var e7=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var QS={};Ut(QS,{json:()=>r7});var r7=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var tN={};Ut(tN,{json:()=>n7});var n7=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var eN={};Ut(eN,{json:()=>o7});var o7=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var rN={};Ut(rN,{json:()=>s7});var s7=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var nN={};Ut(nN,{json:()=>i7});var i7=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var oN={};Ut(oN,{json:()=>a7});var a7=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var sN={};Ut(sN,{json:()=>l7});var l7=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var iN={};Ut(iN,{json:()=>u7});var u7=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var aN={};Ut(aN,{json:()=>c7});var c7=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var lN={};Ut(lN,{json:()=>p7});var p7=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var uN={};Ut(uN,{json:()=>m7});var m7=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var cN={};Ut(cN,{json:()=>f7});var f7=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var pN={};Ut(pN,{json:()=>d7});var d7=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var mN={};Ut(mN,{json:()=>h7});var h7=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var fN={};Ut(fN,{json:()=>g7});var g7=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var dN={};Ut(dN,{json:()=>x7});var x7=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var Ph=class{constructor(){let t=[YS,ZS,JS,QS,tN,eN,rN,nN,oN,sN,iN,aN,lN,uN,cN,pN,mN,fN,dN],e=[].concat(...t.map(n=>n.json));this.opMappers=e.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}static get Instance(){return this._instance||(this._instance=new this)}transformGraph(t,e={}){let n=t.node,o=[],s=[],i=[],a=n.reduce((h,g)=>(h[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?o.push(h[g.name]):g.op==="Const"?s.push(h[g.name]):(g.input==null||g.input.length===0)&&i.push(h[g.name]),h),{}),u=[],l=[],c={},p={};e!=null&&(c=this.mapSignatureEntries(e.inputs),p=this.mapSignatureEntries(e.outputs));let m=Object.keys(a);m.forEach(h=>{let g=a[h];g.inputNames.forEach((x,b)=>{let[w,,C]=Zs(x),N=a[w];if(N.outputs!=null){let _=N.outputs.indexOf(C);if(_!==-1){let A=`${w}:${_}`;g.inputNames[b]=A}}g.inputs.push(N),N.children.push(g)})}),Object.keys(p).length===0?m.forEach(h=>{let g=a[h];g.children.length===0&&l.push(g)}):Object.keys(p).forEach(h=>{let[g]=Zs(h),x=a[g];x!=null&&(x.signatureKey=p[h],l.push(x))}),Object.keys(c).length>0?Object.keys(c).forEach(h=>{let[g]=Zs(h),x=a[g];x&&(x.signatureKey=c[h],u.push(x))}):u=o;let f={};t.library!=null&&t.library.function!=null&&(f=t.library.function.reduce((h,g)=>(h[g.signature.name]=this.mapFunction(g),h),{}));let d={nodes:a,inputs:u,outputs:l,weights:s,placeholders:o,signature:e,functions:f};return i.length>0&&(d.initNodes=i),d}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){let e=Nb(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});let n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(o=>o.startsWith("^")?o.slice(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(n.inputParams=e.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),e.attrs!=null&&(n.attrParams=e.attrs.reduce((o,s)=>{let i=s.type,a;switch(s.type){case"string":a=kb(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=kb(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":a=Fb(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Fb(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":a=_b(t.attr,s.tfName,s.defaultValue||0),a===void 0&&s.tfDeprecatedName&&(a=_b(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":a=Rb(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Rb(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":a=Eb(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Eb(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":a=Pb(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Pb(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":a=Db(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Db(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":a=Ob(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Ob(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":a=Ab(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Ab(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":a=$b(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=$b(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":a=OD(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=OD(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${t.op}`)}return o[s.name]={value:a,type:i},o},{})),n}mapFunction(t){let e=t.nodeDef,n=[],o=[],s={};e!=null&&(s=e.reduce((p,m)=>(p[m.name]=this.mapNode(m),m.op==="Const"&&o.push(p[m.name]),p),{}));let i=[],a=[];t.signature.inputArg.forEach(p=>{let[m]=Zs(p.name),f={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:hN(p.type),type:"dtype"}},children:[]};f.signatureKey=p.name,i.push(f),s[m]=f}),Object.keys(s).forEach(p=>{let m=s[p];m.inputNames.forEach((f,d)=>{let[h,,g]=Zs(f),x=s[h];if(x.outputs!=null){let b=x.outputs.indexOf(g);if(b!==-1){let w=`${h}:${b}`;m.inputNames[d]=w}}m.inputs.push(x),x.children.push(m)})});let l=t.ret;t.signature.outputArg.forEach(p=>{let[m,f]=Zs(l[p.name]),d=s[m];d!=null&&(d.defaultOutput=f,a.push(d))});let c=this.mapArgsToSignature(t);return{nodes:s,inputs:i,outputs:a,weights:o,placeholders:n,signature:c}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n),e),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return e!=null&&(n=e[n]),{name:n,dtype:t.type}}};function y7(r){let t=M().global;if(typeof t.atob!="undefined")return t.atob(r);if(typeof Buffer!="undefined")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function PD(r,t){let e=Array.isArray(r)?String.fromCharCode.apply(null,r):y7(r);return t?e:e.toLowerCase()}function kb(r,t,e,n=!1){let o=r[t];return o!=null?PD(o.s,n):e}function Eb(r,t,e){let n=r[t];return n?n.b:e}function _b(r,t,e){let n=r[t]||{},o=n.i!=null?n.i:n.f!=null?n.f:e;return typeof o=="number"?o:parseInt(o,10)}function hN(r){switch(typeof r=="string"&&(r=io[r]),r){case io.DT_FLOAT:case io.DT_HALF:return"float32";case io.DT_INT32:case io.DT_INT64:case io.DT_INT8:case io.DT_UINT8:return"int32";case io.DT_BOOL:return"bool";case io.DT_DOUBLE:return"float32";case io.DT_STRING:return"string";default:return null}}function OD(r,t,e){let n=r[t];return n&&n.func?n.func.name:e}function Ab(r,t,e){let n=r[t];return n&&n.type?hN(n.type):e}function $b(r,t,e){let n=r[t];return n&&n.list&&n.list.type?n.list.type.map(o=>hN(o)):e}function LD(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Db(r,t,e){let n=r[t];return n&&n.shape?LD(n.shape):e}function Rb(r,t,e){let n=r[t];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):e}function Fb(r,t,e,n=!1){let o=r[t];return o&&o.list&&o.list.s?o.list.s.map(s=>PD(s,n)):e}function Ob(r,t,e){let n=r[t];return n&&n.list&&n.list.shape?n.list.shape.map(o=>LD(o)):e}function Pb(r,t,e){let n=r[t];return n&&n.list&&n.list.b?n.list.b:e}var Lb=class{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(o=>this.getInput(o)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(t){return Cr(t,this.tensorMap,this.context)}getAttr(t,e){let n=this.node.rawAttrs[t];if(n.tensor!=null)return Cr(t,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return _b(this.node.rawAttrs,t,e);if(n.s!=null)return kb(this.node.rawAttrs,t,e);if(n.b!=null)return Eb(this.node.rawAttrs,t,e);if(n.shape!=null)return Db(this.node.rawAttrs,t,e);if(n.type!=null)return Ab(this.node.rawAttrs,t,e);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Rb(this.node.rawAttrs,t,e);if(n.list.s!=null)return Fb(this.node.rawAttrs,t,e);if(n.list.shape!=null)return Ob(this.node.rawAttrs,t,e);if(n.list.b!=null)return Pb(this.node.rawAttrs,t,e);if(n.list.type!=null)return $b(this.node.rawAttrs,t,e)}return e}};var se={};Ut(se,{OP_SCOPE_SUFFIX:()=>A0,abs:()=>Ee,acos:()=>tx,acosh:()=>ex,add:()=>Y,addN:()=>uE,all:()=>Jp,any:()=>Gu,argMax:()=>Ai,argMin:()=>rx,asin:()=>nx,asinh:()=>ox,atan:()=>sx,atan2:()=>ix,atanh:()=>ax,avgPool:()=>Zl,avgPool3d:()=>lx,basicLSTMCell:()=>mE,batchNorm:()=>Ri,batchNorm2d:()=>ux,batchNorm3d:()=>cx,batchNorm4d:()=>px,batchToSpaceND:()=>Jl,bincount:()=>mx,booleanMaskAsync:()=>Oj,broadcastArgs:()=>dE,broadcastTo:()=>Fi,buffer:()=>bt,cast:()=>J,ceil:()=>fx,clipByValue:()=>vr,clone:()=>an,complex:()=>In,concat:()=>oe,concat1d:()=>dx,concat2d:()=>hx,concat3d:()=>gx,concat4d:()=>xx,conv1d:()=>tm,conv2d:()=>vn,conv2dTranspose:()=>rm,conv3d:()=>yx,conv3dTranspose:()=>wx,cos:()=>Ql,cosh:()=>nm,cosineWindow:()=>fh,cumprod:()=>Uu,cumsum:()=>om,denseBincount:()=>ah,depthToSpace:()=>Cx,depthwiseConv2d:()=>Oi,diag:()=>hE,dilation2d:()=>Ix,div:()=>ut,divNoNan:()=>vx,dot:()=>Sx,dropout:()=>nS,einsum:()=>xE,elu:()=>Pi,enclosingPowerOfTwo:()=>oS,equal:()=>Dr,erf:()=>Nx,euclideanNorm:()=>Tx,exp:()=>sr,expandDims:()=>ir,expm1:()=>kx,eye:()=>Hu,fft:()=>lu,fill:()=>yo,floor:()=>Li,floorDiv:()=>Zp,fused:()=>cu,gather:()=>Mi,gatherND:()=>Hj,greater:()=>Fe,greaterEqual:()=>un,ifft:()=>el,imag:()=>tu,image:()=>oo,inTopKAsync:()=>jj,irfft:()=>ym,isFinite:()=>Ex,isInf:()=>_x,isNaN:()=>Ax,leakyRelu:()=>eu,less:()=>sm,lessEqual:()=>Mn,linalg:()=>iS,linspace:()=>wE,localResponseNormalization:()=>$x,log:()=>Nr,log1p:()=>ru,logSigmoid:()=>Fx,logSoftmax:()=>im,logSumExp:()=>am,logicalAnd:()=>Fr,logicalNot:()=>nu,logicalOr:()=>lm,logicalXor:()=>Ox,losses:()=>j6,lowerBound:()=>CE,matMul:()=>Mt,max:()=>Sr,maxPool:()=>ou,maxPool3d:()=>Lx,maxPoolWithArgmax:()=>IE,maximum:()=>Sn,mean:()=>Ne,meshgrid:()=>vE,min:()=>Ja,minimum:()=>zi,mirrorPad:()=>Mx,mod:()=>zx,moments:()=>qu,movingAverage:()=>Mj,mul:()=>D,multiRNNCell:()=>SE,multinomial:()=>NE,neg:()=>qt,norm:()=>Qa,notEqual:()=>Gs,oneHot:()=>Bi,ones:()=>fr,onesLike:()=>wr,op:()=>T,outerProduct:()=>TE,pad:()=>pn,pad1d:()=>kE,pad2d:()=>EE,pad3d:()=>_E,pad4d:()=>AE,pool:()=>Bx,pow:()=>ln,prelu:()=>iu,print:()=>Qg,prod:()=>Vx,raggedGather:()=>$E,raggedRange:()=>DE,raggedTensorToTensor:()=>RE,rand:()=>FE,randomGamma:()=>e_,randomNormal:()=>Xu,randomStandardNormal:()=>r_,randomUniform:()=>Vi,range:()=>Gi,real:()=>tl,reciprocal:()=>Kx,relu:()=>Or,relu6:()=>um,reshape:()=>R,reverse:()=>dr,reverse1d:()=>n_,reverse2d:()=>o_,reverse3d:()=>s_,reverse4d:()=>i_,rfft:()=>uu,round:()=>cm,rsqrt:()=>pm,scalar:()=>pt,scatterND:()=>Bj,searchSorted:()=>uh,selu:()=>mm,separableConv2d:()=>fm,setdiff1dAsync:()=>a_,sigmoid:()=>Qr,sign:()=>jx,signal:()=>K6,sin:()=>dm,sinh:()=>hm,slice:()=>Rt,slice1d:()=>gm,slice2d:()=>ph,slice3d:()=>xm,slice4d:()=>Yu,softmax:()=>au,softplus:()=>Vs,spaceToBatchND:()=>su,sparse:()=>X6,sparseToDense:()=>Wj,spectral:()=>q6,split:()=>hr,sqrt:()=>Se,square:()=>zt,squaredDifference:()=>bm,squeeze:()=>zn,stack:()=>qe,step:()=>wo,stridedSlice:()=>Xx,string:()=>Y6,sub:()=>lt,sum:()=>mt,tan:()=>Yx,tanh:()=>Di,tensor:()=>or,tensor1d:()=>Ke,tensor2d:()=>Ws,tensor3d:()=>Zx,tensor4d:()=>l_,tensor5d:()=>u_,tensor6d:()=>c_,tile:()=>Rr,topk:()=>Jx,transpose:()=>Pt,truncatedNormal:()=>wm,unique:()=>Qx,unsortedSegmentSum:()=>Cm,unstack:()=>gr,upperBound:()=>p_,variable:()=>ty,where:()=>_e,whereAsync:()=>ry,zeros:()=>Te,zerosLike:()=>It});var MD=(r,t,e,n=se)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(I("a",r,t,e),I("b",r,t,e))];case"AddN":return[n.addN(I("tensors",r,t,e))];case"FloorMod":case"Mod":return[n.mod(I("a",r,t,e),I("b",r,t,e))];case"Mul":return[n.mul(I("a",r,t,e),I("b",r,t,e))];case"RealDiv":case"Div":return[n.div(I("a",r,t,e),I("b",r,t,e))];case"DivNoNan":return[n.divNoNan(I("a",r,t,e),I("b",r,t,e))];case"FloorDiv":return[n.floorDiv(I("a",r,t,e),I("b",r,t,e))];case"Sub":return[n.sub(I("a",r,t,e),I("b",r,t,e))];case"Minimum":return[n.minimum(I("a",r,t,e),I("b",r,t,e))];case"Maximum":return[n.maximum(I("a",r,t,e),I("b",r,t,e))];case"Pow":return[n.pow(I("a",r,t,e),I("b",r,t,e))];case"SquaredDifference":return[n.squaredDifference(I("a",r,t,e),I("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var zD=(r,t,e,n=se)=>{switch(r.op){case"Abs":case"ComplexAbs":return[n.abs(I("x",r,t,e))];case"Acos":return[n.acos(I("x",r,t,e))];case"Acosh":return[n.acosh(I("x",r,t,e))];case"Asin":return[n.asin(I("x",r,t,e))];case"Asinh":return[n.asinh(I("x",r,t,e))];case"Atan":return[n.atan(I("x",r,t,e))];case"Atan2":return[n.atan2(I("x",r,t,e),I("y",r,t,e))];case"Atanh":return[n.atanh(I("x",r,t,e))];case"Ceil":return[n.ceil(I("x",r,t,e))];case"Complex":return[n.complex(I("real",r,t,e),I("imag",r,t,e))];case"Cos":return[n.cos(I("x",r,t,e))];case"Cosh":return[n.cosh(I("x",r,t,e))];case"Elu":return[n.elu(I("x",r,t,e))];case"Erf":return[n.erf(I("x",r,t,e))];case"Exp":return[n.exp(I("x",r,t,e))];case"Expm1":return[n.expm1(I("x",r,t,e))];case"Floor":return[n.floor(I("x",r,t,e))];case"Log":return[n.log(I("x",r,t,e))];case"Log1p":return[n.log1p(I("x",r,t,e))];case"Imag":return[n.imag(I("x",r,t,e))];case"Neg":return[n.neg(I("x",r,t,e))];case"Reciprocal":return[n.reciprocal(I("x",r,t,e))];case"Real":return[n.real(I("x",r,t,e))];case"Relu":return[n.relu(I("x",r,t,e))];case"Round":return[n.round(I("x",r,t,e))];case"Selu":return[n.selu(I("x",r,t,e))];case"Sigmoid":return[n.sigmoid(I("x",r,t,e))];case"Sin":return[n.sin(I("x",r,t,e))];case"Sign":return[n.sign(I("x",r,t,e))];case"Sinh":return[n.sinh(I("x",r,t,e))];case"Softplus":return[n.softplus(I("x",r,t,e))];case"Sqrt":return[n.sqrt(I("x",r,t,e))];case"Square":return[n.square(I("x",r,t,e))];case"Tanh":return[n.tanh(I("x",r,t,e))];case"Tan":return[n.tan(I("x",r,t,e))];case"ClipByValue":return[n.clipByValue(I("x",r,t,e),I("clipValueMin",r,t,e),I("clipValueMax",r,t,e))];case"Relu6":return[n.relu6(I("x",r,t,e))];case"Rsqrt":return[n.rsqrt(Cr(r.inputNames[0],t,e))];case"Prod":return[n.prod(I("x",r,t,e),I("axes",r,t,e))];case"LeakyRelu":return[n.leakyRelu(I("x",r,t,e),I("alpha",r,t,e))];case"Prelu":return[n.prelu(I("x",r,t,e),I("alpha",r,t,e))];case"IsNan":return[n.isNaN(Cr(r.inputNames[0],t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Gn(r,t,e=""){if(!(typeof r=="number"||typeof t=="number")){y.assert(r.length===t.length,()=>e+` Shapes ${r} and ${t} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=t[n];y.assert(o<0||s<0||o===s,()=>e+` Shapes ${r} and ${t} must match`)}}}function BD(r){return!(typeof r=="number"||r.some(t=>t<0))}function Xf(r,t,e){let n=Mb(r,e),o=!BD(n);if(o&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&t.forEach(s=>{n=Mb(s.shape,n)}),!BD(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function Mb(r,t){if(typeof r=="number")return t;if(typeof t=="number")return r;if(r.length!==t.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${t}`);let e=[];for(let n=0;n<r.length;++n){let o=r[n],s=t[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${t}`);e[n]=o>=0?o:s}return e}var zb=class{constructor(t,e,n,o,s,i,a){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=o,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=pt(0),De(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);let e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),Gn(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,De(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((n,o)=>this.write(n,e[o]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let o=0;o<this.size();o++)t.push(o)}if(t.length===0)return or([],[0].concat(this.elementShape));let n=this.readMany(t);return Gn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),qe(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return or([],[0].concat(this.elementShape));let e=[];for(let o=0;o<this.size();o++)e.push(o);let n=this.readMany(e);return Gn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),oe(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,gr(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0,o=t.map(u=>(n+=u,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:e.size/n,i=[];B(()=>{e=R(e,[1,n,s]);for(let u=0;u<t.length;++u){let c=[0,u===0?0:o[u-1],0],p=[1,t[u],s];i[u]=R(Rt(e,c,p),this.elementShape)}return i});let a=[];for(let u=0;u<t.length;u++)a[u]=u;this.writeMany(a,i)}};var hl=class{constructor(t,e,n,o=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,t!=null&&t.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Gn(e,s.shape,"TensorList shape mismatch: "),De(s)}),this.idTensor=pt(0),this.maxNumElements=o,De(this.idTensor)}get id(){return this.idTensor.id}copy(){return new hl([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Gn(t,this.elementShape,"TensorList shape mismatch: ");let o=Xf(this.elementShape,this.tensors,t);return B(()=>{let s=this.tensors.map(i=>R(i,o));return qe(s,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Xf(this.elementShape,this.tensors,t),o=this.tensors.pop();return o.kept=!1,Gn(o.shape,t,"TensorList shape mismatch: "),R(o,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Gn(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");De(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let e=new hl([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let n=0;n<Math.min(this.tensors.length,t);++n)e.tensors[n]=this.tensors[n];return e}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);Gn(this.tensors[t].shape,e,"TensorList shape mismatch: ");let o=Xf(this.elementShape,this.tensors,e);return R(this.tensors[t],o)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Gn(this.elementShape,e.shape,"TensorList shape mismatch: "),De(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Gn(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());let o=Xf(this.elementShape,this.tensors,n);return t.length===0?or([],[0].concat(o)):B(()=>{let s=t.map(i=>R(this.tensors[i],o));return qe(s,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Gn(this.elementShape,e,"TensorList shape mismatch: ");let n=Xf(this.elementShape,this.tensors,e);return this.size()===0?or([],[0].concat(n)):B(()=>{let o=this.tensors.map(s=>R(s,n));return oe(o,0)})}};function VD(r,t,e){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==e)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${e}`);let o=r.shape.slice(1);Gn(o,t,"TensorList shape mismatch: ");let s=gr(r);return new hl(s,t,n)}function GD(r,t,e,n){return new hl([],r,t,n)}function WD(r,t,e,n){if(t.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${r.shape[0]}`);let o=Math.max(...t);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new hl([],e,r.dtype,n),i=gr(r,0);return t.forEach((a,u)=>{s.setItem(a,i[u])}),s}function UD(r,t,e){let n=0,o=t.map(c=>(n+=c,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),i=Mb(s,e),a=n===0?0:r.size/n,u=B(()=>{let c=[];r=R(r,[1,n,a]);for(let p=0;p<t.length;++p){let f=[0,p===0?0:o[p-1],0],d=[1,t[p],a];c[p]=R(Rt(r,f,d),i)}return r.dispose(),c}),l=new hl([],e,r.dtype,t.length);for(let c=0;c<u.length;c++)l.setItem(c,u[c]);return l}var HD=async(r,t,e)=>{switch(r.op){case"If":case"StatelessIf":{let n=I("thenBranch",r,t,e),o=I("elseBranch",r,t,e),s=I("cond",r,t,e),i=I("args",r,t,e);return(await s.data())[0]?e.functionMap[n].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap):e.functionMap[o].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{let n=I("body",r,t,e),o=I("cond",r,t,e),s=I("args",r,t,e),i=await e.functionMap[o].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap),a=s.map(c=>c.id),u=await i[0].data();i.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let l=s;for(;u[0];){let c=l;l=await e.functionMap[n].executeFunctionAsync(l,e.tensorArrayMap,e.tensorListMap);let p=l.map(f=>f.id);c.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()});let m=await e.functionMap[o].executeFunctionAsync(l,e.tensorArrayMap,e.tensorListMap);u=await m[0].data(),m.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()})}return l}case"LoopCond":{let n=I("pred",r,t,e);return[Js(n)]}case"Switch":{let n=I("pred",r,t,e),o=I("data",r,t,e);return o.kept||(o=Js(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>Cr(o,t,e)!==void 0);if(n){let o=Cr(n,t,e);return[Js(o)]}return}case"Enter":{let n=I("frameName",r,t,e),o=I("tensor",r,t,e);return e.enterFrame(n),[Js(o)]}case"Exit":{let n=I("tensor",r,t,e);return e.exitFrame(),[Js(n)]}case"NextIteration":{let n=I("tensor",r,t,e);return e.nextIteration(),[Js(n)]}case"TensorArrayV3":{let n=I("size",r,t,e),o=I("dtype",r,t,e),s=I("elementShape",r,t,e),i=I("dynamicSize",r,t,e),a=I("clearAfterRead",r,t,e),u=I("identicalElementShapes",r,t,e),l=I("name",r,t,e),c=new zb(l,o,n,s,u,i,a);return e.addTensorArray(c),[c.idTensor,pt(1)]}case"TensorArrayWriteV3":{let n=I("tensorArrayId",r,t,e),o=I("index",r,t,e),s=I("tensor",r,t,e),i=e.getTensorArray(n.id);return i.write(o,s),[i.idTensor]}case"TensorArrayReadV3":{let n=I("tensorArrayId",r,t,e),o=I("index",r,t,e);return[e.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=I("tensorArrayId",r,t,e),o=I("indices",r,t,e),s=I("dtype",r,t,e);return[e.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=I("tensorArrayId",r,t,e),o=I("indices",r,t,e),s=I("tensor",r,t,e),i=e.getTensorArray(n.id);return i.scatter(o,s),[i.idTensor]}case"TensorArrayConcatV3":{let n=I("tensorArrayId",r,t,e),o=e.getTensorArray(n.id),s=I("dtype",r,t,e);return[o.concat(s)]}case"TensorArraySplitV3":{let n=I("tensorArrayId",r,t,e),o=I("tensor",r,t,e),s=I("lengths",r,t,e),i=e.getTensorArray(n.id);return i.split(s,o),[i.idTensor]}case"TensorArraySizeV3":{let n=I("tensorArrayId",r,t,e),o=e.getTensorArray(n.id);return[pt(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=I("tensorArrayId",r,t,e),o=e.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=I("tensorListId",r,t,e),o=I("index",r,t,e),s=I("tensor",r,t,e),i=e.getTensorList(n.id);return i.setItem(o,s),[i.idTensor]}case"TensorListGetItem":{let n=I("tensorListId",r,t,e),o=I("index",r,t,e),s=I("elementShape",r,t,e),i=I("elementDType",r,t,e);return[e.getTensorList(n.id).getItem(o,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let n=I("indices",r,t,e),o=I("tensor",r,t,e),s=I("elementShape",r,t,e),i=I("numElements",r,t,e),a=WD(o,n,s,i);return e.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=I("elementShape",r,t,e),o=I("elementDType",r,t,e),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=I(s,r,t,e),a=r.op==="TensorListReserve"?-1:i,u=GD(n,o,i,a);return e.addTensorList(u),[u.idTensor]}case"TensorListGather":{let n=I("tensorListId",r,t,e),o=I("indices",r,t,e),s=I("elementShape",r,t,e),i=I("elementDType",r,t,e);return[e.getTensorList(n.id).gather(o,i,s)]}case"TensorListStack":{let n=I("tensorListId",r,t,e),o=I("elementShape",r,t,e),s=I("elementDType",r,t,e),i=I("numElements",r,t,e);return[e.getTensorList(n.id).stack(o,s,i)]}case"TensorListFromTensor":{let n=I("tensor",r,t,e),o=I("elementShape",r,t,e),s=I("elementDType",r,t,e),i=VD(n,o,s);return e.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=I("tensorListId",r,t,e),o=e.getTensorList(n.id),s=I("dtype",r,t,e),i=I("elementShape",r,t,e);return[o.concat(s,i)]}case"TensorListPushBack":{let n=I("tensorListId",r,t,e),o=I("tensor",r,t,e),s=e.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=I("tensorListId",r,t,e),o=I("elementShape",r,t,e),s=I("elementDType",r,t,e);return[e.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=I("tensor",r,t,e),o=I("elementShape",r,t,e),s=I("lengths",r,t,e),i=UD(n,s,o);return e.addTensorList(i),[i.idTensor]}case"TensorListLength":{let n=I("tensorListId",r,t,e),o=e.getTensorList(n.id);return[pt(o.size(),"int32")]}case"TensorListResize":{let n=I("tensorListId",r,t,e),o=I("size",r,t,e),i=e.getTensorList(n.id).resize(o);return e.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function qD(r,t,e){let[n,o]=I("fusedOps",r,t,e),s=n==="biasadd",i=!s,a=o==="prelu",u=n==="fusedbatchnorm",l=I("numArgs",r,t,e);if(s){if(a&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&s&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=I("strides",r,t,e),p=Oh(r,t,e),m=I("dataFormat",r,t,e).toUpperCase(),f=I("dilations",r,t,e),[d,h]=I("args",r,t,e);i&&(h=d,d=void 0);let g=I("leakyreluAlpha",r,t,e);return{stride:c,pad:p,dataFormat:m,dilations:f,biasArg:d,preluArg:h,activationFunc:o,leakyreluAlpha:g}}var KD=(r,t,e,n=se)=>{switch(r.op){case"Conv1D":{let o=I("stride",r,t,e),s=I("pad",r,t,e),i=I("dataFormat",r,t,e).toUpperCase(),a=I("dilation",r,t,e);return[n.conv1d(I("x",r,t,e),I("filter",r,t,e),o,s,i,a)]}case"Conv2D":{let o=I("strides",r,t,e),s=Oh(r,t,e),i=I("dataFormat",r,t,e).toUpperCase(),a=I("dilations",r,t,e);return[n.conv2d(I("x",r,t,e),I("filter",r,t,e),[o[1],o[2]],s,i,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:o,pad:s,dataFormat:i,dilations:a,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:p}=qD(r,t,e);return[n.fused.conv2d({x:I("x",r,t,e),filter:I("filter",r,t,e),strides:[o[1],o[2]],pad:s,dataFormat:i,dilations:[a[1],a[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:o,pad:s,dataFormat:i,dilations:a,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:p}=qD(r,t,e);return[n.fused.depthwiseConv2d({x:I("x",r,t,e),filter:I("filter",r,t,e),strides:[o[1],o[2]],pad:s,dataFormat:i,dilations:[a[1],a[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let o=I("outputShape",r,t,e),s=I("strides",r,t,e),i=Oh(r,t,e);return[n.conv2dTranspose(I("x",r,t,e),I("filter",r,t,e),o,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let o=I("strides",r,t,e),s=Oh(r,t,e),i=I("dilations",r,t,e),a=I("dataFormat",r,t,e).toUpperCase();return[n.depthwiseConv2d(I("input",r,t,e),I("filter",r,t,e),[o[1],o[2]],s,a,[i[1],i[2]])]}case"Conv3D":{let o=I("strides",r,t,e),s=I("pad",r,t,e),i=I("dataFormat",r,t,e).toUpperCase(),a=I("dilations",r,t,e);return[n.conv3d(I("x",r,t,e),I("filter",r,t,e),[o[1],o[2],o[3]],s,i,[a[1],a[2],a[3]])]}case"AvgPool":{let o=I("strides",r,t,e),s=I("pad",r,t,e),i=I("kernelSize",r,t,e);return[n.avgPool(I("x",r,t,e),[i[1],i[2]],[o[1],o[2]],s)]}case"MaxPool":{let o=I("strides",r,t,e),s=I("pad",r,t,e),i=I("kernelSize",r,t,e);return[n.maxPool(I("x",r,t,e),[i[1],i[2]],[o[1],o[2]],s)]}case"MaxPoolWithArgmax":{let o=I("strides",r,t,e),s=I("pad",r,t,e),i=I("kernelSize",r,t,e),a=I("includeBatchInIndex",r,t,e),{result:u,indexes:l}=n.maxPoolWithArgmax(I("x",r,t,e),[i[1],i[2]],[o[1],o[2]],s,a);return[u,l]}case"AvgPool3D":{let o=I("strides",r,t,e),s=I("pad",r,t,e),i=I("kernelSize",r,t,e);return[n.avgPool3d(I("x",r,t,e),[i[1],i[2],i[3]],[o[1],o[2],o[3]],s)]}case"MaxPool3D":{let o=I("strides",r,t,e),s=I("pad",r,t,e),i=I("kernelSize",r,t,e);return[n.maxPool3d(I("x",r,t,e),[i[1],i[2],i[3]],[o[1],o[2],o[3]],s)]}case"Dilation2D":{let o=I("strides",r,t,e),s=I("pad",r,t,e),i=I("dilations",r,t,e),a=o[1],u=o[2],l=i[1],c=i[2];return[n.dilation2d(I("x",r,t,e),I("filter",r,t,e),[a,u],s,[l,c],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var jD=(r,t,e,n=se)=>{switch(r.op){case"Fill":{let o=I("shape",r,t,e),s=I("dtype",r,t,e),i=I("value",r,t,e);return[n.fill(o,i,s)]}case"LinSpace":{let o=I("start",r,t,e),s=I("stop",r,t,e),i=I("num",r,t,e);return[n.linspace(o,s,i)]}case"Multinomial":{let o=I("logits",r,t,e),s=I("numSamples",r,t,e),i=I("seed",r,t,e);return[n.multinomial(o,s,i)]}case"OneHot":{let o=I("indices",r,t,e),s=I("depth",r,t,e),i=I("onValue",r,t,e),a=I("offValue",r,t,e),u=I("dtype",r,t,e);return[n.oneHot(o,s,i,a,u)]}case"Ones":return[n.ones(I("shape",r,t,e),I("dtype",r,t,e))];case"OnesLike":return[n.onesLike(I("x",r,t,e))];case"RandomStandardNormal":return[n.randomStandardNormal(I("shape",r,t,e),I("dtype",r,t,e),I("seed",r,t,e))];case"RandomUniform":return[n.randomUniform(I("shape",r,t,e),I("minval",r,t,e),I("maxval",r,t,e),I("dtype",r,t,e))];case"Range":{let o=I("start",r,t,e),s=I("stop",r,t,e),i=I("step",r,t,e);return[n.range(o,s,i,I("dtype",r,t,e))]}case"TruncatedNormal":{let o=I("shape",r,t,e),s=I("mean",r,t,e),i=I("stdDev",r,t,e),a=I("seed",r,t,e);return[n.truncatedNormal(o,s,i,I("dtype",r,t,e),a)]}case"Zeros":return[n.zeros(I("shape",r,t,e),I("dtype",r,t,e))];case"ZerosLike":return[n.zerosLike(I("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function gN(r,t,e){let n=I("boxes",r,t,e),o=I("scores",r,t,e),s=I("maxOutputSize",r,t,e),i=I("iouThreshold",r,t,e),a=I("scoreThreshold",r,t,e),u=I("softNmsSigma",r,t,e);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a,softNmsSigma:u}}var XD=async(r,t,e,n,o=se)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:i,maxOutputSize:a,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=gN(r,t,e),p=await o.image.nonMaxSuppressionWithScoreAsync(s,i,a,u,l,c);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:i,maxOutputSize:a,iouThreshold:u,scoreThreshold:l}=gN(r,t,e),c=I("padToMaxOutputSize",r,t,e),p=await o.image.nonMaxSuppressionPaddedAsync(s,i,a,u,l,c);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:i,maxOutputSize:a,iouThreshold:u,scoreThreshold:l}=gN(r,t,e);return[await o.image.nonMaxSuppressionAsync(s,i,a,u,l)]}case"Where":{let s=o.cast(I("condition",r,t,e),"bool"),i=[await o.whereAsync(s)];return s.dispose(),i}case"ListDiff":return o.setdiff1dAsync(I("x",r,t,e),I("y",r,t,e));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var YD=(r,t,e,n=se)=>{switch(r.op){case"LowerBound":{let o=I("sortedSequence",r,t,e),s=I("values",r,t,e);return[n.lowerBound(o,s)]}case"TopKV2":{let o=I("x",r,t,e),s=I("k",r,t,e),i=I("sorted",r,t,e),a=n.topk(o,s,i);return[a.values,a.indices]}case"UpperBound":{let o=I("sortedSequence",r,t,e),s=I("values",r,t,e);return[n.upperBound(o,s)]}case"Unique":{let o=I("x",r,t,e),s=n.unique(o);return[s.values,s.indices]}case"UniqueV2":{let o=I("x",r,t,e),s=I("axis",r,t,e),i=n.unique(o,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var ZD=(r,t,e,n=se)=>{switch(r.op){case"Const":return t[r.name];case"PlaceholderWithDefault":let o=I("default",r,t,e);return[Cr(r.name,t,e)||o];case"Placeholder":return[Cr(r.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=I("x",r,t,e);return[Js(c)]}case"IdentityN":return I("x",r,t,e).map(c=>Js(c));case"Snapshot":let s=I("x",r,t,e);return[Js(s)];case"Shape":return[n.tensor1d(I("x",r,t,e).shape,"int32")];case"ShapeN":return I("x",r,t,e).map(c=>n.tensor1d(c.shape));case"Size":return[n.scalar(I("x",r,t,e).size,"int32")];case"Rank":return[n.scalar(I("x",r,t,e).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let i=I("x",r,t,e),a=I("data",r,t,e),u=I("message",r,t,e),l=I("summarize",r,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,l));return[i];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Bb=class{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=pt(0),this.tensorMap=new Map,De(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return pt(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);let n=await t.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),B(()=>{let o=gr(e),s=n.length,i=o.length;y.assert(s===i,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${i} elements.`);for(let a=0;a<s;a++){let u=n[a],l=o[a];De(l),this.tensorMap.set(u,l)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);let n=await t.data();return B(()=>{let o=[];for(let s=0;s<n.length;s++){let i=n[s],a=this.findWithDefault(i,e);o.push(a)}return qe(o)})}findWithDefault(t,e){let n=this.tensorMap.get(t);return n!=null?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}};var JD=async(r,t,e,n)=>{switch(r.op){case"HashTable":case"HashTableV2":{let o=n.getHashTableHandleByName(r.name);if(o!=null)return[o];{let s=I("keyDType",r,t,e),i=I("valueDType",r,t,e),a=new Bb(s,i);return n.addHashTable(r.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let o=I("tableHandle",r,t,e,n),s=I("keys",r,t,e),i=I("values",r,t,e);return[await n.getHashTableById(o.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let o=I("tableHandle",r,t,e,n),s=I("keys",r,t,e),i=I("defaultValue",r,t,e);return[await n.getHashTableById(o.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=I("tableHandle",r,t,e,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var QD=(r,t,e,n=se)=>{switch(r.op){case"ResizeBilinear":{let o=I("images",r,t,e),s=I("size",r,t,e),i=I("alignCorners",r,t,e),a=I("halfPixelCenters",r,t,e);return[n.image.resizeBilinear(o,[s[0],s[1]],i,a)]}case"ResizeNearestNeighbor":{let o=I("images",r,t,e),s=I("size",r,t,e),i=I("alignCorners",r,t,e),a=I("halfPixelCenters",r,t,e);return[n.image.resizeNearestNeighbor(o,[s[0],s[1]],i,a)]}case"CropAndResize":{let o=I("image",r,t,e),s=I("boxes",r,t,e),i=I("boxInd",r,t,e),a=I("cropSize",r,t,e),u=I("method",r,t,e),l=I("extrapolationValue",r,t,e);return[n.image.cropAndResize(o,s,i,a,u,l)]}case"ImageProjectiveTransformV3":{let o=I("images",r,t,e),s=I("transforms",r,t,e),i=I("outputShape",r,t,e),a=I("fillValue",r,t,e),u=I("interpolation",r,t,e),l=I("fillMode",r,t,e);return[n.image.transform(o,s,u.toLowerCase(),l.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var tR=(r,t,e,n=se)=>{switch(r.op){case"Equal":return[n.equal(I("a",r,t,e),I("b",r,t,e))];case"NotEqual":return[n.notEqual(I("a",r,t,e),I("b",r,t,e))];case"Greater":return[n.greater(I("a",r,t,e),I("b",r,t,e))];case"GreaterEqual":return[n.greaterEqual(I("a",r,t,e),I("b",r,t,e))];case"Less":return[n.less(I("a",r,t,e),I("b",r,t,e))];case"LessEqual":return[n.lessEqual(I("a",r,t,e),I("b",r,t,e))];case"LogicalAnd":return[n.logicalAnd(I("a",r,t,e),I("b",r,t,e))];case"LogicalNot":return[n.logicalNot(I("a",r,t,e))];case"LogicalOr":return[n.logicalOr(I("a",r,t,e),I("b",r,t,e))];case"Select":case"SelectV2":return[n.where(I("condition",r,t,e),I("a",r,t,e),I("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var eR=(r,t,e,n=se)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(I("a",r,t,e),I("b",r,t,e),I("transposeA",r,t,e),I("transposeB",r,t,e))];case"Einsum":return[n.einsum(I("equation",r,t,e),...I("tensors",r,t,e))];case"Transpose":return[n.transpose(I("x",r,t,e),I("perm",r,t,e))];case"_FusedMatMul":let[o,s]=I("fusedOps",r,t,e),i=o==="biasadd",a=s==="prelu",u=I("numArgs",r,t,e),l=I("leakyreluAlpha",r,t,e);if(i){if(a&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,p]=I("args",r,t,e);return[n.fused.matMul({a:I("a",r,t,e),b:I("b",r,t,e),transposeA:I("transposeA",r,t,e),transposeB:I("transposeB",r,t,e),bias:c,activation:s,preluActivationWeights:p,leakyreluAlpha:l})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var rR=(r,t,e,n=se)=>{switch(r.op){case"EuclideanNorm":return[n.euclideanNorm(I("x",r,t,e),I("axis",r,t,e),I("keepDims",r,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(I("x",r,t,e),I("mean",r,t,e),I("variance",r,t,e),I("offset",r,t,e),I("scale",r,t,e),I("epsilon",r,t,e))];case"FusedBatchNormV3":return[n.batchNorm(I("x",r,t,e),I("mean",r,t,e),I("variance",r,t,e),I("offset",r,t,e),I("scale",r,t,e),I("epsilon",r,t,e))];case"LRN":return[n.localResponseNormalization(I("x",r,t,e),I("radius",r,t,e),I("bias",r,t,e),I("alpha",r,t,e),I("beta",r,t,e))];case"Softmax":return[n.softmax(I("x",r,t,e))];case"LogSoftmax":return[n.logSoftmax(I("x",r,t,e))];case"SparseToDense":return[n.sparseToDense(I("sparseIndices",r,t,e),I("outputShape",r,t,e),I("sparseValues",r,t,e),I("defaultValue",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var nR=(r,t,e,n=se)=>{switch(r.op){case"RaggedGather":{let{outputNestedSplits:o,outputDenseValues:s}=n.raggedGather(I("paramsNestedSplits",r,t,e),I("paramsDenseValues",r,t,e),I("indices",r,t,e),I("outputRaggedRank",r,t,e));return o.concat(s)}case"RaggedRange":{let{rtNestedSplits:o,rtDenseValues:s}=n.raggedRange(I("starts",r,t,e),I("limits",r,t,e),I("splits",r,t,e));return[o,s]}case"RaggedTensorToTensor":return[n.raggedTensorToTensor(I("shape",r,t,e),I("values",r,t,e),I("defaultValue",r,t,e),I("rowPartitionTensors",r,t,e),I("rowPartitionTypes",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var oR=(r,t,e,n=se)=>{switch(r.op){case"Max":{let a=I("axis",r,t,e),u=I("keepDims",r,t,e);return[n.max(I("x",r,t,e),a,u)]}case"Mean":{let a=I("axis",r,t,e),u=I("keepDims",r,t,e);return[n.mean(I("x",r,t,e),a,u)]}case"Min":{let a=I("axis",r,t,e),u=I("keepDims",r,t,e);return[n.min(I("x",r,t,e),a,u)]}case"Sum":{let a=I("axis",r,t,e),u=I("keepDims",r,t,e);return[n.sum(I("x",r,t,e),a,u)]}case"All":{let a=I("axis",r,t,e),u=I("keepDims",r,t,e);return[n.all(I("x",r,t,e),a,u)]}case"Any":{let a=I("axis",r,t,e),u=I("keepDims",r,t,e);return[n.any(I("x",r,t,e),a,u)]}case"ArgMax":{let a=I("axis",r,t,e);return[n.argMax(I("x",r,t,e),a)]}case"ArgMin":{let a=I("axis",r,t,e);return[n.argMin(I("x",r,t,e),a)]}case"Prod":{let a=I("axis",r,t,e),u=I("keepDims",r,t,e);return[n.prod(I("x",r,t,e),a,u)]}case"Cumprod":{let a=I("axis",r,t,e),u=I("exclusive",r,t,e),l=I("reverse",r,t,e);return[n.cumprod(I("x",r,t,e),a,u,l)]}case"Cumsum":{let a=I("axis",r,t,e),u=I("exclusive",r,t,e),l=I("reverse",r,t,e);return[n.cumsum(I("x",r,t,e),a,u,l)]}case"Bincount":let o=I("x",r,t,e),s=I("weights",r,t,e),i=I("size",r,t,e);return[n.bincount(o,s,i)];case"DenseBincount":{let a=I("x",r,t,e),u=I("weights",r,t,e),l=I("size",r,t,e),c=I("binaryOutput",r,t,e);return[n.denseBincount(a,u,l,c)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var sR=(r,t,e,n=se)=>{switch(r.op){case"ConcatV2":case"Concat":{let o=I("n",r,t,e),s=I("axis",r,t,e),i=I("tensors",r,t,e);return i=i.slice(0,o),[n.concat(i,s)]}case"Gather":{let o=I("x",r,t,e),s=I("indices",r,t,e);return[n.gather(o,n.cast(s,"int32"),0)]}case"GatherV2":{let o=I("axis",r,t,e),s=I("batchDims",r,t,e),i=I("x",r,t,e),a=I("indices",r,t,e);return[n.gather(i,n.cast(a,"int32"),o,s)]}case"Reverse":{let o=I("dims",r,t,e),s=[];for(let a=0;a<o.length;a++)o[a]&&s.push(a);let i=I("x",r,t,e);return[n.reverse(i,s)]}case"ReverseV2":{let o=I("axis",r,t,e),s=I("x",r,t,e);return[n.reverse(s,o)]}case"Slice":{let o=I("begin",r,t,e),s=I("size",r,t,e);return[n.slice(I("x",r,t,e),o,s)]}case"StridedSlice":{let o=I("begin",r,t,e),s=I("end",r,t,e),i=I("strides",r,t,e),a=I("beginMask",r,t,e),u=I("endMask",r,t,e),l=I("ellipsisMask",r,t,e),c=I("newAxisMask",r,t,e),p=I("shrinkAxisMask",r,t,e),m=I("x",r,t,e);return[n.stridedSlice(m,o,s,i,a,u,l,c,p)]}case"Pack":return B(()=>{let o=I("axis",r,t,e),s=I("tensors",r,t,e),i=s[0].shape,a=n.squeeze(s[0]).shape,u=s.map(l=>{let c=y.arraysEqual(l.shape,i);if(!c&&!y.arraysEqual(n.squeeze(l).shape,a))throw new Error("the input tensors shape does not match");return c?l:n.reshape(l,i)});return[n.stack(u,o)]});case"Unpack":{let o=I("axis",r,t,e),s=I("tensor",r,t,e);return n.unstack(s,o)}case"Tile":{let o=I("reps",r,t,e);return[n.tile(I("x",r,t,e),o)]}case"Split":case"SplitV":{let o=I("axis",r,t,e),s=I("numOrSizeSplits",r,t,e),i=I("x",r,t,e);return n.split(i,s,o)}case"ScatterNd":{let o=I("indices",r,t,e),s=I("values",r,t,e),i=I("shape",r,t,e);return[n.scatterND(o,s,i)]}case"GatherNd":{let o=I("x",r,t,e),s=I("indices",r,t,e);return[n.gatherND(o,s)]}case"SparseToDense":{let o=I("sparseIndices",r,t,e),s=I("outputShape",r,t,e),i=I("sparseValues",r,t,e),a=I("defaultValue",r,t,e);return[n.sparseToDense(o,i,s,i.dtype===a.dtype?a:n.cast(a,i.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var iR=(r,t,e,n=se)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:o,outputValues:s,emptyRowIndicator:i,reverseIndexMap:a}=n.sparse.sparseFillEmptyRows(I("indices",r,t,e),I("values",r,t,e),I("denseShape",r,t,e),I("defaultValue",r,t,e));return[o,s,i,a]}case"SparseReshape":{let{outputIndices:o,outputShape:s}=n.sparse.sparseReshape(I("inputIndices",r,t,e),I("inputShape",r,t,e),I("newShape",r,t,e));return[o,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(I("data",r,t,e),I("indices",r,t,e),I("segmentIds",r,t,e))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(I("data",r,t,e),I("indices",r,t,e),I("segmentIds",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var aR=(r,t,e,n=se)=>{switch(r.op){case"FFT":return[n.fft(I("x",r,t,e))];case"IFFT":return[n.ifft(I("x",r,t,e))];case"RFFT":return[n.rfft(I("x",r,t,e))];case"IRFFT":return[n.irfft(I("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var lR=(r,t,e,n=se)=>{switch(r.op){case"StringNGrams":{let{nGrams:o,nGramsSplits:s}=n.string.stringNGrams(I("data",r,t,e),I("dataSplits",r,t,e),I("separator",r,t,e),I("nGramWidths",r,t,e),I("leftPad",r,t,e),I("rightPad",r,t,e),I("padWidth",r,t,e),I("preserveShortSequences",r,t,e));return[o,s]}case"StringSplit":{let{indices:o,values:s,shape:i}=n.string.stringSplit(I("input",r,t,e),I("delimiter",r,t,e),I("skipEmpty",r,t,e));return[o,s,i]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(I("input",r,t,e),I("numBuckets",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var uR=(r,t,e,n=se)=>{switch(r.op){case"Cast":return[n.cast(I("x",r,t,e),I("dtype",r,t,e))];case"ExpandDims":{let o=I("axis",r,t,e);return[n.expandDims(I("x",r,t,e),o)]}case"Squeeze":{let o=I("axis",r,t,e);return[n.squeeze(I("x",r,t,e),o)]}case"Reshape":return[n.reshape(I("x",r,t,e),I("shape",r,t,e))];case"MirrorPad":return[n.mirrorPad(I("x",r,t,e),I("padding",r,t,e),I("mode",r,t,e))];case"PadV2":case"Pad":return[n.pad(I("x",r,t,e),I("padding",r,t,e),I("constantValue",r,t,e))];case"SpaceToBatchND":{let o=I("blockShape",r,t,e),s=I("paddings",r,t,e);return[n.spaceToBatchND(I("x",r,t,e),o,s)]}case"BatchToSpaceND":{let o=I("blockShape",r,t,e),s=I("crops",r,t,e);return[n.batchToSpaceND(I("x",r,t,e),o,s)]}case"DepthToSpace":{let o=I("blockSize",r,t,e),s=I("dataFormat",r,t,e).toUpperCase();return[n.depthToSpace(I("x",r,t,e),o,s)]}case"BroadcastTo":return[n.broadcastTo(I("x",r,t,e),I("shape",r,t,e))];case"BroadcastArgs":return[n.broadcastArgs(I("s0",r,t,e),I("s1",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function xN(r,t,e,n,o=B){let s=((i,a,u)=>{switch(i.category){case"arithmetic":return o(()=>MD(i,a,u));case"basic_math":return o(()=>zD(i,a,u));case"control":return HD(i,a,u);case"convolution":return o(()=>KD(i,a,u));case"creation":return o(()=>jD(i,a,u));case"dynamic":return XD(i,a,u);case"evaluation":return o(()=>YD(i,a,u));case"image":return o(()=>QD(i,a,u));case"graph":return o(()=>ZD(i,a,u));case"logical":return o(()=>tR(i,a,u));case"matrices":return o(()=>eR(i,a,u));case"normalization":return o(()=>rR(i,a,u));case"ragged":return o(()=>nR(i,a,u));case"reduction":return o(()=>oR(i,a,u));case"slice_join":return o(()=>sR(i,a,u));case"sparse":return o(()=>iR(i,a,u));case"spectral":return o(()=>aR(i,a,u));case"string":return o(()=>lR(i,a,u));case"transformation":return o(()=>uR(i,a,u));case"hash_table":return JD(i,a,u,n);case"custom":let l=Nb(i.op);if(l&&l.customExecutor)return l.customExecutor(new Lb(i,a,u));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,t,e);return y.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var Lh=class{constructor(t={},e={},n={},o={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){let n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(let e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(let e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}};function yN(r,t,e,n){let o=new Set,s=[],i=null,a=null,u=new Set,l=Object.keys(r).map(m=>bn(m)[0]),c=[];n!=null&&(c=n.map(m=>bn(m.name)[0]));let p=[...t];for(;p.length>0;){let m=p.pop();if((bN(m)||G7(m)||W7(m))&&i==null&&(i=m,a=i.children.map(f=>f.name).filter(f=>o.has(f))),o.add(m.name),e[m.name]==null&&l.indexOf(m.name)===-1&&c.indexOf(m.name)===-1){if(m.inputs.length===0){s.push(m.name);continue}m.inputs.forEach(f=>{u.has(f.name)||(u.add(f.name),p.push(f))})}}return{inputs:r,outputs:t,usedNodes:o,missingInputs:s,dynamicNode:i,syncInputs:a}}function cR(r,t,e){let{usedNodes:n,inputs:o}=e,s=[],i=Object.keys(o).map(c=>bn(c)[0]).map(c=>r.nodes[c]),a=r.initNodes;i.forEach(c=>{n.has(c.name)&&s.push(c)}),r.weights.forEach(c=>{n.has(c.name)&&s.push(c)}),a!=null&&a.forEach(c=>{n.has(c.name)&&s.push(c)});let u=new Set,l=[];for(;s.length>0;){let c=s.pop();u.add(c.name),t[c.name]||l.push(c),c.children.forEach(p=>{!u.has(p.name)&&n.has(p.name)&&p.inputs.every(m=>u.has(m.name))&&s.push(p)})}return l}var z7=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],B7=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],V7=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function bN(r){return z7.indexOf(r.op)>=0}function G7(r){return B7.indexOf(r.op)>=0}function W7(r){return V7.indexOf(r.op)>=0}var kc=class{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(n=>{this._functionExecutorMap[n]=new kc(t.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let e=Object.keys(t).map(n=>t[n].map(o=>o.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){let n=t.map(s=>s.name).sort(),o=e.map(s=>s.name).sort();return n.join(this.SEPERATOR)+"--"+o.join(this.SEPERATOR)}compile(t,e){let n=yN(t,e,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:i}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(o.length>0){let a=e.map(l=>l.name),u=Object.keys(t);throw new Error(`Cannot compute the outputs [${a}] from the provided inputs [${u}]. Missing the following inputs: [${o}]`)}return cR(this.graph,this.weightMap,n)}cloneAndKeepTensor(t){if(t==null)return null;let e=t.clone();return De(e),e}cloneTensorList(t){return t?t.map(n=>this.cloneAndKeepTensor(n)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,n])=>[e,this.cloneTensorList(n)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);let n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);let o=n.map(p=>this.graph.nodes[bn(p)[0]]),s=e.map(p=>bn(p)[0]),i=s.map(p=>this.graph.nodes[p]);i.length===0&&(i=this._outputs);let a=this.getCompilationKey(o,i),u=this.compiledMap.get(a);u==null&&(u=this.compile(t,i),this.compiledMap.set(a,u));try{this.keepIntermediateTensors=M().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}let l={},c={};return B(()=>{let p=new Lh(this.weightMap,l,c,this.functionExecutorMap),m=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(h=>{let[g,x]=bn(h),b=[];b[x]=t[h],m[g]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[g]=this.cloneTensorList(b))});let f=this.getFrozenTensorIds(m),d={};for(let h=0;h<u.length;h++){let g=u[h];if(!m[g.name]){let x=xN(g,m,p,this._resourceManager);if(y.isPromise(x))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);m[g.name]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(x)),this.checkTensorForDisposal(g.name,g,m,p,f,s,d)}}return this.parent==null&&p.dispose(f),e.map(h=>Cr(h,m,p))})}getFrozenTensorIds(t){let e=[].concat.apply([],Object.keys(t).map(n=>t[n]).map(n=>n.map(o=>o.id)));return new Set(e)}checkTensorForDisposal(t,e,n,o,s,i,a){e.category==="control"||i.indexOf(t)!==-1||(n[t].forEach(u=>{u!=null&&(a[u.id]=(a[u.id]||0)+e.children.length)}),e.inputs.forEach(u=>{if(u.category!=="control"){let l=FD(u.name,n,o);l!=null&&l.forEach(c=>{if(c&&!c.kept&&!s.has(c.id)){let p=a[c.id];p===1?(c.dispose(),delete a[c.id]):p!=null&&a[c.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(let e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(t,e,n=!1,o={},s={}){this.disposeIntermediateTensors(),n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepIntermediateTensors=M().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}let i=new Lh(this.weightMap,o,s,this.functionExecutorMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let a=await this.executeWithControlFlow(t,i,e,n),u=e.map(m=>Cr(m,a,i)),l=u.map(m=>m.id),c=Object.keys(t).map(m=>t[m].id),p=new Set([...l,...c,...this.weightIds]);return Object.values(a).forEach(m=>{m.forEach(f=>{f&&!f.isDisposed&&!p.has(f.id)&&f.dispose()})}),this.parent==null&&i.dispose(p),u}async executeFunctionAsync(t,e,n){let o=t.reduce((s,i,a)=>(s[this.inputs[a].name]=i,s),{});return this._executeAsync(o,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,o){let s=Object.keys(t),i=s.map(w=>this.graph.nodes[bn(w)[0]]),a=n.map(w=>bn(w)[0]),u=a.map(w=>this.graph.nodes[w]);u.length===0&&(u=this._outputs);let{usedNodes:l,missingInputs:c,dynamicNode:p,syncInputs:m}=yN(t,u,this.weightMap,this._initNodes),f=[...i,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:e.currentContext})),d=Object.assign({},this.weightMap);Object.keys(t).forEach(w=>{let[C,N]=bn(w),_=[];_[N]=t[w],d[C]=_});let h={},g=this.getFrozenTensorIds(d),x={};for(;f.length>0;){let w=this.processStack(i,f,e,d,x,g,a,h,l);await Promise.all(w)}p==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=u.filter(w=>!bN(w)&&!Cr(w.name,d,e)).map(w=>w.name);if(b.length>0){let w="";throw p!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${w}`)}return d}processStack(t,e,n,o,s,i,a,u,l){let c=[];for(;e.length>0;){let p=e.pop();n.currentContext=p.contexts;let m="";if(p.node.op==="Enter"&&I("isConstant",p.node,o,n)&&([m]=Zs(p.node.name,n)),o[p.node.name]==null){let f=xN(p.node,o,n,this._resourceManager);m||([m]=Zs(p.node.name,n));let d=n.currentContext;y.isPromise(f)?c.push(f.then(h=>(o[m]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(h)),n.currentContext=d,this.checkTensorForDisposal(m,p.node,o,n,i,a,u),this.processChildNodes(p.node,e,n,o,s,l),h))):(o[m]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(f)),this.checkTensorForDisposal(m,p.node,o,n,i,a,u),this.processChildNodes(p.node,e,n,o,s,l))}else this.processChildNodes(p.node,e,n,o,s,l)}return c}processChildNodes(t,e,n,o,s,i){t.children.forEach(a=>{let[u]=Zs(a.name,n);s[u]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(l=>!!Cr(l,o,n))&&(s[u]=!0,e.push({contexts:n.currentContext,node:a})):a.inputNames.every(l=>!!Cr(l,o,n))&&(s[u]=!0,e.push({contexts:n.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{let n=t[e],[o]=bn(e),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let i=s.attrParams.shape.value,a=i.length===n.shape.length&&n.shape.every((u,l)=>i[l]===-1||i[l]===u);y.assert(a,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${i}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&y.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){var e,n;let o={};for(let s in t){let i=(n=(e=this._signature)===null||e===void 0?void 0:e.inputs)===null||n===void 0?void 0:n[s];i!=null?o[i.name]=t[s]:o[s]=t[s]}return o}checkInputs(t){let e=Object.keys(t).filter(n=>{let[o]=bn(n);return this.graph.nodes[o]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{var n,o;let s=(o=(n=this._signature)===null||n===void 0?void 0:n.outputs)===null||o===void 0?void 0:o[e];return s!=null?s.name:e},{})}checkOutputs(t){t.forEach(e=>{let[n]=bn(e);if(!this.graph.nodes[n])throw new Error(`The output '${e}' is not found in the graph`)})}};var Vb=class{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(let t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(let t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}};var U7="?tfjs-format=file",H7="model.json",Mh=class{constructor(t,e={},n=Pr){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=n,e==null&&(this.loadOptions={}),this.resourceManager=new Vb}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{let e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let t=this.handler.load();return y.isPromise(t)?t.then(e=>this.loadSync(e)):this.loadSync(t)}loadSync(t){this.artifacts=t;let e=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let s=this.artifacts.userDefinedMetadata;s.signature!=null&&(n=s.signature),s.structuredOutputKeys!=null&&(this.structuredOutputKeys=s.structuredOutputKeys)}this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;let o=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new kc(Ph.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){let s=Ph.Instance.transformGraph(t.modelInitializer);this.initializer=new kc(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}async save(t,e){if(typeof t=="string"){let n=this.io.getSaveHandlers(t);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${t}'`);t=n[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}addStructuredOutputNames(t){if(this.structuredOutputKeys){let e=t instanceof Ft?[t]:t,n={};return e.forEach((o,s)=>n[this.structuredOutputKeys[s]]=o),n}return t}predict(t,e){let n=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(t,e){let n=await this.executeAsync(t,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(t){var e;if(!(t instanceof Ft)&&!Array.isArray(t)){let s=(e=this.signature)===null||e===void 0?void 0:e.inputs;if(s!=null)for(let i in s){let a=s[i];a.resourceId!=null&&(t[i]=this.resourceIdToCapturedInput[a.resourceId])}return t}t=Array.isArray(t)?t:[t];let n=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${t.length} input tensors provided.`);let o=0;return this.inputNodes.reduce((s,i)=>{var a,u,l;let c=(l=(u=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||u===void 0?void 0:u[i])===null||l===void 0?void 0:l.resourceId;return c!=null?s[i]=this.resourceIdToCapturedInput[c]:s[i]=t[o++],s},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){let e=this.initializerSignature.outputs,n=Object.keys(e);for(let o=0;o<n.length;o++){let s=n[o],i=e[s];this.resourceIdToCapturedInput[i.resourceId]=t[o]}}}execute(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Nt(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function q7(r,t={},e=Pr){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof r=="string"&&(r=j7(r));let n=new Mh(r,t,e);return await n.load(),n}function K7(r){if(r==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(r instanceof Array){let[n,o]=r;if(!n)throw new Error("modelJSON must be the first element of the array");if(!o||!(o instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let s=Pr.getWeightSpecs(n.weightsManifest),i=Pr.getModelArtifactsForJSONSync(n,s,o);t=Pr.fromMemorySync(i)}else if("load"in r)t=r;else if("modelTopology"in r&&"weightSpecs"in r&&"weightData"in r)t=Pr.fromMemorySync(r);else throw new Error("Unknown model format");let e=new Mh(t);return e.load(),e}function j7(r){return r.endsWith("/")||(r=r+"/"),`${r}${H7}${U7}`}var pR="4.2.0";var $R={};Ut($R,{CSVDataset:()=>Jf,Dataset:()=>Qs,FileDataSource:()=>nd,TextLineDataset:()=>Zf,URLDataSource:()=>od,array:()=>CR,csv:()=>TR,func:()=>kR,generator:()=>ER,microphone:()=>AR,version_data:()=>BN,webcam:()=>_R,zip:()=>IR});var wR=El(ch());var xR=El(ch());function mR(r,t){return Gb(r,t)}function Gb(r,t,e=new Map,n=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(n.has(r))throw new Error("Circular references are not supported.");if(e.has(r))return e.get(r);let o=t(r);if(o.recurse&&o.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(o.recurse)if(bu(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let i in r){let a=r[i],u=Gb(a,t,e,n);s[i]=u}return n.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return e.set(r,o.value),o.value}function fR(r,t=CN){return dR(r,t)}function dR(r,t,e=new Set){let n=r[0];if(e.has(n))throw new Error("Circular references are not supported.");let o=t(r);if(o.recurse&&o.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(o.recurse)if(bu(n)){let s=Array.isArray(n)?[]:{};e.add(n);for(let i in n){let a=r.map(l=>l[i]),u=dR(a,t,e);s[i]=u}return e.delete(n),s}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return o.value}function CN(r){return r===null?null:bu(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function Wb(r,t){let e=new Map;Gb(r,t,e);for(let o of Array.from(e.keys())){let s=e.get(o);if(y.isPromise(s)){let i=await s;e.set(o,i)}}return Gb(r,t,e)}function bu(r){let t=!1;if(M().get("IS_BROWSER"))t=r instanceof TextDecoder;else{let{StringDecoder:e}=wN();t=r instanceof e}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof Ft)&&!(r instanceof Promise)&&!t)}function hR(r){return r==null||X7(r)||Array.isArray(r)||typeof r=="object"&&r instanceof Ft||y.isTypedArray(r)}function X7(r){return r===null||typeof r!="object"&&typeof r!="function"}function gR(r){return mR(r,Y7)}function Y7(r){return r instanceof Ft?{value:r.clone(),recurse:!1}:bu(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var Yf=class{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,t==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(let e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}};var Ec=class extends Yf{constructor(){super(Ec.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){let t=this.capacity*2,e=new Array(t),n=this.length();for(let o=0;o<n;o++)e[o]=this.get(this.wrap(this.begin+o));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};Ec.INITIAL_CAPACITY=32;function FN(r){return new IN(r)}function zh(r){return new vN(r)}function yR(r,t){return new Hb(r,t)}function bR(r,t=gl.FAIL){return new DN(r,t)}var tr=class{async toArray(){let t=[],e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){let t=this.prefetch(100),e=[],n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new AN(this,t)}filter(t){return new EN(this,t)}map(t){return new _N(this,t)}mapAsync(t){return new Ub(this,t)}serialMapAsync(t){return new Ub(this,t).serial()}flatmap(t){return new $N(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(e=>e===!0)}rowMajorBatch(t,e=!0){return new kN(this,t,e)}columnMajorBatch(t,e=!0,n=CN){return this.rowMajorBatch(t,e).map(s=>fR(s,n))}concatenate(t,e){return new Hb(FN([this,t]),e)}take(t){return t<0||t==null?this:new TN(this,t)}skip(t){return t<0||t==null?this:new NN(this,t)}prefetch(t){return new qb(this,t)}shuffle(t,e){return new RN(this,t,e)}serial(){return new SN(this)}},IN=class extends tr{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let t=this.items[this.trav];return this.trav++,{value:gR(t),done:!1}}},vN=class extends tr{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}},SN=class extends tr{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},NN=class extends tr{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let t=await this.upstream.next();if(t.done)return t;Nt(t.value)}return this.upstream.next()}},TN=class extends tr{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},kN=class extends tr{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let t=[];for(;t.length<this.batchSize;){let e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}},EN=class extends tr{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Nt(t.value)}}},_N=class extends tr{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){let t=await this.upstream.next();if(t.done)return{value:null,done:!0};let e=xo.getTensorsInContainer(t.value),n=this.transform(t.value),o=xo.getTensorsInContainer(n);for(let s of e)xo.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},AN=class extends tr{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}},Ub=class extends tr{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let t=await this.upstream.next();if(t.done)return{value:null,done:!0};let e=xo.getTensorsInContainer(t.value),n=await this.transform(t.value),o=xo.getTensorsInContainer(n);for(let s of e)xo.isTensorInList(s,o)||s.dispose();return{value:n,done:!1}}},_c=class extends tr{constructor(){super(),this.outputQueue=new Ec,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},$N=class extends _c{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let t=await this.upstream.next();if(t.done)return!1;let e=xo.getTensorsInContainer(t.value),n=this.transform(t.value),o=xo.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let s of e)xo.isTensorInList(s,o)||s.dispose();return!0}},Hb=class extends tr{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}},gl;(function(r){r[r.FAIL=0]="FAIL",r[r.SHORTEST=1]="SHORTEST",r[r.LONGEST=2]="LONGEST"})(gl||(gl={}));var DN=class extends tr{constructor(t,e=gl.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;function o(i){return i instanceof tr?{value:i.next().then(u=>(e++,u.done&&n++,u.value)),recurse:!1}:{value:null,recurse:!0}}let s=await Wb(this.iterators,o);if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case gl.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case gl.SHORTEST:return{value:null,done:!0};case gl.LONGEST:default:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},qb=class extends tr{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Yf(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}},RN=class extends qb{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=xR.alea(n||y.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(e.done)this.upstreamExhausted=!0;else return this.refill(),e}return{value:null,done:!0}}};var Qs=class{constructor(){this.size=null}batch(t,e=!0){let n=this;y.assert(t>0,()=>`batchSize needs to be positive, but it is
      ${t}`);let o;return this.size===1/0||this.size==null?o=this.size:e?o=Math.ceil(this.size/t):o=Math.floor(this.size/t),En(async()=>(await n.iterator()).columnMajorBatch(t,e,Z7),o)}concatenate(t){let e=this,n;return this.size===1/0||t.size===1/0?n=1/0:this.size!=null&&t.size!=null?n=this.size+t.size:n=null,En(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){let e=this,n;return this.size===1/0?n=1/0:n=null,En(async()=>(await e.iterator()).filter(o=>B(()=>t(o))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){let e=this;return En(async()=>(await e.iterator()).map(n=>B(()=>t(n))),this.size)}mapAsync(t){let e=this;return En(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(t==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let e=this;return En(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){let e=this,n;return this.size!=null&&t>0?n=this.size*t:t===0?n=0:this.size!=null&&(t===void 0||t<0)?n=1/0:n=null,En(async()=>{let o=zh(async()=>({value:await e.iterator(),done:!1}));return yR(o.take(t))},n)}skip(t){let e=this,n;return this.size!=null&&t>=0&&this.size>=t?n=this.size-t:this.size!=null&&(this.size<t||t===void 0||t<0)?n=0:n=null,En(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e,n=!0){if(t==null||t<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let o=this,s=wR.alea(e||y.now().toString());return En(async()=>{let i=s.int32();return n&&(i+=s.int32()),(await o.iterator()).shuffle(t,i.toString())},this.size)}take(t){let e=this,n;return this.size!=null&&this.size>t?n=t:this.size!=null&&this.size<=t?n=this.size:n=null,En(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Qs.MAX_BUFFER_SIZE=1e4;function En(r,t=null){return new class extends Qs{constructor(){super(...arguments),this.size=t}async iterator(){return r()}}}function CR(r){return En(async()=>FN(r),r.length)}function IR(r){if(!bu(r))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(r))for(let e=0;e<r.length;e++)t=t==null?r[e].size:Math.min(t,r[e].size);else if(r instanceof Object)for(let e in r)t=t==null?r[e].size:Math.min(t,r[e].size);return En(async()=>{let e=await Wb(r,n=>{if(n instanceof Qs)return{value:n.iterator(),recurse:!1};if(bu(n))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return bR(e,gl.SHORTEST)},t)}function Z7(r){if(r===null)return null;let t=r[0];return hR(t)?{value:J7(r),recurse:!1}:{value:null,recurse:!0}}function J7(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof Ft?qe(r):or(r)}var Zf=class extends Qs{constructor(t){super(),this.input=t}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(o=>(o.endsWith("\r")&&(o=o.slice(0,-1)),o))}};var Kb='"',Bh=Symbol("out"),vR=Symbol("field"),jb=Symbol("quote"),ON=Symbol("quoteafterquote"),SR=Symbol("quoteinquote"),Jf=class extends Qs{constructor(t,e){super(),this.input=t,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new Zf(t),e||(e={}),this.hasHeader=e.hasHeader!==!1,this.fullColumnNames=e.columnNames,this.columnConfigs=e.columnConfigs,this.configuredColumnsOnly=e.configuredColumnsOnly,e.delimWhitespace?(y.assert(e.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=e.delimiter?e.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let t=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&t&&y.assert(t.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=t);let e=this.fullColumnNames.reduce((o,s)=>(o[s]=o[s]+1||1,o),{}),n=Object.keys(e).filter(o=>e[o]>1);if(y.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let o of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(o)===-1)throw new Error('The key "'+o+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let n=e.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let t=await this.base.iterator();return this.hasHeader&&(t=t.skip(1)),t.map(e=>this.makeDataElement(e))}makeDataElement(t){let e=this.parseRow(t),n={},o={};for(let s=0;s<this.fullColumnNames.length;s++){let i=this.fullColumnNames[s],a=this.columnConfigs?this.columnConfigs[i]:null;if(!(this.configuredColumnsOnly&&!a)){let u=e[s],l=null;if(u==="")if(a&&a.default!==void 0)l=a.default;else{if(a&&(a.required||a.isLabel))throw new Error(`Required column ${i} is empty in this line: ${t}`);l=void 0}else{let c=Number(u);if(isNaN(c))a&&a.dtype==="bool"?l=this.getBoolean(u):l=u;else if(!a||!a.dtype)l=c;else switch(a.dtype){case"float32":l=c;break;case"int32":l=Math.floor(c);break;case"bool":l=this.getBoolean(u);break;default:l=c}}a&&a.isLabel?o[i]=l:n[i]=l}}return Object.keys(o).length===0?n:{xs:n,ys:o}}getBoolean(t){return t==="1"||t.toLowerCase()==="true"?1:0}parseRow(t,e=!0){let n=[],o=0,s=t.length,i=Bh;for(let a=0;a<s;a++)switch(i){case Bh:switch(t.charAt(a)){case Kb:o=a+1,i=jb;break;case this.delimiter:if(o=a+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),i=Bh;break;default:i=vR,o=a;break}break;case vR:switch(t.charAt(a)){case this.delimiter:n.push(t.substring(o,a)),i=Bh,o=a+1;break;default:}break;case jb:switch(t.charAt(a)){case Kb:i=ON;break;default:}break;case ON:switch(t.charAt(a)){case this.delimiter:n.push(t.substring(o,a-1)),i=Bh,o=a+1;break;case Kb:i=jb;break;default:i=SR;break}break;case SR:switch(t.charAt(a)){case Kb:i=jb;break;default:}break;default:}if(i===ON?n.push(t.substring(o,s-1)):n.push(t.substring(o)),e&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}};var Qf=class extends tr{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;let e=Math.log2(this.fftSize);if(this.fftSize<0||e<4||e>14||!Number.isInteger(e))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=t.includeSpectrogram!==!1,this.includeWaveform=t.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(!M().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let e=new Qf(t);return await e.start(),e}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let e=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,e.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let t,e,n=await this.getAudioData();if(this.includeSpectrogram){let o=this.flattenQueue(n.freqDataQueue);t=this.getTensorFromAudioDataArray(o,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let o=this.flattenQueue(n.timeDataQueue);e=this.getTensorFromAudioDataArray(o,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:e},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let t=[],e=[],n=0;return new Promise(o=>{let s=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&o({freqDataQueue:t,timeDataQueue:e}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),e.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),o({freqDataQueue:t,timeDataQueue:e}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){let e=t[0].length,n=new Float32Array(t.length*e);return t.forEach((o,s)=>n.set(o,s*e)),n}getTensorFromAudioDataArray(t,e){let n=new Float32Array(y.sizeFromShape(e));return n.set(t,n.length-t.length),or(n,e)}};var td=class extends tr{constructor(t,e){if(super(),this.webcamVideoElement=t,this.webcamConfig=e,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Ke([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,o=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,s=(1-n)/2,i=(1-o)/2,a=s+n,u=o+i;this.cropBox=Ws([i,s,u,a],[1,4])}else this.cropBox=Ws([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,e={}){if(!M().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!e.resizeWidth||!e.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=e.resizeWidth,t.height=e.resizeHeight}let n=new td(t,e);return await n.start(),n}async start(){this.webcamConfig.facingMode&&y.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message=`Error thrown while initializing video stream: ${t.message}`,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}})}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=gy.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{t.dispose()}else return{value:t,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(t){return B(()=>{let e=ir(J(t,"float32"),0),n;n=oo.cropAndResize(e,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let o=n.shape;return R(n,o.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}};var ed=class{};var Vh=class extends tr{split(t){return new PN(this,t)}},PN=class extends Vh{constructor(t,e){super(),this.upstream=t,this.impl=new LN(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},LN=class extends _c{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let t=await this.upstream.next();if(t.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(let n of e.slice(0,-1))this.outputQueue.push(n);return this.carryover=e[e.length-1],!0}};var Xb=class extends tr{decodeUTF8(){return new MN(this)}},MN=class extends Vh{constructor(t){super(),this.upstream=t,this.impl=new zN(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},zN=class extends _c{constructor(t){if(super(),this.upstream=t,M().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=wN();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let t=await this.upstream.next(),e;if(t.done)return!1;e=t.value;let n;return M().get("IS_BROWSER")?n=this.decoder.decode(e,{stream:!0}):n=this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(n),!0}};var rd=class extends Xb{constructor(t,e={}){super(),this.file=t,this.options=e,y.assert(t instanceof Uint8Array||(M().get("IS_BROWSER")?t instanceof File||t instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=e.offset||0,this.chunkSize=e.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,n)=>{let o=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,o)));else{let s=new FileReader;s.onload=a=>{let u=s.result;if(u instanceof ArrayBuffer&&(u=new Uint8Array(u)),!(u instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));e(u)},s.onabort=a=>n(new Error("Aborted")),s.onerror=a=>n(new Error(a.type));let i=this.file.slice(this.offset,o);s.readAsArrayBuffer(i)}this.offset=o}),done:!1}}};async function NR(r,t={},e){let n,o;typeof r=="string"?n=r:(n=r.url,o=Q7(r));let s=await(e||y.fetch)(n,o);if(s.ok){let i=new Uint8Array(await s.arrayBuffer());return new rd(i,t)}else throw new Error(s.statusText)}var Q7=r=>({method:r.method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});function Yb(r){return typeof r=="string"&&r.slice(0,7)==="file://"}var nd=class extends ed{constructor(t,e={}){super(),this.input=t,this.options=e}async iterator(){if(Yb(this.input)&&M().get("IS_NODE")){let t=Zb();this.input=t.readFileSync(this.input.slice(7))}return new rd(this.input,this.options)}};var od=class extends ed{constructor(t,e={}){super(),this.url=t,this.fileOptions=e}async iterator(){return Yb(this.url)?new nd(this.url,this.fileOptions).iterator():NR(this.url,this.fileOptions)}};function TR(r,t={}){return new Jf(new od(r),t)}function kR(r){let t=zh(r);return En(async()=>t)}function ER(r){return En(async()=>{let t=await r();return zh(()=>t.next())})}async function _R(r,t){return td.create(r,t)}async function AR(r){return Qf.create(r)}var BN="4.2.0";function tt(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var tJ=qr.whereImpl,wu=class extends zo{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new ia(this,Ln())}nextDataId(){return wu.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,M().get("IS_NODE")&&S.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let o={id:this.nextDataId()};return this.data.set(o,{values:t,dtype:n,refCount:1}),o}makeTensorInfo(t,e,n){let o;if(e==="string"&&n!=null&&n.length>0&&y.isString(n[0])){let s=n.map(i=>y.encodeString(i));o=this.write(s,t,e)}else o=this.write(n,t,e);return{dataId:o,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){let e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){let e=this.data.get(t);e.refCount--}}move(t,e,n,o,s){this.data.set(t,{values:e,dtype:o,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){let{dtype:e,complexTensorInfos:n}=this.data.get(t);if(e==="complex64"){let o=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return S.mergeRealAndImagArrays(o,s)}return y.convertBackendValuesAndArrayBuffer(this.data.get(t).values,e)}bufferSync(t){let e=this.readSync(t.dataId);if(t.dtype==="string")try{let n=e.map(o=>y.decodeString(o));return bt(t.shape,t.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return bt(t.shape,t.dtype,e)}makeOutput(t,e,n){return Ln().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(t);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){let e=y.now();return t(),{kernelMs:y.now()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){tt([t],"where");let e=this.readSync(t.dataId);return tJ(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};wu.nextDataId=0;var mw={};Ut(mw,{addImpl:()=>WN,bincountImpl:()=>ad,bincountReduceImpl:()=>Jb,castImpl:()=>GN,ceilImpl:()=>UN,concatImpl:()=>Ac,equalImpl:()=>HN,expImpl:()=>KN,expm1Impl:()=>XN,floorImpl:()=>YN,gatherNdImpl:()=>Qb,gatherV2Impl:()=>tw,greaterEqualImpl:()=>JN,greaterImpl:()=>ZN,lessEqualImpl:()=>tT,lessImpl:()=>QN,linSpaceImpl:()=>ew,logImpl:()=>eT,maxImpl:()=>rw,maximumImpl:()=>rT,minimumImpl:()=>nT,multiplyImpl:()=>Gh,negImpl:()=>oT,notEqualImpl:()=>sT,prodImpl:()=>iT,raggedGatherImpl:()=>nw,raggedRangeImpl:()=>ow,raggedTensorToTensorImpl:()=>sw,rangeImpl:()=>Dc,rsqrtImpl:()=>aT,scatterImpl:()=>xl,sigmoidImpl:()=>iF,simpleAbsImpl:()=>VN,sliceImpl:()=>Rc,sparseFillEmptyRowsImpl:()=>iw,sparseReshapeImpl:()=>aw,sparseSegmentReductionImpl:()=>cd,sqrtImpl:()=>uF,squaredDifferenceImpl:()=>uT,stridedSliceImpl:()=>lw,stringNGramsImpl:()=>Fc,stringSplitImpl:()=>Oc,stringToHashBucketFastImpl:()=>Pc,subImpl:()=>pT,tileImpl:()=>uw,topKImpl:()=>cw,transposeImpl:()=>ld,uniqueImpl:()=>pw});function VN(r){let t=new Float32Array(r.length);for(let e=0;e<r.length;++e)t[e]=Math.abs(r[e]);return t}var eJ=r=>{let{x:t}=r.inputs,e=r.backend;tt(t,"abs");let n=new Float32Array(y.sizeFromShape(t.shape)),o=e.data.get(t.dataId).values;return n=VN(o),e.makeOutput(n,t.shape,t.dtype)},DR={kernelName:li,backendName:"cpu",kernelFunc:eJ};function Qt(r){return(t,e,n,o,s)=>{let i=S.assertAndGetBroadcastShape(t,e),a=i.length,u=y.computeStrides(i),l=y.sizeFromShape(i),c=y.getTypedArrayFromDType(s,l),p=t.length,m=e.length,f=y.computeStrides(t),d=y.computeStrides(e),h=S.getBroadcastDims(t,i),g=S.getBroadcastDims(e,i);if(h.length+g.length===0)for(let x=0;x<c.length;++x)c[x]=r(n[x%n.length],o[x%o.length]);else for(let x=0;x<c.length;++x){let b=y.indexToLoc(x,a,u),w=b.slice(-p);h.forEach(A=>w[A]=0);let C=y.locToIndex(w,p,f),N=b.slice(-m);g.forEach(A=>N[A]=0);let _=y.locToIndex(N,m,d);c[x]=r(n[C],o[_])}return[c,i]}}function Ir(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,a=e.makeTensorInfo(n.shape,"complex64"),u=e.data.get(a.dataId);return u.complexTensorInfos={real:e.makeTensorInfo(n.shape,"float32",s),imag:e.makeTensorInfo(o.shape,"float32",i)},a}var RR={kernelName:mp,backendName:"cpu",kernelFunc:Ir};function sd(r,t,e="float32"){if(e==="complex64"){let o=sd(r,t,"float32"),s=sd(r,t,"float32");return Ir({inputs:{real:o,imag:s},backend:r})}let n=y.makeZerosTypedArray(y.sizeFromShape(t),e);return r.makeTensorInfo(t,e,n)}function Xr(r){let{inputs:t,backend:e}=r,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var FR={kernelName:po,backendName:"cpu",kernelFunc:Xr};function Ao(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.data.get(n.dataId).complexTensorInfos.real,s=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,s)}var OR={kernelName:Fp,backendName:"cpu",kernelFunc:Ao};function GN(r,t,e,n){if(n==="int32"){let o=Int32Array.from(r);return[t,"int32",o]}if(n==="bool"){let o=y.toTypedArray([0],e),[s,i]=Qt((a,u)=>a!==u?1:0)(t,[],r,o,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${e} to ${n}`)}function $o(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Xr({inputs:{x:o},backend:e});let c=sd(e,o.shape,o.dtype),p=$o({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),m=Ir({inputs:{real:p,imag:c},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),m}if(o.dtype==="complex64"){let c=Ao({inputs:{input:o},backend:e}),p=$o({inputs:{x:c},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(c),p}if(!y.hasEncodingLoss(o.dtype,s)){let c=Xr({inputs:{x:o},backend:e});return{dataId:c.dataId,shape:c.shape,dtype:s}}let i=e.data.get(o.dataId).values,[a,u,l]=GN(i,o.shape,o.dtype,s);return e.makeTensorInfo(a,u,l)}var PR={kernelName:uo,backendName:"cpu",kernelFunc:$o};function ie(r,t,e,n){return e==null?({inputs:o,backend:s})=>{let{a:i,b:a}=o,u=s;tt([i,a],r);let l=u.data.get(i.dataId).values,c=u.data.get(a.dataId).values,p=i.dtype==="string"?S.fromUint8ToStringArray(l):l,m=i.dtype==="string"?S.fromUint8ToStringArray(c):c,f=n||i.dtype,[d,h]=t(i.shape,a.shape,p,m,f);return u.makeTensorInfo(h,f,d)}:({inputs:o,backend:s})=>{let{a:i,b:a}=o,u=s;if(i.dtype==="complex64"||a.dtype==="complex64"){let l=$o({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),c=u.data.get(l.dataId),p=c.complexTensorInfos.real,m=c.complexTensorInfos.imag,f=u.data.get(p.dataId).values,d=u.data.get(m.dataId).values,h=$o({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(h.dataId),x=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,w=u.data.get(x.dataId).values,C=u.data.get(b.dataId).values,[N,_,A]=e(i.shape,a.shape,f,d,w,C),$=u.makeTensorInfo(A,"float32",N),F=u.makeTensorInfo(A,"float32",_),P=Ir({inputs:{real:$,imag:F},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo($),u.disposeIntermediateTensorInfo(F),P}else{let l=u.data.get(i.dataId).values,c=u.data.get(a.dataId).values,p=n||i.dtype,[m,f]=t(i.shape,a.shape,l,c,p);return u.makeTensorInfo(f,p,m)}}}function id(r){return(t,e,n,o,s,i)=>{let a=S.assertAndGetBroadcastShape(t,e),u=y.sizeFromShape(a),l=a.length,c=y.computeStrides(a),p=y.getTypedArrayFromDType("float32",u),m=y.getTypedArrayFromDType("float32",u),f=S.getBroadcastDims(t,a),d=S.getBroadcastDims(e,a),h=S.mergeRealAndImagArrays(n,o),g=S.mergeRealAndImagArrays(s,i),x=t.length,b=y.computeStrides(t),w=e.length,C=y.computeStrides(e);if(f.length+d.length===0)for(let N=0;N<p.length;N++){let _=N%h.length,A=N%g.length,$=r(h[_*2],h[_*2+1],g[A*2],g[A*2+1]);p[N]=$.real,m[N]=$.imag}else for(let N=0;N<p.length;N++){let _=y.indexToLoc(N,l,c),A=_.slice(-x);f.forEach(G=>A[G]=0);let $=y.locToIndex(A,x,b),F=_.slice(-w);d.forEach(G=>F[G]=0);let P=y.locToIndex(F,w,C),V=r(h[$*2],h[$*2+1],g[P*2],g[P*2+1]);p[N]=V.real,m[N]=V.imag}return[p,m,a]}}var WN=Qt((r,t)=>r+t),rJ=id((r,t,e,n)=>({real:r+e,imag:t+n})),Yi=ie(Jn,WN,rJ),LR={kernelName:Jn,backendName:"cpu",kernelFunc:Yi};function ad(r,t,e,n,o){let s=y.sizeFromShape(n),i=y.makeZerosTypedArray(o,e);for(let a=0;a<r.length;a++){let u=r[a];if(u<0)throw new Error("Input x must be non-negative!");u>=o||(s>0?i[u]+=t[a]:i[u]+=1)}return i}function Jb(r,t,e,n=!1){let o=r.shape[0],s=r.shape[1],i=bt([o,e],t.dtype);for(let a=0;a<o;a++)for(let u=0;u<s;u++){let l=r.get(a,u);if(l<0)throw new Error("Input x must be non-negative!");l>=e||(n?i.set(1,a,l):t.size>0?i.set(i.get(a,l)+t.get(a,u),a,l):i.set(i.get(a,l)+1,a,l))}return i}function wn(r){return(t,e,n)=>{let o=y.getTypedArrayFromDType(e,t.length);for(let s=0;s<t.length;++s)o[s]=r(t[s],n);return o}}function Et(r,t,e){return({inputs:n,attrs:o,backend:s})=>{let{x:i}=n;if(tt(i,r),i.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");let a=s,u=a.data.get(i.dataId).values,l=y.sizeFromShape(i.shape),c=e||i.dtype,p=y.getArrayFromDType(c,l);for(let m=0;m<l;++m)p[m]=t(u[m],o);return a.makeTensorInfo(i.shape,c,p)}}function Do(r,t,e){return({inputs:n,attrs:o,backend:s})=>{let{x:i}=n;if(tt(i,r),i.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");let a=s,u=a.data.get(i.dataId).values,l=e||i.dtype,c=t(u,l,o);return a.makeTensorInfo(i.shape,l,c)}}var UN=wn(r=>Math.ceil(r)),nJ=Do(Ho,UN),MR={kernelName:Ho,backendName:"cpu",kernelFunc:nJ};function Ac(r,t,e,n){let o=y.getArrayFromDType(e,y.sizeFromShape(t));if(n&&e!=="string"){let s=0;r.forEach(i=>{let a=y.sizeFromShape(i.shape);o.set(i.vals,s),s+=a})}else{let s=0;r.forEach(i=>{let a=e==="string"?S.fromUint8ToStringArray(i.vals):i.vals,u=0;for(let l=0;l<i.shape[0];++l){let c=l*t[1]+s;for(let p=0;p<i.shape[1];++p)o[c+p]=a[u++]}s+=i.shape[1]})}return o}var HN=Qt((r,t)=>r===t?1:0),qN=ie(Ca,HN,null,"bool"),zR={kernelName:Ca,backendName:"cpu",kernelFunc:qN};var KN=wn(r=>Math.exp(r)),jN=Do(ts,KN,"float32"),BR={kernelName:ts,backendName:"cpu",kernelFunc:jN};var XN=wn(r=>Math.expm1(r)),oJ=Do(Ia,XN),VR={kernelName:Ia,backendName:"cpu",kernelFunc:oJ};var YN=wn(r=>Math.floor(r)),sJ=Do(es,YN),GR={kernelName:es,backendName:"cpu",kernelFunc:sJ};function Qb(r,t,e,n,o,s,i,a,u){let l=bt([n,s],e);for(let c=0;c<n;c++){let p=[],m=0;for(let f=0;f<o;f++){let d=r[c*o+f];m+=d*i[f],p.push(d)}if(m<0||m>=u/s)throw new Error(`Invalid indices: ${p} does not index into ${a}`);for(let f=0;f<s;f++)l.values[c*s+f]=t.get(...t.indexToLoc(m*s+f))}return l}function tw(r,t,e){let n=bt(e,r.dtype);for(let o=0;o<n.size;++o){let i=n.indexToLoc(o).slice(),a=i[0],u=i[2],l=t.locToIndex([a,u]);i[2]=t.values[l];let c=r.locToIndex(i);0<=c&&c<r.values.length&&(n.values[o]=r.values[c])}return n}var ZN=Qt((r,t)=>r>t?1:0),iJ=ie(Na,ZN,null,"bool"),WR={kernelName:Na,backendName:"cpu",kernelFunc:iJ};var JN=Qt((r,t)=>r>=t?1:0),aJ=ie(os,JN,null,"bool"),UR={kernelName:os,backendName:"cpu",kernelFunc:aJ};var QN=Qt((r,t)=>r<t?1:0),lJ=ie(Ea,QN,null,"bool"),HR={kernelName:Ea,backendName:"cpu",kernelFunc:lJ};var tT=Qt((r,t)=>r<=t?1:0),uJ=ie(_a,tT,null,"bool"),qR={kernelName:_a,backendName:"cpu",kernelFunc:uJ};function ew(r,t,e){let n=(t-r)/(e-1),o=y.makeZerosTypedArray(e,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var eT=wn(r=>Math.log(r)),cJ=Do(as,eT),KR={kernelName:as,backendName:"cpu",kernelFunc:cJ};function rw(r,t,e,n){let o=y.getTypedArrayFromDType(n,y.sizeFromShape(e));for(let s=0;s<o.length;++s){let i=s*t,a=r[i];for(let u=0;u<t;++u){let l=r[i+u];(Number.isNaN(l)||l>a)&&(a=l)}o[s]=a}return o}var rT=Qt((r,t)=>Math.max(r,t)),pJ=ie(us,rT),jR={kernelName:us,backendName:"cpu",kernelFunc:pJ};var nT=Qt((r,t)=>Math.min(r,t)),mJ=ie(fs,nT),XR={kernelName:fs,backendName:"cpu",kernelFunc:mJ};var Gh=Qt((r,t)=>r*t),fJ=id((r,t,e,n)=>({real:r*e-t*n,imag:r*n+t*e})),$c=ie(hs,Gh,fJ),YR={kernelName:hs,backendName:"cpu",kernelFunc:$c};function oT(r,t,e){let n=y.createScalarValue(-1,e);return Gh([],t,n,r,e)}function dJ(r){let{inputs:t,backend:e}=r,{x:n}=t;tt(n,"neg");let o=e.data.get(n.dataId).values,[s,i]=oT(o,n.shape,n.dtype);return e.makeTensorInfo(i,n.dtype,s)}var ZR={kernelName:fi,backendName:"cpu",kernelFunc:dJ};var sT=Qt((r,t)=>r!==t?1:0),hJ=ie(Oa,sT,null,"bool"),JR={kernelName:Oa,backendName:"cpu",kernelFunc:hJ};function ld(r,t,e,n,o){let s=t.length,i=y.sizeFromShape(t),a=y.computeStrides(t),u=y.computeStrides(o),l=y.getTypedArrayFromDType(e,y.sizeFromShape(o));for(let c=0;c<i;++c){let p=y.indexToLoc(c,s,a),m=new Array(p.length);for(let d=0;d<m.length;d++)m[d]=p[n[d]];let f=y.locToIndex(m,s,u);l[f]=r[c]}return l}function Ge(r){let{inputs:t,attrs:e,backend:n}=r,{x:o}=t,{perm:s}=e;tt(o,"transpose");let i=o.shape.length,a=new Array(i);for(let p=0;p<a.length;p++)a[p]=o.shape[s[p]];let u=n.data.get(o.dataId).values,l=ld(u,o.shape,o.dtype,s,a);return{dataId:n.write(l,a,o.dtype),shape:a,dtype:o.dtype}}var QR={kernelName:to,backendName:"cpu",kernelFunc:Ge};function iT(r,t,e,n){let[o,s]=S.computeOutAndReduceShapes(r,n),i=lr(t,"int32"),a=y.makeZerosTypedArray(y.sizeFromShape(o),i),u=y.sizeFromShape(s);for(let l=0;l<a.length;++l){let c=l*u,p=1;for(let m=0;m<u;++m)p*=e[c+m];a[l]=p}return{outVals:a,outShape:o,outDtype:i}}function gJ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n;tt(o,"prod");let a=o.shape.length,u=y.parseAxisParam(s,o.shape),l=S.getAxesPermutation(u,a),c=u,p=o,m=[];l!=null&&(p=Ge({inputs:{x:o},backend:e,attrs:{perm:l}}),m.push(p),c=S.getInnerMostAxes(c.length,a));let f=e.data.get(p.dataId).values,{outVals:d,outShape:h,outDtype:g}=iT(p.shape,p.dtype,f,c),x=h;return i&&(x=S.expandShapeToKeepDim(h,u)),m.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.makeTensorInfo(x,g,d)}var tF={kernelName:ws,backendName:"cpu",kernelFunc:gJ};function xJ(r,t,e){r.forEach((n,o)=>{if(n<0||n>=e){let s=y.indexToLoc(o,t.length,y.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${n} is not in [0, ${e})`)}})}function yJ(r,t){for(let e=0;e<r.length;++e){let n=r[e],o=e===r.length-1?t:r[e+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>o)throw new Error("Ragged splits must not point past values");for(let s=1;s<n.length;++s)if(n[s-1]>n[s])throw new Error("Ragged splits must be sorted in ascending order")}}function bJ(r,t,e,n){let o=[],s=0,i=t.length-1+e.length,a=new Array(i).fill(null).map(()=>[0]);yJ(e,n);let u=1;for(let l=0;l<t.length-1;++l){u*=t[l];let c=t[l+1];for(let p=1;p<u+1;++p)a[l].push(p*c)}for(let l=0;l<r.length;++l){let c=r[l],p=r[l]+1;for(let m=0;m<e.length;++m){let f=e[m],d=m+t.length-1;if(d>=0){let h=a[d],g=h[h.length-1]-f[c];for(let x=c;x<p;++x)a[d].push(f[x+1]+g)}c=f[c],p=f[p]}p!==c&&(o.push([c,p]),s+=p-c)}return{outSplits:a,valueSlices:o,numValues:s}}function wJ(r){let t=[];for(let e=0;e<r.length;++e){let n=r[e].length,o=y.getArrayFromDType("int32",n);t.push(o),r[e].forEach((s,i)=>o[i]=s)}return t}function eF(r,t){let e=r.slice(0,t);for(;e.length<t;)e.push(1);for(let n=t;n<r.length;n++)e[t-1]*=r[n];return e}function CJ(r,t,e,n,o,s){let i=eF(t,2)[1],a=eF(s,2)[1],u=0;for(let l of e)for(let c=l[0];c<l[1];++c){for(let p=0;p<n;++p)o[u*a+p]=r[c*i+p];++u}}function IJ(r,t,e,n,o){let s=t.slice();s[0]=o;let i=y.getArrayFromDType(e,y.sizeFromShape(s)),a=r.length,u=a===0?0:a/t[0];return CJ(r,t,n,u,i,s),[i,s]}function nw(r,t,e,n,o,s,i,a){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let u=t[0][0]-1;if(xJ(s,i,u),n.length===0)throw new Error("params.rank must be nonzero");let l=n[0],{outSplits:c,valueSlices:p,numValues:m}=bJ(s,i,r,l),f=wJ(c),d=IJ(e,n,o,p,m);return[f,d[0],d[1]]}var rF=2147483647;function ow(r,t,e,n,o,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(o.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let a=t.length===0,u=o.length===0,l=i.length===0,c=[];a||c.push(t[0]),u||c.push(o[0]),l||c.push(i[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");let p=c.length===0?1:c[0],m=y.getArrayFromDType("int32",p+1);m[0]=0;for(let g=0;g<p;++g){let x=a?r[0]:r[g],b=u?n[0]:n[g],w=l?s[0]:s[g];if(w===0)throw new Error("Requires delta != 0");let C;if(w>0&&b<x||w<0&&b>x)C=0;else if(C=Math.ceil(Math.abs((b-x)/w)),C>rF)throw new Error(`Requires ((limit - start) / delta) <= ${rF}`);m[g+1]=m[g]+C}let f=m[p],d=y.getArrayFromDType(e,f),h=0;for(let g=0;g<p;++g){let x=m[g+1]-m[g],b=a?r[0]:r[g],w=l?s[0]:s[g];for(let C=0;C<x;++C)d[h++]=b,b+=w}return[m,d]}var Ro=S.RowPartitionType,ud=class{constructor(t,e,n,o,s,i,a,u,l,c){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=o,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=u,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=S.getRowPartitionTypesHelper(c),this.raggedRank=S.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Ro.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Ro.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Ro.VALUE_ROWIDS:return ud.getMaxWidthValueRowID(e);case Ro.ROW_SPLITS:return ud.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Ro[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let e=t.length;if(e===0||e===1)return 0;let n=0;for(let o=0;o<e-1;++o){let s=t[o+1]-t[o];s>n&&(n=s)}return n}static getMaxWidthValueRowID(t){let e=t.length;if(e===0)return 0;let n=0,o=t[0],s=0;for(let i=1;i<e;++i){let a=t[i];a!==o&&(o=a,s=Math.max(i-n,s),n=i)}return Math.max(e-n,s)}tensorShapeFromTensor(t,e,n=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return oF(t,n)}calculateOutputSize(t){let e=this.valuesShape,n=this.defaultValueShape;S.validateDefaultValueShape(n,e);let o=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=S.combineRaggedTensorToTensorShapes(this.raggedRank,o,e);i[0]<0&&(i[0]=t);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(t,e,n){let o=Math.min(t,n),s=[],i=0;for(let a=0;a<o;++a,i+=e)s.push(i);for(let a=o;a<t;++a)s.push(-1);return y.assert(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,e,n,o){let s=t.length,i=[];for(let a=0;a<s-1;++a){let u=t[a+1]-t[a],l=Math.min(o,u),c=e[a];c===-1&&(l=0);for(let p=0;p<l;++p)i.push(c),c+=n;for(let p=0;p<u-l;++p)i.push(-1)}if(s>0&&i.length!==t[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,n,o){let s=t.length,i=[];if(s===0)return[];let a=0,u=t[0];if(u>=e.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${e.length}`);let l=e[u];i.push(l);for(let c=1;c<s;++c){let p=t[c];if(p===u)l>=0&&(++a,a<o?l+=n:l=-1);else{if(a=0,u=p,p>=e.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${e.length}`);l=e[p]}i.push(l)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,n,o){let s=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case Ro.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,e,n,o);case Ro.ROW_SPLITS:if(s.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(s,e,n,o);default:throw new Error(`Unsupported partition type: ${Ro[i]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let e=this.rowPartitionTypes[0];switch(e){case Ro.FIRST_DIM_SIZE:return t[0];case Ro.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Ro.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Ro[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),n=this.calculateOutputSize(e),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let u=o.length-2;u>=0;--u)o[u]=o[u+1]*n[u+1];let s=oF(n,!1),i=y.getArrayFromDType(this.valuesDType,y.sizeFromShape(s));if(o[0]*n[0]>0){let u=this.calculateFirstParentOutputIndex(e,o[0],n[0]);for(let l=1;l<=this.raggedRank;++l)u=this.calculateOutputIndex(l-1,u,o[l],n[l]);this.setOutput(this.raggedRank,u,i,s)}return[s,i]}setOutput(t,e,n,o){if(n.length===0)return;let s=this.values,i=n,a=o.slice();a=a.slice(t+1);let u=y.sizeFromShape(a),l=e.length,c=this.defaultValue;if(c.length!==u&&c.length!==1){let d=this.defaultValueShape;B(()=>{let h=R(c,d);c=Fi(h,a).dataSync()})}let p=0,m=0,f=0;for(let d=0;d<=l;++d){let h=d<l?e[d]:-1;if(h===f){++f;continue}if(m<f){let g=s.subarray(p*u),x=i.subarray(m*u),b=(f-m)*u;nF(x,g,b)}if(d>=l){let g=n.length;h=Math.floor(g/u)}if(h>f)if(this.defaultValue.length===1)i.subarray(f*u,h*u).fill(this.defaultValue[0]),f=h;else for(;h>f;){let g=i.slice(f*u);nF(g,c,u),++f}h<0?(p=d+1,m=f):(p=d,m=f,f=m+1)}}};function nF(r,t,e){for(let n=0;n<e;n++)r[n]=t[n]}function oF(r,t){let e=[];for(let n of r){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}e.push(n)}return e}function sw(r,t,e,n,o,s,i,a,u,l){return new ud(r,t,e,n,o,s,i,a,u,l).compute()}function Dc(r,t,e,n){let o=r===t,s=r<t&&e<0,i=t<r&&e>1;if(o||s||i)return y.makeZerosTypedArray(0,n);let a=Math.abs(Math.ceil((t-r)/e)),u=y.makeZerosTypedArray(a,n);t<r&&e===1&&(e=-1),u[0]=r;for(let l=1;l<u.length;l++)u[l]=u[l-1]+e;return u}var aT=wn(r=>1/Math.sqrt(r)),vJ=Do(Es,aT),sF={kernelName:Es,backendName:"cpu",kernelFunc:vJ};function xl(r,t,e,n,o,s,i,a,u,l){let c=[n/o,o],p=r.values,m=t.values;if(n===0)return bt(e,t.dtype);let f=bt(c,t.dtype);typeof u=="string"||typeof u=="number"?f.values.fill(u):typeof u=="boolean"&&f.values.fill(+u);for(let d=0;d<s;d++){let h=[],g=0;for(let x=0;x<i;x++){let b=p[d*i+x];h.push(b),g+=b*a[x]}if(g<0||g>=n/o)throw new Error(`Invalid indices: ${h} does not index into ${e}`);for(let x=0;x<o;x++)l?f.values[g*o+x]+=m[d*o+x]:f.values[g*o+x]=t.rank===0?m[0]:m[d*o+x]}return f}var iF=wn(r=>1/(1+Math.exp(-r))),lT=Et(As,r=>1/(1+Math.exp(-r))),aF={kernelName:As,backendName:"cpu",kernelFunc:lT};function Rc(r,t,e,n,o){let s=ze.isSliceContinous(n,t,e),i=y.sizeFromShape(e),a=y.computeStrides(n);if(s){let p=ze.computeFlatOffset(t,a);return o==="string"?r.slice(p,p+i):r.subarray(p,p+i)}let u=o==="string"?S.fromUint8ToStringArray(r):r,l=bt(n,o,u),c=bt(e,o);for(let p=0;p<c.size;++p){let m=c.indexToLoc(p),f=m.map((d,h)=>d+t[h]);c.set(l.get(...f),...m)}return o==="string"?S.fromStringArrayToUint8(c.values):c.values}function Fo(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:i}=n;tt(o,"slice");let[a,u]=ze.parseSliceParams(o,s,i);ze.assertParamsValid(o,a,u);let l=e.data.get(o.dataId).values,c=Rc(l,a,u,o.shape,o.dtype);return e.makeTensorInfo(u,o.dtype,c)}var lF={kernelName:yi,backendName:"cpu",kernelFunc:Fo};function iw(r,t,e,n,o,s,i){let a=t[0],u=s[0],l=new Array(u),c=new Array(a),p=t[1];if(u===0){if(a!==0)throw new Error(S.getSparseFillEmptyRowsIndicesDenseShapeMismatch(a));let g=y.getArrayFromDType(e,0),x=y.getArrayFromDType(o,0);return[g,[0,p],x,l,c]}let m=!0,f=0,d=new Array(u).fill(0);for(let g=0;g<a;++g){let x=r[g*p];if(x<0)throw new Error(S.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,x));if(x>=u)throw new Error(S.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,x,u));++d[x],m=m&&x>=f,f=x}let h=!0;for(let g=0;g<u;++g){let x=d[g]===0;l[g]=x,h=h&&!x,d[g]=Math.max(d[g],1),g>0&&(d[g]+=d[g-1])}if(h&&m){let g=r,x=n;for(let b=0;b<a;++b)c[b]=b;return[g,[a,p],x,l,c]}else{let g=d[u-1],x=y.getArrayFromDType(e,g*p),b=y.getArrayFromDType(o,g),w=new Array(u).fill(0);for(let C=0;C<a;++C){let N=r[C*p],_=w[N],A=(N===0?0:d[N-1])+_;w[N]++;for(let $=0;$<p;++$)x[A*p+$]=r[C*p+$];b[A]=n[C],c[C]=A}for(let C=0;C<u;++C)if(w[C]===0){let _=C===0?0:d[C-1];x[_*p+0]=C;for(let A=1;A<p;++A)x[_*p+A]=0;b[_]=i}return[x,[g,p],b,l,c]}}function aw(r,t,e,n,o){let s=y.sizeFromShape(n),i=t[0],a=o.length,u=[],l=1,c=-1;for(let g=0;g<a;++g){let x=o[g];if(x===-1){if(c!==-1)throw new Error(S.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,g));c=g,u.push(1)}else{if(x<0)throw new Error(S.getSparseReshapeNegativeOutputDimErrorMessage(g,x));l*=x,u.push(x)}}if(c!==-1){if(l<=0)throw new Error(S.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/l);if(l*g!==s)throw new Error(S.getSparseReshapeInputOutputMultipleErrorMessage(n,u));u[c]=g}if(y.sizeFromShape(u)!==s)throw new Error(S.getSparseReshapeInputOutputMismatchErrorMessage(n,u));let m=n.length,f=[];if(m>0){f[m-1]=1;for(let g=m-2;g>=0;--g)f[g]=f[g+1]*n[g+1]}let d=[];if(a>0){d[a-1]=1;for(let g=a-2;g>=0;--g)d[g]=d[g+1]*u[g+1]}let h=y.getArrayFromDType(e,i*a);for(let g=0;g<i;++g){let x=0;for(let b=0;b<m;++b)x+=r[g*m+b]*f[b];for(let b=0;b<a;++b)h[g*a+b]=Math.trunc(x/d[b]),x%=d[b]}return[h,[i,a],u]}function cd(r,t,e,n,o,s=!1,i=0){let a=n.length,u=[t[0],r.length/t[0]],l=u[1],p=a>0?o[a-1]+1:0;if(p<0)throw new Error(S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=t.slice();m[0]=p;let f=m.reduce((w,C)=>w*C,1),d=y.getArrayFromDType(e,f);if(a===0)return p>0&&d.fill(i),[d,m];if(p<=0)throw new Error(S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=0,g=1,x=0,b=o[h];for(;;){let w=0;if(g<a){if(w=o[g],b===w){++g;continue}if(b>=w)throw new Error(S.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=p)throw new Error(S.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,p));b>x&&d.fill(i,x*l,b*l);for(let C=h;C<g;++C){let N=n[C];if(N<0||N>=u[0])throw new Error(S.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(C,n[C],u[0]));for(let _=0;_<l;_++)d[b*l+_]+=r[N*l+_]}if(s)for(let C=0;C<l;C++)d[b*l+C]/=g-h;if(h=g,++g,x=b+1,b=w,g>a)break}return x<p&&d.fill(i,x*l,p*l),[d,m]}var uF=wn(r=>Math.sqrt(r)),SJ=Et($s,r=>Math.sqrt(r)),cF={kernelName:$s,backendName:"cpu",kernelFunc:SJ};var uT=Qt((r,t)=>{let e=r-t;return e*e}),NJ=ie(Fs,uT),pF={kernelName:Fs,backendName:"cpu",kernelFunc:NJ};function lw(r,t,e,n){let o=bt(r,t.dtype);for(let s=0;s<o.size;s++){let i=o.indexToLoc(s),a=new Array(i.length);for(let u=0;u<a.length;u++)a[u]=i[u]*e[u]+n[u];o.set(t.get(...a),...i)}return o}var cT=class{constructor(t,e,n,o,s,i){this.separator=y.encodeString(t),this.nGramWidths=e,this.leftPad=y.encodeString(n),this.rightPad=y.encodeString(o),this.padWidth=s,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){let n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,o,s,i){for(let a=0;a<s;++a){let u=this.getPadWidth(i),l=Math.max(0,u-a),c=Math.max(0,u-(s-(a+1))),p=i-(l+c),m=e+(l>0?0:a-u),f=0;f+=l*this.leftPad.length;for(let b=0;b<p;++b)f+=t[m+b].length;f+=c*this.rightPad.length;let d=l+c+p-1;f+=d*this.separator.length,n[o+a]=new Uint8Array(f);let h=n[o+a],g=0,x=b=>b.forEach(w=>h[g++]=w);for(let b=0;b<l;++b)x(this.leftPad),x(this.separator);for(let b=0;b<p-1;++b)x(t[m+b]),x(this.separator);if(p>0){x(t[m+p-1]);for(let b=0;b<c;++b)x(this.separator),x(this.rightPad)}else{for(let b=0;b<c-1;++b)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(t,e){let n=t.length,o=e.length;if(o>0){let u=e[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<o;++l){let c=e[l]>=u;if(c=c&&e[l]<=n,!c)throw new Error(`Invalid split value ${e[l]}, must be in [${u}, ${n}]`);u=e[l]}if(u!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${u}`)}let s=o-1,i=y.getArrayFromDType("int32",o);if(n===0||o===0){let u=new Array(n);for(let l=0;l<=s;++l)i[l]=0;return[u,i]}i[0]=0;for(let u=1;u<=s;++u){let l=e[u]-e[u-1],c=0;this.nGramWidths.forEach(p=>{c+=this.getNumNGrams(l,p)}),this.preserveShort&&l>0&&c===0&&(c=1),i[u]=i[u-1]+c}let a=new Array(i[s]);for(let u=0;u<s;++u){let l=e[u],c=i[u];if(this.nGramWidths.forEach(p=>{let m=e[u+1]-e[u],f=this.getNumNGrams(m,p);this.createNGrams(t,l,a,c,f,p),c+=f}),this.preserveShort&&c===i[u]){let p=e[u+1]-e[u];if(p===0)continue;let m=p+2*this.padWidth,f=1;this.createNGrams(t,l,a,c,f,m)}}return[a,i]}};function Fc(r,t,e,n,o,s,i,a){return new cT(e,n,o,s,i,a).compute(r,t)}function TJ(r,t,e,n){if(!r.length)return;if(t.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=r.indexOf(s);for(;i!==-1;){let a=r.subarray(0,i);(!e||a.length!==0)&&n.push(a),r=r.subarray(i+1),i=r.indexOf(s)}(!e||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||t.indexOf(r[s])!==-1){let i=r.subarray(o,s);(!e||i.length!==0)&&n.push(i),o=s+1}}function Oc(r,t,e){let n=r.length,o=[],s=0,i=0,a=new Array(n);for(let m=0;m<n;++m){let f=o.length;TJ(r[m],t,e,o);let d=o.length-f;a[m]=d,s+=d,i=Math.max(i,d)}let u=y.getArrayFromDType("int32",s*2),l=new Array(s),c=[n,i],p=0;for(let m=0;m<n;++m)for(let f=0;f<a[m];++f)u[p*2]=m,u[p*2+1]=f,l[p]=o[p],++p;return[u,l,c]}function Pc(r,t){let e=y.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)e[n]=y.fingerPrint64(r[n]).modulo(t).getLowBitsUnsigned();return e}var pT=Qt((r,t)=>r-t),kJ=id((r,t,e,n)=>({real:r-e,imag:t-n})),Wh=ie(Os,pT,kJ),mF={kernelName:Os,backendName:"cpu",kernelFunc:Wh};function uw(r,t){let e=new Array(r.rank);for(let o=0;o<e.length;o++)e[o]=r.shape[o]*t[o];let n=bt(e,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),i=new Array(r.rank);for(let u=0;u<i.length;u++)i[u]=s[u]%r.shape[u];let a=r.locToIndex(i);n.values[o]=r.values[a]}return n}var Uh=(r,t)=>{let e=t.value-r.value;return e===0?r.index-t.index:e};function fF(r,t,e=0,n=r.length-1){for(;n>e;){if(n-e>600){let a=n-e+1,u=t-e+1,l=Math.log(a),c=.5*Math.exp(2*l/3),p=.5*Math.sqrt(l*c*(a-c)/a)*Math.sign(u-a/2),m=Math.max(e,Math.floor(t-u*c/a+p)),f=Math.min(n,Math.floor(t+(a-u)*c/a+p));fF(r,t,m,f)}let o=r[t],s=e,i=n;for(y.swap(r,e,t),Uh(r[n],o)>0&&y.swap(r,e,n);s<i;){for(y.swap(r,s,i),s++,i--;Uh(r[s],o)<0;)s=s+1;for(;Uh(r[i],o)>0;)i=i-1}Uh(r[e],o)===0?y.swap(r,e,i):(i=i+1,y.swap(r,i,n)),i<=t&&(e=i+1),t<=i&&(n=i-1)}}function cw(r,t,e,n,o){let s=t[t.length-1],[i,a]=[r.length/s,s],u=y.getTypedArrayFromDType(e,i*n),l=y.getTypedArrayFromDType("int32",i*n);for(let p=0;p<i;p++){let m=p*a,f=r.subarray(m,m+a),d=new Array(f.length);f.forEach((b,w)=>d[w]={value:b,index:w}),n<d.length&&(fF(d,n),d=d.slice(0,n)),o&&d.sort(Uh);let h=p*n,g=u.subarray(h,h+n),x=l.subarray(h,h+n);for(let b=0;b<n;b++)g[b]=d[b].value,x[b]=d[b].index}let c=t.slice();return c[c.length-1]=n,[bt(c,e,u),bt(c,"int32",l)]}function pw(r,t,e,n){let o=y.parseAxisParam(t,e)[0],s=[1,e[0],1];for(let d=0;d<o;d++)s[0]*=e[d];s[1]=e[o];for(let d=o+1;d<e.length;d++)s[2]*=e[d];let i={},a=new Int32Array(e[o]),u=new pe(s,n,r),l=[],c=s[0]===1&&s[2]===1;for(let d=0;d<e[o];d++){let h;if(c)h=r[d].toString();else{let g=[];for(let x=0;x<s[0];x++)for(let b=0;b<s[2];b++)g.push(u.get(x,d,b));h=g.join(",")}if(i[h]!==void 0)a[d]=i[h];else{let g=Object.keys(i).length;i[h]=g,a[d]=g,l.push(d)}}let p=s.slice();p[1]=Object.keys(i).length;let m=new pe(p,n);l.forEach((d,h)=>{for(let g=0;g<s[0];g++)for(let x=0;x<s[2];x++)m.set(u.get(g,d,x),g,h,x)});let f=e.slice();return f[o]=p[1],{outputValues:m.values,outputShape:f,indices:a}}Yp("cpu",()=>new wu,1);var mT=Et(Qo,r=>r>=0?r:Math.exp(r)-1),dF={kernelName:Qo,backendName:"cpu",kernelFunc:mT};function fT(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n;tt([o],"leakyRelu");let i=y.sizeFromShape(o.shape),a=e.data.get(o.dataId).values,u=y.getTypedArrayFromDType("float32",i);for(let l=0;l<a.length;l++)u[l]=a[l]<0?s*a[l]:a[l];return e.makeTensorInfo(o.shape,"float32",u)}var hF={kernelName:is,backendName:"cpu",kernelFunc:fT};var _J=Qt((r,t)=>r<0?t*r:r);function dT(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t;tt([n,o],"prelu");let s=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,[a,u]=_J(n.shape,o.shape,s,i,"float32");return e.makeTensorInfo(u,"float32",a)}var gF={kernelName:bs,backendName:"cpu",kernelFunc:dT};var hT=Et(Is,r=>Math.max(0,r)),xF={kernelName:Is,backendName:"cpu",kernelFunc:hT};var gT=Et(Ns,r=>Math.min(Math.max(0,r),6)),yF={kernelName:Ns,backendName:"cpu",kernelFunc:gT};function Lc(r,t,e,n,o){if(e==="linear")return Xr({inputs:{x:t},backend:r});if(e==="relu")return hT({inputs:{x:t},backend:r});if(e==="elu")return mT({inputs:{x:t},backend:r});if(e==="relu6")return gT({inputs:{x:t},backend:r});if(e==="prelu")return dT({inputs:{x:t,alpha:n},backend:r});if(e==="leakyrelu")return fT({inputs:{x:t},backend:r,attrs:{alpha:o}});if(e==="sigmoid")return lT({inputs:{x:t},backend:r});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function Zt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{shape:s}=n,i=y.sizeFromShape(o.shape),a=y.inferFromImplicitShape(s,i),u=y.sizeFromShape(a);y.assert(i===u,()=>`The new shape (${a}) has ${u} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(o.dataId);let l=e.data.get(o.dataId);if(l.complexTensorInfos!=null){let c=l.complexTensorInfos.real,p=l.complexTensorInfos.imag;c.shape=a,p.shape=a}return{dataId:o.dataId,shape:a,dtype:o.dtype}}var bF={kernelName:gi,backendName:"cpu",kernelFunc:Zt};function xT(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:i,transposeB:a}=n;tt([o,s],"matMul");let u=o.shape.length,l=s.shape.length,c=i?o.shape[u-2]:o.shape[u-1],p=a?s.shape[l-1]:s.shape[l-2],m=i?o.shape[u-1]:o.shape[u-2],f=a?s.shape[l-2]:s.shape[l-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(d),x=y.sizeFromShape(h),w=Wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([m,f]);y.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let C=i?[g,c,m]:[g,m,c],N=a?[x,f,p]:[x,p,f],_=Zt({inputs:{x:o},backend:e,attrs:{shape:C}}),A=Zt({inputs:{x:s},backend:e,attrs:{shape:N}}),$=i?_.shape[1]:_.shape[2],F=i?_.shape[2]:_.shape[1],P=a?A.shape[1]:A.shape[2],V=Math.max(g,x),G=e.data.get(_.dataId).values,W=e.data.get(A.dataId).values,q=y.computeStrides(_.shape),H=y.computeStrides(A.shape),[K,X,Z]=i?[q[0],1,q[1]]:[q[0],q[1],1],[et,rt,ot]=a?[1,H[1],H[0]]:[H[1],1,H[0]],at=F*P,nt=bt([V,F,P],_.dtype),st=nt.values,ft=e.blockSize;for(let gt=0;gt<V;gt++){let Ct=gt%g,$t=gt%x;for(let _t=0;_t<F;_t+=ft){let Gt=Math.min(_t+ft,F);for(let Wt=0;Wt<P;Wt+=ft){let ue=Math.min(Wt+ft,P);for(let he=0;he<$;he+=ft){let ee=Math.min(he+ft,$);for(let ge=_t;ge<Gt;ge++)for(let fe=Wt;fe<ue;fe++){let Ae=0;for(let $e=he;$e<ee;$e++){let $n=G[Ct*K+ge*X+$e*Z],ar=W[$e*et+fe*rt+$t*ot];Ae+=$n*ar}st[gt*at+(ge*P+fe)]+=Ae}}}}}return e.disposeIntermediateTensorInfo(_),e.disposeIntermediateTensorInfo(A),e.makeTensorInfo(w,nt.dtype,nt.values)}var wF={kernelName:Uo,backendName:"cpu",kernelFunc:xT};function AJ(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=n,m,f,d,h=[];m=xT({inputs:{a:o,b:s},attrs:{transposeA:u,transposeB:l},backend:e}),i&&(f=Yi({inputs:{a:m,b:i},backend:e}),h.push(m),m=f),c&&(d=Lc(e,m,c,a,p),h.push(m),m=d);for(let x of h)e.disposeIntermediateTensorInfo(x);return m}var CF={kernelName:vi,backendName:"cpu",kernelFunc:AJ};var $J=Et(la,r=>Math.acos(r)),IF={kernelName:la,backendName:"cpu",kernelFunc:$J};var DJ=Et(ua,r=>Math.acosh(r)),vF={kernelName:ua,backendName:"cpu",kernelFunc:DJ};function RJ(r){let{inputs:t,backend:e}=r,n=t;tt(t,"addN");let o=n.map(a=>e.data.get(a.dataId).values),s=bt(n[0].shape,n[0].dtype),i=s.values;for(let a=0;a<n.length;a++){let u=o[a];for(let l=0;l<i.length;l++)i[l]+=u[l]}return e.makeTensorInfo(s.shape,s.dtype,s.values)}var SF={kernelName:Vo,backendName:"cpu",kernelFunc:RJ};function FJ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n;tt(o,"all");let a=y.parseAxisParam(s,o.shape),u=a,l=S.getAxesPermutation(u,o.shape.length),c=o;l!=null&&(c=Ge({inputs:{x:o},backend:e,attrs:{perm:l}}),u=S.getInnerMostAxes(u.length,o.shape.length)),S.assertAxesAreInnerMostDims("all",u,c.shape.length);let[p,m]=S.computeOutAndReduceShapes(c.shape,u),f=y.sizeFromShape(m),d=y.makeZerosTypedArray(y.sizeFromShape(p),c.dtype),h=e.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let b=x*f,w=h[b];for(let C=0;C<f;++C){let N=h[b+C];w=w&&N}d[x]=w}l!=null&&e.disposeIntermediateTensorInfo(c);let g=e.makeTensorInfo(p,c.dtype,d);if(i){let x=S.expandShapeToKeepDim(p,a),b=Zt({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),b}return g}var NF={kernelName:ca,backendName:"cpu",kernelFunc:FJ};function OJ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n;tt(o,"any");let a=y.parseAxisParam(s,o.shape),u=a,l=S.getAxesPermutation(u,o.shape.length),c=o;l!=null&&(c=Ge({inputs:{x:o},backend:e,attrs:{perm:l}}),u=S.getInnerMostAxes(u.length,o.shape.length)),S.assertAxesAreInnerMostDims("any",u,c.shape.length);let[p,m]=S.computeOutAndReduceShapes(c.shape,u),f=y.sizeFromShape(m),d=y.makeZerosTypedArray(y.sizeFromShape(p),c.dtype),h=e.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let b=x*f,w=h[b];for(let C=0;C<f;++C){let N=h[b+C];w=w||N}d[x]=w}l!=null&&e.disposeIntermediateTensorInfo(c);let g=e.makeTensorInfo(p,c.dtype,d);if(i){let x=S.expandShapeToKeepDim(p,a),b=Zt({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),b}return g}var TF={kernelName:pa,backendName:"cpu",kernelFunc:OJ};function PJ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n;tt(o,"argMax");let i=y.parseAxisParam(s,o.shape),a=S.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=Ge({inputs:{x:o},backend:e,attrs:{perm:a}}),l.push(u),i=S.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],S.assertAxesAreInnerMostDims("argMax",i,u.shape.length);let[c,p]=S.computeOutAndReduceShapes(u.shape,i),m=y.sizeFromShape(c),f=y.makeZerosTypedArray(m,"int32"),d=y.sizeFromShape(p),h=e.data.get(u.dataId).values;for(let g=0;g<f.length;++g){let x=g*d,b=h[x],w=0;for(let C=0;C<d;++C){let N=h[x+C];N>b&&(b=N,w=C)}f[g]=w}return l.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(c,"int32",f)}var kF={kernelName:Go,backendName:"cpu",kernelFunc:PJ};function LJ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n;tt(o,"argMin");let i=y.parseAxisParam(s,o.shape),a=S.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=Ge({inputs:{x:o},backend:e,attrs:{perm:a}}),l.push(u),i=S.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],S.assertAxesAreInnerMostDims("argMin",i,u.shape.length);let[c,p]=S.computeOutAndReduceShapes(u.shape,i),m=y.sizeFromShape(c),f=y.makeZerosTypedArray(m,"int32"),d=y.sizeFromShape(p),h=e.data.get(u.dataId).values;for(let g=0;g<f.length;++g){let x=g*d,b=h[x],w=0;for(let C=0;C<d;++C){let N=h[x+C];N<b&&(b=N,w=C)}f[g]=w}return l.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(c,"int32",f)}var EF={kernelName:_l,backendName:"cpu",kernelFunc:LJ};var MJ=Et(ma,r=>Math.asin(r)),_F={kernelName:ma,backendName:"cpu",kernelFunc:MJ};var zJ=Et(fa,r=>Math.asinh(r)),AF={kernelName:fa,backendName:"cpu",kernelFunc:zJ};var BJ=Et(da,r=>Math.atan(r)),$F={kernelName:da,backendName:"cpu",kernelFunc:BJ};var VJ=Qt((r,t)=>Math.atan2(r,t)),GJ=ie(ga,VJ),DF={kernelName:ga,backendName:"cpu",kernelFunc:GJ};var WJ=Et(ha,r=>Math.atanh(r)),RF={kernelName:ha,backendName:"cpu",kernelFunc:WJ};function pd(r,t,e,n,o,s){let i=o.strideHeight,a=o.strideWidth,u=o.dilationHeight,l=o.dilationWidth,c=o.effectiveFilterHeight,p=o.effectiveFilterWidth,m=o.padInfo.top,f=o.padInfo.left,d=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,h=bt(o.outShape,e),g=h.values,x=o.outShape[1]*o.outShape[2]*o.outShape[3],b=o.outShape[2]*o.outShape[3],w=o.outShape[3];for(let C=0;C<o.batchSize;++C){let N=C*x,_=C*n[0];for(let A=0;A<o.inChannels;++A)for(let $=0;$<o.outHeight;++$){let F=$*i-m,P=Math.max(0,F),V=Math.min(o.inHeight,c+F),G=N+$*b;for(let W=0;W<o.outWidth;++W){let q=W*a-f,H=Math.max(0,q),K=Math.min(o.inWidth,p+q),X=d,Z=0,et=0;for(let ot=P;ot<V;ot+=u){let at=_+ot*n[1];for(let nt=H;nt<K;nt+=l){let st=at+nt*n[2],ft=r[st+A];s==="max"&&ft>X?X=ft:s==="avg"&&(Z+=ft,et++)}if(isNaN(X))break}let rt=G+W*w+A;g[rt]=s==="avg"?Z/et:X}}}return h}function fw(r,t,e,n,o=!1,s=!1){let i=bt(n.outShape,"int32"),a=n.strideHeight,u=n.strideWidth,l=n.dilationHeight,c=n.dilationWidth,p=n.effectiveFilterHeight,m=n.effectiveFilterWidth,f=n.padInfo.top,d=n.padInfo.left,h=bt(t,e,r);for(let g=0;g<n.batchSize;++g)for(let x=0;x<n.inChannels;++x)for(let b=0;b<n.outHeight;++b){let w=b*a-f,C=w;for(;C<0;)C+=l;let N=Math.min(n.inHeight,p+w);for(let _=0;_<n.outWidth;++_){let A=_*u-d,$=A;for(;$<0;)$+=c;let F=Math.min(n.inWidth,m+A),P=Number.NEGATIVE_INFINITY,V=-1;for(let G=C;G<N;G+=l){let W=G-w;for(let q=$;q<F;q+=c){let H=q-A,K=h.get(g,G,q,x);K>P&&(P=K,o?V=s?((g*n.inHeight+G)*n.inWidth+q)*n.inChannels+x:(G*n.inWidth+q)*n.inChannels+x:V=W*m+H)}}i.set(V,g,b,_,x)}}return i}function dw(r,t,e,n,o,s){let i=o.strideDepth,a=o.strideHeight,u=o.strideWidth,l=o.dilationDepth,c=o.dilationHeight,p=o.dilationWidth,m=o.effectiveFilterDepth,f=o.effectiveFilterHeight,d=o.effectiveFilterWidth,h=o.padInfo.front,g=o.padInfo.top,x=o.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=bt(o.outShape,e),C=w.values,N=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],_=o.outShape[2]*o.outShape[3]*o.outShape[4],A=o.outShape[3]*o.outShape[4],$=o.outShape[4];for(let F=0;F<o.batchSize;++F){let P=F*N,V=F*n[0];for(let G=0;G<o.inChannels;++G)for(let W=0;W<o.outDepth;++W){let q=W*i-h,H=q;for(;H<0;)H+=l;let K=Math.min(o.inDepth,m+q),X=P+W*_;for(let Z=0;Z<o.outHeight;++Z){let et=Z*a-g,rt=et;for(;rt<0;)rt+=c;let ot=Math.min(o.inHeight,f+et),at=X+Z*A;for(let nt=0;nt<o.outWidth;++nt){let st=nt*u-x,ft=st;for(;ft<0;)ft+=p;let gt=Math.min(o.inWidth,d+st),Ct=at+nt*$,$t=b,_t=0,Gt=0;for(let ue=H;ue<K;ue+=l){let he=V+ue*n[1];for(let ee=rt;ee<ot;ee+=c){let ge=he+ee*n[2];for(let fe=ft;fe<gt;fe+=p){let Ae=ge+fe*n[3],$e=r[Ae+G];if(s==="max"&&$e>$t?$t=$e:s==="avg"&&(_t+=$e,Gt++),isNaN($t))break}if(isNaN($t))break}if(isNaN($t))break}let Wt=Ct+G;C[Wt]=s==="avg"?_t/Math.max(Gt,1):$t}}}}return w}function FF(r,t){let e=bt(t.outShape,"int32"),n=t.strideDepth,o=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,a=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,m=t.padInfo.front,f=t.padInfo.top,d=t.padInfo.left;for(let h=0;h<t.batchSize;++h)for(let g=0;g<t.inChannels;++g)for(let x=0;x<t.outDepth;++x){let b=x*n-m,w=b;for(;w<0;)w+=i;let C=Math.min(t.inDepth,l+b);for(let N=0;N<t.outHeight;++N){let _=N*o-f,A=_;for(;A<0;)A+=a;let $=Math.min(t.inHeight,c+_);for(let F=0;F<t.outWidth;++F){let P=F*s-d,V=P;for(;V<0;)V+=u;let G=Math.min(t.inWidth,p+P),W=Number.NEGATIVE_INFINITY,q=-1;for(let H=w;H<C;H+=i){let K=H-b;for(let X=A;X<$;X+=a){let Z=X-_;for(let et=V;et<G;et+=u){let rt=et-P,ot=r.get(h,H,X,et,g);ot>=W&&(W=ot,q=K*c*p+Z*c+rt)}}}e.set(q,h,x,N,F,g)}}}return e}function UJ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;tt(o,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;y.assert(S.eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=S.computePool2DInfo(o.shape,s,i,l,a,u),p;if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))p=Xr({inputs:{x:o},backend:e});else{let m=e.data.get(o.dataId).values,f=y.computeStrides(o.shape),d=pd(m,o.shape,o.dtype,f,c,"avg");p=e.makeTensorInfo(c.outShape,o.dtype,d.values)}return p}var OF={kernelName:Wo,backendName:"cpu",kernelFunc:UJ};function HJ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=n;tt(o,"avgPool3d");let c=S.computePool3DInfo(o.shape,s,i,1,a,u,l),p=e.data.get(o.dataId).values,m=dw(p,o.shape,o.dtype,y.computeStrides(o.shape),c,"avg");return e.makeTensorInfo(m.shape,"float32",m.values)}var PF={kernelName:Al,backendName:"cpu",kernelFunc:HJ};function qJ(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=n;tt([o,s],"avgPool3DGrad");let c=S.computePool3DInfo(s.shape,i,a,1,u,l),p=c.strideDepth,m=c.strideHeight,f=c.strideWidth,d=c.filterDepth,h=c.filterHeight,g=c.filterWidth,x=c.dilationDepth,b=c.dilationHeight,w=c.dilationWidth,C=c.effectiveFilterDepth,N=c.effectiveFilterHeight,_=c.effectiveFilterWidth,A=C-1-c.padInfo.front,$=_-1-c.padInfo.left,F=N-1-c.padInfo.top,P=bt(s.shape,"float32"),V=1/(d*h*g),G=e.bufferSync(o);for(let W=0;W<c.batchSize;++W)for(let q=0;q<c.inChannels;++q)for(let H=0;H<c.inDepth;++H)for(let K=0;K<c.inHeight;++K)for(let X=0;X<c.inWidth;++X){let Z=H-A,et=K-F,rt=X-$,ot=0;for(let at=0;at<C;at+=x){let nt=(Z+at)/p;if(!(nt<0||nt>=c.outDepth||Math.floor(nt)!==nt))for(let st=0;st<N;st+=b){let ft=(et+st)/m;if(!(ft<0||ft>=c.outHeight||Math.floor(ft)!==ft))for(let gt=0;gt<_;gt+=w){let Ct=(rt+gt)/f;if(Ct<0||Ct>=c.outWidth||Math.floor(Ct)!==Ct)continue;let $t=G.get(W,nt,ft,Ct,q);ot+=$t}}}P.set(ot*V,W,H,K,X,q)}return e.makeTensorInfo(P.shape,P.dtype,P.values)}var LF={kernelName:up,backendName:"cpu",kernelFunc:qJ};function KJ(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,i=s;tt([o,s],"avgPoolGrad");let{filterSize:a,strides:u,pad:l}=n,c=S.computePool2DInfo(i.shape,a,u,1,l),p=c.strideHeight,m=c.strideWidth,f=c.filterHeight,d=c.filterWidth,h=c.dilationHeight,g=c.dilationWidth,x=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=b-1-c.padInfo.left,C=x-1-c.padInfo.top,N=bt(i.shape,"float32"),_=1/(f*d),A=e.data.get(o.dataId).values,$=bt(o.shape,"float32",A);for(let F=0;F<c.batchSize;++F)for(let P=0;P<c.inChannels;++P)for(let V=0;V<c.inHeight;++V)for(let G=0;G<c.inWidth;++G){let W=V-C,q=G-w,H=0;for(let K=0;K<x;K+=h){let X=(W+K)/p;if(!(X<0||X>=c.outHeight||Math.floor(X)!==X))for(let Z=0;Z<b;Z+=g){let et=(q+Z)/m;if(et<0||et>=c.outWidth||Math.floor(et)!==et)continue;let rt=$.get(F,X,et,P);H+=rt}}N.set(H*_,F,V,G,P)}return e.makeTensorInfo(N.shape,N.dtype,N.values)}var MF={kernelName:lp,backendName:"cpu",kernelFunc:KJ};function jJ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,scale:s,offset:i,mean:a,variance:u}=t;y.assert(a.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(s==null||a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),tt([o,a,u,s,i],"batchNorm");let{varianceEpsilon:l}=n;l==null&&(l=.001);let c=e.data.get(o.dataId).values,p=e.data.get(a.dataId).values,m=e.data.get(u.dataId).values,f=s?e.data.get(s.dataId).values:new Float32Array([1]),d=i?e.data.get(i.dataId).values:new Float32Array([0]),h=new Float32Array(c.length),g=d.length,x=f.length,b=m.length,w=p.length,C=0,N=0,_=0,A=0;for(let $=0;$<c.length;++$)h[$]=d[C++]+(c[$]-p[N++])*f[_++]/Math.sqrt(m[A++]+l),C>=g&&(C=0),N>=w&&(N=0),_>=x&&(_=0),A>=b&&(A=0);return e.makeTensorInfo(o.shape,o.dtype,h)}var zF={kernelName:ns,backendName:"cpu",kernelFunc:jJ};function XJ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:i}=n;tt([o],"batchToSpaceND");let a=s.reduce((x,b)=>x*b),u=S.getReshaped(o.shape,s,a),l=S.getPermuted(u.length,s.length),c=S.getReshapedPermuted(o.shape,s,a),p=S.getSliceBeginCoords(i,s.length),m=S.getSliceSize(c,i,s.length),f=Zt({inputs:{x:o},backend:e,attrs:{shape:u}}),d=Ge({inputs:{x:f},backend:e,attrs:{perm:l}}),h=Zt({inputs:{x:d},backend:e,attrs:{shape:c}}),g=Fo({inputs:{x:h},backend:e,attrs:{begin:p,size:m}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),g}var BF={kernelName:ui,backendName:"cpu",kernelFunc:XJ};function YJ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:i}=n,a=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,l=ad(a,u,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,l)}var VF={kernelName:cp,backendName:"cpu",kernelFunc:YJ};function ZJ(r){let{inputs:t,backend:e}=r,{s0:n,s1:o}=t,s=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,a=S.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var GF={kernelName:pp,backendName:"cpu",kernelFunc:ZJ};var JJ=Et(co,(r,t)=>{let e=t;return r>e.clipValueMax?e.clipValueMax:r<e.clipValueMin?e.clipValueMin:r}),WF={kernelName:co,backendName:"cpu",kernelFunc:JJ};var QJ=r=>{let{x:t}=r.inputs,e=r.backend,n=new Float32Array(y.sizeFromShape(t.shape)),o=e.data.get(t.dataId),s=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,a=e.data.get(s.dataId).values,u=e.data.get(i.dataId).values;for(let l=0;l<a.length;l++){let c=a[l],p=u[l];n[l]=Math.hypot(c,p)}return e.makeOutput(n,t.shape,"float32")},UF={kernelName:$l,backendName:"cpu",kernelFunc:QJ};function Zi(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.data.get(n.dataId).complexTensorInfos.imag,s=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,s)}var HF={kernelName:Sp,backendName:"cpu",kernelFunc:Zi};function Cu(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,t[0].shape)[0],i=t.map(h=>h.shape);S.assertParamsConsistent(i,s);let a=S.computeOutShape(t.map(h=>h.shape),s);if(y.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let u=t.filter(h=>y.sizeFromShape(h.shape)>0);if(u.length===1)return Xr({inputs:{x:u[0]},backend:e});if(u[0].dtype==="complex64"){let h=u.map(C=>Ao({inputs:{input:C},backend:e})),g=u.map(C=>Zi({inputs:{input:C},backend:e})),x=Cu({inputs:h,backend:e,attrs:{axis:s}}),b=Cu({inputs:g,backend:e,attrs:{axis:s}}),w=Ir({inputs:{real:x,imag:b},backend:e});return h.forEach(C=>e.disposeIntermediateTensorInfo(C)),g.forEach(C=>e.disposeIntermediateTensorInfo(C)),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(b),w}let l=u.map(h=>{let x=[-1,y.sizeFromShape(h.shape.slice(s))];return Zt({inputs:{x:h},backend:e,attrs:{shape:x}})}),c=l.map(h=>({vals:e.data.get(h.dataId).values,shape:h.shape}));a=S.computeOutShape(l.map(h=>h.shape),1);let p=l[0].shape[0]===1,m=Ac(c,a,t[0].dtype,p),f=S.computeOutShape(u.map(h=>h.shape),s),d=e.makeTensorInfo(f,t[0].dtype,m);return l.forEach(h=>e.disposeIntermediateTensorInfo(h)),d}var qF={kernelName:ci,backendName:"cpu",kernelFunc:Cu};function yT(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:i,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=n;tt([o,s],"conv2d");let p=S.convertConv2DDataFormat(u),m=S.computeConv2DInfo(o.shape,s.shape,i,l,a,c,!1,p),f=m.filterHeight,d=m.filterWidth,h=m.dilationHeight,g=m.dilationWidth,x=m.padInfo.left,b=m.padInfo.top,w=m.dataFormat==="channelsLast",C=new pe(m.outShape,o.dtype),N=y.computeStrides(o.shape),_=y.computeStrides(s.shape),A=N[0],$=w?N[1]:N[2],F=w?N[2]:1,P=w?1:N[1],V=C.strides[0],G=w?C.strides[1]:C.strides[2],W=w?C.strides[2]:1,q=w?1:C.strides[1],H=e.data.get(o.dataId).values,K=e.data.get(s.dataId).values,X=C.values;for(let Z=0;Z<m.batchSize;++Z){let et=Z*A,rt=Z*V;for(let ot=0;ot<m.outHeight;++ot){let at=rt+ot*G,nt=ot*m.strideHeight-b;for(let st=0;st<f;++st){let ft=nt+st*h;if(ft<0||ft>=m.inHeight)continue;let gt=st*_[0],Ct=et+ft*$;for(let $t=0;$t<m.outWidth;++$t){let _t=at+$t*W,Gt=$t*m.strideWidth-x;for(let Wt=0;Wt<d;++Wt){let ue=Gt+Wt*g;if(ue<0||ue>=m.inWidth)continue;let he=gt+Wt*_[1],ee=Ct+ue*F,ge=he;for(let fe=0;fe<m.inChannels;++fe){let Ae=H[ee+fe*P];for(let $e=0;$e<m.outChannels;++$e)X[_t+$e*q]+=Ae*K[ge+$e];ge+=m.outChannels}}}}}}return e.makeTensorInfo(C.shape,C.dtype,X)}var KF={kernelName:qo,backendName:"cpu",kernelFunc:yT};function tQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:i,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=n;tt([o,s],"conv2dBackpropFilter");let p=S.convertConv2DDataFormat(u),m=S.computeConv2DInfo(o.shape,c,i,1,a,l,!1,p),{strideHeight:f,strideWidth:d,filterHeight:h,filterWidth:g}=m,x=m.dataFormat==="channelsLast",b=new pe(m.filterShape,"float32"),w=m.padInfo.left,C=m.padInfo.top,N=e.data.get(o.dataId).values,_=e.data.get(s.dataId).values,A=new pe(o.shape,o.dtype,N),$=new pe(s.shape,s.dtype,_);for(let F=0;F<h;++F){let P=Math.max(0,Math.ceil((C-F)/f)),V=Math.min(m.outHeight,(m.inHeight+C-F)/f);for(let G=0;G<g;++G){let W=Math.max(0,Math.ceil((w-G)/d)),q=Math.min(m.outWidth,(m.inWidth+w-G)/d);for(let H=0;H<m.inChannels;++H)for(let K=0;K<m.outChannels;++K){let X=0;for(let Z=0;Z<m.batchSize;++Z)for(let et=P;et<V;++et){let rt=F+et*f-C;for(let ot=W;ot<q;++ot){let at=G+ot*d-w;x?X+=A.get(Z,rt,at,H)*$.get(Z,et,ot,K):X+=A.get(Z,H,rt,at)*$.get(Z,K,et,ot)}}b.set(X,F,G,H,K)}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}var jF={kernelName:fp,backendName:"cpu",kernelFunc:tQ};function eQ(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:i,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=n;tt([o,s],"conv2dBackpropInput");let p=y.computeStrides(s.shape),m=y.computeStrides(o.shape),f=S.convertConv2DDataFormat(l),d=S.computeConv2DInfo(i,s.shape,a,1,u,c,!1,f),h=new pe(d.inShape,"float32"),g=h.values,x=e.data.get(o.dataId).values,b=e.data.get(s.dataId).values,[w,C,N]=p,{batchSize:_,filterHeight:A,filterWidth:$,inChannels:F,inHeight:P,inWidth:V,outChannels:G,outHeight:W,outWidth:q,strideHeight:H,strideWidth:K}=d;f=d.dataFormat;let X=A-1-d.padInfo.top,Z=$-1-d.padInfo.left,et=f==="channelsLast",rt=h.strides[0],ot=et?h.strides[1]:h.strides[2],at=et?h.strides[2]:1,nt=et?1:h.strides[1],st=m[0],ft=et?m[1]:m[2],gt=et?m[2]:1,Ct=et?1:m[1];for(let $t=0;$t<_;++$t)for(let _t=0;_t<F;++_t)for(let Gt=0;Gt<P;++Gt){let Wt=Gt-X,ue=Math.max(0,Math.ceil(Wt/H)),he=Math.min(W,(A+Wt)/H);for(let ee=0;ee<V;++ee){let ge=ee-Z,fe=Math.max(0,Math.ceil(ge/K)),Ae=Math.min(q,($+ge)/K),$e=0;for(let ar=ue;ar<he;++ar){let qn=ar*H-Wt;for(let zr=fe;zr<Ae;++zr){let je=zr*K-ge,Br=st*$t+ft*ar+gt*zr,Vr=w*(A-1-qn)+C*($-1-je)+N*_t;for(let Kn=0;Kn<G;++Kn){let jn=x[Br+Ct*Kn],Zr=b[Vr+Kn];$e+=jn*Zr}}}let $n=rt*$t+ot*Gt+at*ee+nt*_t;g[$n]=$e}}return e.makeTensorInfo(h.shape,h.dtype,h.values)}var XF={kernelName:Ko,backendName:"cpu",kernelFunc:eQ};function rQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:i,pad:a,dilations:u}=n;tt([o,s],"conv3d");let l=S.computeConv3DInfo(o.shape,s.shape,i,u,a),{filterDepth:c,filterHeight:p,filterWidth:m,dilationDepth:f,dilationHeight:d,dilationWidth:h,padInfo:g}=l,x=g.front,b=g.left,w=g.top,C=new pe(l.outShape,o.dtype),N=e.data.get(o.dataId).values,_=e.data.get(s.dataId).values,A=C.values,$=y.computeStrides(o.shape),F=y.computeStrides(s.shape);for(let P=0;P<l.batchSize;++P){let V=P*$[0],G=P*C.strides[0];for(let W=0;W<l.outDepth;++W){let q=G+W*C.strides[1],H=W*l.strideDepth-x;for(let K=0;K<c;++K){let X=H+K*f;if(X<0||X>=l.inDepth)continue;let Z=K*F[0],et=V+X*$[1];for(let rt=0;rt<l.outHeight;++rt){let ot=q+rt*C.strides[2],at=rt*l.strideHeight-w;for(let nt=0;nt<p;++nt){let st=at+nt*d;if(st<0||st>=l.inHeight)continue;let ft=Z+nt*F[1],gt=et+st*$[2];for(let Ct=0;Ct<l.outWidth;++Ct){let $t=ot+Ct*l.outChannels,_t=Ct*l.strideWidth-b;for(let Gt=0;Gt<m;++Gt){let Wt=_t+Gt*h;if(Wt<0||Wt>=l.inWidth)continue;let ue=ft+Gt*F[2],he=gt+Wt*l.inChannels,ee=ue;for(let ge=0;ge<l.inChannels;++ge){let fe=N[he+ge];for(let Ae=0;Ae<l.outChannels;++Ae)A[$t+Ae]+=fe*_[ee+Ae];ee+=l.outChannels}}}}}}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}var YF={kernelName:Dl,backendName:"cpu",kernelFunc:rQ};function nQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:i,pad:a,filterShape:u}=n;tt([o,s],"conv3dBackpropFilterV2");let l=y.computeStrides(o.shape),c=y.computeStrides(s.shape),p=S.computeConv3DInfo(o.shape,u,i,1,a),m=p.strideDepth,f=p.strideHeight,d=p.strideWidth,h=p.filterDepth,g=p.filterHeight,x=p.filterWidth,b=new pe(p.filterShape,"float32"),w=b.values,[C,N,_,A]=b.strides,$=e.data.get(s.dataId).values,[F,P,V,G]=c,W=e.data.get(o.dataId).values,[q,H,K,X]=l,Z=p.padInfo.front,et=p.padInfo.left,rt=p.padInfo.top;for(let ot=0;ot<h;++ot){let at=Math.max(0,Math.ceil((Z-ot)/m)),nt=Math.min(p.outDepth,(p.inDepth+Z-ot)/m),st=ot*C;for(let ft=0;ft<g;++ft){let gt=Math.max(0,Math.ceil((rt-ft)/f)),Ct=Math.min(p.outHeight,(p.inHeight+rt-ft)/f),$t=ft*N+st;for(let _t=0;_t<x;++_t){let Gt=Math.max(0,Math.ceil((et-_t)/d)),Wt=Math.min(p.outWidth,(p.inWidth+et-_t)/d),ue=_t*_+$t;for(let he=0;he<p.inChannels;++he){let ee=he*A+ue;for(let ge=0;ge<p.outChannels;++ge){let fe=0;for(let Ae=0;Ae<p.batchSize;++Ae){let $e=Ae*q,$n=Ae*F;for(let ar=at;ar<nt;++ar){let zr=(ot+ar*m-Z)*H+$e,je=ar*P+$n;for(let Br=gt;Br<Ct;++Br){let Kn=(ft+Br*f-rt)*K+zr,jn=Br*V+je;for(let Zr=Gt;Zr<Wt;++Zr){let Mo=(_t+Zr*d-et)*X+Kn,si=Zr*G+jn;fe+=W[Mo+he]*$[si+ge]}}}}w[ee+ge]=fe}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}var ZF={kernelName:dp,backendName:"cpu",kernelFunc:nQ};function oQ(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{pad:i,strides:a,inputShape:u}=n;tt([o],"conv3dBackpropInputV2");let l=y.computeStrides(o.shape),c=y.computeStrides(s.shape),p=S.computeConv3DInfo(u,s.shape,a,1,i),m=new pe(p.inShape,"float32"),f=m.values,[d,h,g,x]=m.strides,b=e.data.get(o.dataId).values,[w,C,N,_]=l,A=e.data.get(s.dataId).values,[$,F,P,V]=c,{batchSize:G,filterDepth:W,filterHeight:q,filterWidth:H,inChannels:K,inDepth:X,inHeight:Z,inWidth:et,outChannels:rt,outDepth:ot,outHeight:at,outWidth:nt,strideDepth:st,strideHeight:ft,strideWidth:gt}=p,Ct=W-1-p.padInfo.front,$t=q-1-p.padInfo.top,_t=H-1-p.padInfo.left;for(let Gt=0;Gt<G;++Gt)for(let Wt=0;Wt<K;++Wt)for(let ue=0;ue<X;++ue){let he=ue-Ct,ee=Math.max(0,Math.ceil(he/st)),ge=Math.min(ot,(W+he)/st);for(let fe=0;fe<Z;++fe){let Ae=fe-$t,$e=Math.max(0,Math.ceil(Ae/ft)),$n=Math.min(at,(q+Ae)/ft);for(let ar=0;ar<et;++ar){let qn=ar-_t,zr=Math.max(0,Math.ceil(qn/gt)),je=Math.min(nt,(H+qn)/gt),Br=0;for(let Vr=ee;Vr<ge;++Vr){let Kn=Vr*st-he;for(let jn=$e;jn<$n;++jn){let Zr=jn*ft-Ae;for(let ea=zr;ea<je;++ea){let Mo=ea*gt-qn,si=w*Gt+C*Vr+N*jn+_*ea,Er=$*(W-1-Kn)+F*(q-1-Zr)+P*(H-1-Mo)+V*Wt;for(let ra=0;ra<rt;++ra){let Od=b[si+ra],Pd=A[Er+ra];Br+=Od*Pd}}}}f[d*Gt+h*ue+g*fe+x*ar+Wt]=Br}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}var JF={kernelName:hp,backendName:"cpu",kernelFunc:oQ};var sQ=Et(jo,r=>Math.cos(r)),QF={kernelName:jo,backendName:"cpu",kernelFunc:sQ};var iQ=Et(Xo,r=>Math.cosh(r)),tO={kernelName:Xo,backendName:"cpu",kernelFunc:iQ};function aQ(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:i}=t,{cropSize:a,method:u,extrapolationValue:l}=n,[c,p,m,f]=o.shape,d=s.shape[0],[h,g]=a,x=bt([d,h,g,f],"float32"),b=e.data.get(s.dataId).values,w=e.data.get(i.dataId).values,C=e.data.get(o.dataId).values,N=y.computeStrides(o.shape),_=y.computeStrides(x.shape);for(let A=0;A<d;A++){let $=A*4,F=b[$],P=b[$+1],V=b[$+2],G=b[$+3],W=w[A];if(W>=c)continue;let q=h>1?(V-F)*(p-1)/(h-1):0,H=g>1?(G-P)*(m-1)/(g-1):0;for(let K=0;K<h;K++){let X=h>1?F*(p-1)+K*q:.5*(F+V)*(p-1);if(X<0||X>p-1){for(let Z=0;Z<g;Z++)for(let et=0;et<f;et++){let rt=et+Z*_[2]+K*_[1]+A*_[0];x.values[rt]=l}continue}if(u==="bilinear"){let Z=Math.floor(X),et=Math.ceil(X),rt=X-Z;for(let ot=0;ot<g;ot++){let at=g>1?P*(m-1)+ot*H:.5*(P+G)*(m-1);if(at<0||at>m-1){for(let gt=0;gt<f;gt++){let Ct=gt+ot*_[2]+K*_[1]+A*_[0];x.values[Ct]=l}continue}let nt=Math.floor(at),st=Math.ceil(at),ft=at-nt;for(let gt=0;gt<f;gt++){let Ct=gt+nt*N[2]+Z*N[1]+W*N[0],$t=C[Ct];Ct=gt+st*N[2]+Z*N[1]+W*N[0];let _t=C[Ct];Ct=gt+nt*N[2]+et*N[1]+W*N[0];let Gt=C[Ct];Ct=gt+st*N[2]+et*N[1]+W*N[0];let Wt=C[Ct],ue=$t+(_t-$t)*ft,he=Gt+(Wt-Gt)*ft;Ct=gt+ot*_[2]+K*_[1]+A*_[0],x.values[Ct]=ue+(he-ue)*rt}}}else for(let Z=0;Z<g;++Z){let et=g>1?P*(m-1)+Z*H:.5*(P+G)*(m-1);if(et<0||et>m-1){for(let at=0;at<f;at++){let nt=at+Z*_[2]+K*_[1]+A*_[0];x.values[nt]=l}continue}let rt=Math.round(et),ot=Math.round(X);for(let at=0;at<f;at++){let nt=at+rt*N[2]+ot*N[1]+W*N[0],st=at+Z*_[2]+K*_[1]+A*_[0];x.values[st]=C[nt]}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}var eO={kernelName:ya,backendName:"cpu",kernelFunc:aQ};function lQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:i,reverse:a}=n;tt(o,"cumprod");let u=S.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=Ge({inputs:{x:o},backend:e,attrs:{perm:u}}));let c=S.getInnerMostAxes(1,o.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);let p=lr(l.dtype,"int32"),m=y.makeOnesTypedArray(y.sizeFromShape(l.shape),p),f=e.data.get(l.dataId).values,d=l.shape[l.shape.length-1],h=a?(x,b)=>x+d-b-1:(x,b)=>x+b;for(let x=0;x<f.length;x+=d)for(let b=0;b<d;b++){let w=h(x,b);if(b===0)m[w]=i?1:f[w];else{let C=h(x,b-1);m[w]=i?f[C]*m[C]:f[w]*m[C]}}let g=e.makeTensorInfo(l.shape,p,m);if(u!=null){let x=S.getUndoAxesPermutation(u),b=Ge({inputs:{x:g},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(l),b}return g}var rO={kernelName:xa,backendName:"cpu",kernelFunc:lQ};function uQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:i,reverse:a}=n;tt(o,"cumsum");let u=S.getAxesPermutation([s],o.shape.length),l=o;u!=null&&(l=Ge({inputs:{x:o},backend:e,attrs:{perm:u}}));let c=S.getInnerMostAxes(1,o.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);let p=lr(l.dtype,"int32"),m=y.makeZerosTypedArray(y.sizeFromShape(l.shape),p),f=e.data.get(l.dataId).values,d=l.shape[l.shape.length-1],h=a?(x,b)=>x+d-b-1:(x,b)=>x+b;for(let x=0;x<f.length;x+=d)for(let b=0;b<d;b++){let w=h(x,b);if(b===0)m[w]=i?0:f[w];else{let C=h(x,b-1);m[w]=i?f[C]+m[C]:f[w]+m[C]}}let g=e.makeTensorInfo(l.shape,p,m);if(u!=null){let x=S.getUndoAxesPermutation(u),b=Ge({inputs:{x:g},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(l),b}return g}var nO={kernelName:Yo,backendName:"cpu",kernelFunc:uQ};function cQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:i,binaryOutput:a}=n;if(o.shape.length===1){let u=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,c=ad(u,l,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,c)}else if(o.shape.length===2){let u=e.bufferSync(o),l=e.bufferSync(s),c=Jb(u,l,i,a);return e.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var oO={kernelName:gp,backendName:"cpu",kernelFunc:cQ};function pQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:i}=n;y.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let a=o.shape[0],u=o.shape[1],l=o.shape[2],c=o.shape[3],p=u*s,m=l*s,f=c/(s*s),d=e.data.get(o.dataId).values,h=new Float32Array(a*p*m*f),g=0;for(let x=0;x<a;++x)for(let b=0;b<p;++b){let w=Math.floor(b/s),C=b%s;for(let N=0;N<m;++N){let _=Math.floor(N/s),A=N%s,$=(C*s+A)*f;for(let F=0;F<f;++F){let V=F+$+c*(_+l*(w+u*x));h[g++]=d[V]}}}return e.makeTensorInfo([a,p,m,f],o.dtype,h)}var sO={kernelName:ba,backendName:"cpu",kernelFunc:pQ};function bT(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:i,pad:a,dilations:u,dimRoundingMode:l}=n;tt([o,s],"depthwiseConv2DNative");let c=y.computeStrides(o.shape),p=y.computeStrides(s.shape),m=u;m==null&&(m=[1,1]),y.assert(S.eitherStridesOrDilationsAreOne(i,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${m}'`);let f=S.computeConv2DInfo(o.shape,s.shape,i,m,a,l,!0),{filterHeight:d,filterWidth:h,dilationHeight:g,dilationWidth:x,padInfo:b}=f,w=b.left,C=b.top,N=f.outChannels/f.inChannels,_=new pe(f.outShape,o.dtype),A=e.data.get(o.dataId).values,$=e.data.get(s.dataId).values,F=_.values;for(let P=0;P<f.batchSize;++P){let V=P*c[0],G=P*_.strides[0];for(let W=0;W<f.outHeight;++W){let q=G+W*_.strides[1],H=W*f.strideHeight-C;for(let K=0;K<d;++K){let X=H+K*g;if(X<0||X>=f.inHeight)continue;let Z=K*p[0],et=V+X*c[1];for(let rt=0;rt<f.outWidth;++rt){let ot=q+rt*_.strides[2],at=rt*f.strideWidth-w;for(let nt=0;nt<h;++nt){let st=at+nt*x;if(st<0||st>=f.inWidth)continue;let ft=Z+nt*p[1],gt=et+st*f.inChannels,Ct=ot,$t=ft;for(let _t=0;_t<f.inChannels;++_t){let Gt=A[gt+_t];for(let Wt=0;Wt<N;++Wt)F[Ct+Wt]+=Gt*$[$t+Wt];Ct+=N,$t+=N}}}}}}return e.makeTensorInfo(_.shape,_.dtype,_.values)}var iO={kernelName:Zo,backendName:"cpu",kernelFunc:bT};function mQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:i,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=n;tt([o,s],"depthwiseConv2dNativeBackpropFilter");let p=S.computeConv2DInfo(o.shape,c,i,a,u,l,!0),{strideHeight:m,strideWidth:f,filterHeight:d,filterWidth:h}=p,g=new pe(p.filterShape,"float32"),x=p.padInfo.left,b=p.padInfo.top,w=p.outChannels/p.inChannels,C=e.data.get(o.dataId).values,N=new pe(o.shape,o.dtype,C),_=e.data.get(s.dataId).values,A=new pe(s.shape,s.dtype,_);for(let $=0;$<d;++$){let F=Math.max(0,Math.ceil((b-$)/m)),P=Math.min(p.outHeight,(p.inHeight+b-$)/m);for(let V=0;V<h;++V){let G=Math.max(0,Math.ceil((x-V)/f)),W=Math.min(p.outWidth,(p.inWidth+x-V)/f);for(let q=0;q<p.outChannels;++q){let H=Math.trunc(q/w),K=q%w,X=0;for(let Z=0;Z<p.batchSize;++Z)for(let et=F;et<P;++et){let rt=$+et*m-b;for(let ot=G;ot<W;++ot){let at=V+ot*f-x;X+=N.get(Z,rt,at,H)*A.get(Z,et,ot,q)}}g.set(X,$,V,H,K)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}var aO={kernelName:xp,backendName:"cpu",kernelFunc:mQ};function fQ(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{strides:i,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=n;tt([o,s],"depthwiseConv2DNativeBackpropInput");let p=y.computeStrides(o.shape),m=y.computeStrides(s.shape),f=S.computeConv2DInfo(c,s.shape,i,a,u,l,!0),d=new pe(f.inShape,"float32"),h=d.values,[g,x,b]=d.strides,w=e.data.get(o.dataId).values,[C,N,_]=p,A=e.data.get(s.dataId).values,[$,F,P]=m,{batchSize:V,filterHeight:G,filterWidth:W,inChannels:q,inHeight:H,inWidth:K,outChannels:X,outHeight:Z,outWidth:et,strideHeight:rt,strideWidth:ot}=f,at=G-1-f.padInfo.top,nt=W-1-f.padInfo.left,st=X/q;for(let ft=0;ft<V;++ft)for(let gt=0;gt<q;++gt)for(let Ct=0;Ct<H;++Ct){let $t=Ct-at,_t=Math.max(0,Math.ceil($t/rt)),Gt=Math.min(Z,(G+$t)/rt);for(let Wt=0;Wt<K;++Wt){let ue=Wt-nt,he=Math.max(0,Math.ceil(ue/ot)),ee=Math.min(et,(W+ue)/ot),ge=0;for(let fe=_t;fe<Gt;++fe){let Ae=fe*rt-$t;for(let $e=he;$e<ee;++$e){let $n=$e*ot-ue,ar=C*ft+N*fe+_*$e,qn=$*(G-1-Ae)+F*(W-1-$n)+P*gt;for(let zr=0;zr<st;++zr){let je=gt*st+zr,Br=w[ar+je],Vr=A[qn+zr];ge+=Br*Vr}}}h[g*ft+x*Ct+b*Wt+gt]=ge}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}var lO={kernelName:yp,backendName:"cpu",kernelFunc:fQ};function dQ(r){let{inputs:t,backend:e}=r,{x:n}=t,o=y.sizeFromShape(n.shape),s=e.data.get(n.dataId).values,i=bt([o,o],n.dtype),a=i.values;for(let l=0;l<s.length;l++)a[l*o+l]=s[l];let u=[...n.shape,...n.shape];return e.makeTensorInfo(u,i.dtype,i.values)}var uO={kernelName:bp,backendName:"cpu",kernelFunc:dQ};var cO={kernelName:Rl,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o}=r,{strides:s,pad:i,dilations:a}=e,u=t,l=u.data.get(n.dataId).values,c=n.shape.length,p=u.data.get(o.dataId).values,m=o.shape.length,{batchSize:f,inHeight:d,inWidth:h,inChannels:g,outHeight:x,outWidth:b,padInfo:w,strideHeight:C,strideWidth:N,filterHeight:_,filterWidth:A,dilationHeight:$,dilationWidth:F,outShape:P}=S.computeDilation2DInfo(n.shape,o.shape,s,i,"NHWC",a),V=y.sizeFromShape(P),G=P.length,W=y.getArrayFromDType(n.dtype,V);for(let H=0;H<f;++H)for(let K=0;K<x;++K){let X=K*C-w.top;for(let Z=0;Z<b;++Z){let et=Z*N-w.left;for(let rt=0;rt<g;++rt){let ot=Number.MIN_SAFE_INTEGER;for(let nt=0;nt<_;++nt){let st=X+nt*$;if(st>=0&&st<d)for(let ft=0;ft<A;++ft){let gt=et+ft*F;if(gt>=0&&gt<h){let Ct=y.locToIndex([H,st,gt,rt],c,y.computeStrides(n.shape)),$t=y.locToIndex([nt,ft,rt],m,y.computeStrides(o.shape)),_t=l[Ct]+p[$t];_t>ot&&(ot=_t)}}}let at=y.locToIndex([H,K,Z,rt],G,y.computeStrides(P));W[at]=ot}}}return{dataId:u.write(y.toTypedArray(W,n.dtype),P,n.dtype),shape:P,dtype:n.dtype}}};var pO={kernelName:jd,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o,dy:s}=r,{strides:i,pad:a,dilations:u}=e,l=t,c=y.toNestedArray(n.shape,l.data.get(n.dataId).values),p=y.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:C,filterHeight:N,filterWidth:_,dilationHeight:A,dilationWidth:$,outShape:F}=S.computeDilation2DInfo(n.shape,o.shape,i,a,"NHWC",u);y.assert(s.rank===F.length,()=>`Error in ${jd}, dy must have the same rank as output ${F.length}, but got ${s.rank}`);let P=y.toNestedArray(F,l.data.get(s.dataId).values),V=y.makeZerosNestedTypedArray(o.shape,o.dtype);for(let W=0;W<m;++W)for(let q=0;q<g;++q){let H=q*w-b.top;for(let K=0;K<x;++K){let X=K*C-b.left;for(let Z=0;Z<h;++Z){let et=Number.MIN_SAFE_INTEGER,rt=0,ot=0;for(let at=0;at<N;++at){let nt=H+at*A;if(nt>=0&&nt<f)for(let st=0;st<_;++st){let ft=X+st*$;if(ft>=0&&ft<d){let gt=c[W][nt][ft][Z]+p[at][st][Z];gt>et&&(et=gt,rt=at,ot=st)}}}V[rt][ot][Z]+=P[W][q][K][Z]}}}return{dataId:l.write(y.toTypedArray(V,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var mO={kernelName:Kd,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o,dy:s}=r,{strides:i,pad:a,dilations:u}=e,l=t,c=y.toNestedArray(n.shape,l.data.get(n.dataId).values),p=y.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:h,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:C,filterHeight:N,filterWidth:_,dilationHeight:A,dilationWidth:$,outShape:F}=S.computeDilation2DInfo(n.shape,o.shape,i,a,"NHWC",u);y.assert(s.rank===F.length,()=>`Error in ${Kd}, dy must have the same rank as output ${F.length}, but got ${s.rank}`);let P=y.toNestedArray(F,l.data.get(s.dataId).values),V=y.makeZerosNestedTypedArray(n.shape,n.dtype);for(let W=0;W<m;++W)for(let q=0;q<g;++q){let H=q*w-b.top;for(let K=0;K<x;++K){let X=K*C-b.left;for(let Z=0;Z<h;++Z){let et=Number.MIN_SAFE_INTEGER,rt=H<0?0:H,ot=X<0?0:X;for(let at=0;at<N;++at){let nt=H+at*A;if(nt>=0&&nt<f)for(let st=0;st<_;++st){let ft=X+st*$;if(ft>=0&&ft<d){let gt=c[W][nt][ft][Z]+p[at][st][Z];gt>et&&(et=gt,rt=nt,ot=ft)}}}V[W][rt][ot][Z]+=P[W][q][K][Z]}}}return{dataId:l.write(y.toTypedArray(V,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function yl(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n;tt(o,"sum");let a;o.dtype==="bool"?a=$o({inputs:{x:o},backend:e,attrs:{dtype:"int32"}}):a=Xr({inputs:{x:o},backend:e});let u=a.shape.length,l=y.parseAxisParam(s,a.shape),c=S.getAxesPermutation(l,u),p=l,m=a;c!=null&&(m=Ge({inputs:{x:a},backend:e,attrs:{perm:c}}),p=S.getInnerMostAxes(p.length,u)),S.assertAxesAreInnerMostDims("sum",p,m.shape.length);let[f,d]=S.computeOutAndReduceShapes(m.shape,p),h=S.upcastType(m.dtype,"int32"),g=sd(e,f,h),x=y.sizeFromShape(d),b=e.data.get(g.dataId).values,w=e.data.get(m.dataId).values;for(let C=0;C<b.length;++C){let N=C*x,_=0;for(let A=0;A<x;++A)_+=w[N+A];b[C]=_}if(i){let C=S.expandShapeToKeepDim(g.shape,l),N=g;g=Zt({inputs:{x:g},backend:e,attrs:{shape:C}}),e.disposeIntermediateTensorInfo(N)}return e.disposeIntermediateTensorInfo(a),c!=null&&e.disposeIntermediateTensorInfo(m),g}var fO={kernelName:Ds,backendName:"cpu",kernelFunc:yl};function hQ(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:i,summedDims:a,idDims:u}=S.decodeEinsumEquation(o,s.length);S.checkEinsumDimSizes(i.length,u,s);let{path:l,steps:c}=S.getEinsumComputePath(a,u),p=c.length,m=null,f=i.length,d=[];for(let h=0;h<p;++h){for(let g of c[h]){let{permutationIndices:x,expandDims:b}=S.getEinsumPermutation(f,u[g]),w;S.isIdentityPermutation(x)?w=s[g]:(w=Ge({inputs:{x:s[g]},backend:e,attrs:{perm:x}}),d.push(w));let C=w.shape.slice();for(let N=0;N<b.length;++N)C.splice(b[N],0,1);y.arraysEqual(w.shape,C)||(w=Zt({inputs:{x:w},backend:e,attrs:{shape:C}}),d.push(w)),m===null?m=w:(m=$c({inputs:{a:w,b:m},backend:e}),d.push(m))}h<p-1&&(l[h]>=0&&(m=yl({inputs:{x:m},backend:e,attrs:{axis:l[h]-(i.length-f),keepDims:!1}}),d.push(m)),f--)}for(let h of d)h!==m&&e.disposeIntermediateTensorInfo(h);return m}var dO={kernelName:wp,backendName:"cpu",kernelFunc:hQ};function gQ(r){let{inputs:t,backend:e}=r,{dy:n,y:o}=t;tt([n,o],"eluGrad");let s=new Float32Array(y.sizeFromShape(o.shape)),i=e.data.get(o.dataId).values,a=e.data.get(n.dataId).values;for(let u=0;u<i.length;++u){let l=i[u];l>=1?s[u]=a[u]:s[u]=a[u]*(l+1)}return e.makeTensorInfo(o.shape,"float32",s)}var hO={kernelName:Cp,backendName:"cpu",kernelFunc:gQ};var xQ=S.ERF_P,yQ=S.ERF_A1,bQ=S.ERF_A2,wQ=S.ERF_A3,CQ=S.ERF_A4,IQ=S.ERF_A5,vQ=Et(wa,r=>{let t=Math.sign(r),e=Math.abs(r),n=1/(1+xQ*e);return t*(1-((((IQ*n+CQ)*n+wQ)*n+bQ)*n+yQ)*n*Math.exp(-e*e))}),gO={kernelName:wa,backendName:"cpu",kernelFunc:vQ};function md(r){let{inputs:t,backend:e,attrs:n}=r,{input:o}=t,{dim:s}=n,i=o.shape.length,a=o.shape.slice(),u=s;return s<0&&(y.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),a.splice(u,0,1),Zt({inputs:{x:o},backend:e,attrs:{shape:a}})}var xO={kernelName:pi,backendName:"cpu",kernelFunc:md};var SQ=Qt((r,t)=>r/t),Hh=ie(Jo,SQ),qh={kernelName:Jo,backendName:"cpu",kernelFunc:Hh};function hw(r,t,e){let n=r.shape,o=n[0],s=n[1],i=e.data.get(r.dataId),a=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[o,s],c=y.sizeFromShape(l),p=y.getTypedArrayFromDType("float32",c),m=y.getTypedArrayFromDType("float32",c);for(let g=0;g<o;g++){let x=Fo({inputs:{x:a},backend:e,attrs:{begin:[g,0],size:[1,s]}}),b=Fo({inputs:{x:u},backend:e,attrs:{begin:[g,0],size:[1,s]}}),w=Ir({inputs:{real:x,imag:b},backend:e}),{real:C,imag:N}=NQ(w,t,e),_=S.mergeRealAndImagArrays(C,N);for(let A=0;A<s;A++){let $=S.getComplexWithIndex(_,A);p[g*s+A]=$.real,m[g*s+A]=$.imag}e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(w)}let f=e.makeTensorInfo(l,"float32",p),d=e.makeTensorInfo(l,"float32",m),h=Ir({inputs:{real:f,imag:d},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(d),h}function NQ(r,t,e){let n=y.sizeFromShape(r.shape),o=e.data.get(r.dataId),s=e.data.get(o.complexTensorInfos.real.dataId).values,i=e.data.get(o.complexTensorInfos.imag.dataId).values;if(TQ(n)){let a=wT(s,i,n,t,e),u=[r.shape[0],r.shape[1]];if(t){let l=e.makeTensorInfo(u,"float32",a.real),c=e.makeTensorInfo(u,"float32",a.imag),p=e.makeTensorInfo([],"float32",y.createScalarValue(n,"float32")),m=Xr({inputs:{x:p},backend:e}),f=qh.kernelFunc({inputs:{a:l,b:p},backend:e}),d=qh.kernelFunc({inputs:{a:c,b:m},backend:e}),h=e.data.get(f.dataId).values,g=e.data.get(d.dataId).values;return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(d),{real:h,imag:g}}return a}else{let a=S.mergeRealAndImagArrays(s,i),u=kQ(a,n,t);return S.splitRealAndImagArrays(u)}}function TQ(r){return(r&r-1)===0}function wT(r,t,e,n,o){if(e===1)return{real:r,imag:t};let s=S.mergeRealAndImagArrays(r,t),i=e/2,a=S.complexWithEvenIndex(s),u=a.real,l=a.imag,c=[u.length],p=o.makeTensorInfo(c,"float32",u),m=o.makeTensorInfo(c,"float32",l),f=Ir({inputs:{real:p,imag:m},backend:o}),d=S.complexWithOddIndex(s),h=d.real,g=d.imag,x=[h.length],b=o.makeTensorInfo(x,"float32",h),w=o.makeTensorInfo(x,"float32",g),C=Ir({inputs:{real:b,imag:w},backend:o}),N=wT(u,l,i,n,o),_=N.real,A=N.imag,$=[_.length],F=o.makeTensorInfo($,"float32",_),P=o.makeTensorInfo($,"float32",A),V=Ir({inputs:{real:F,imag:P},backend:o}),G=wT(h,g,i,n,o),W=G.real,q=G.imag,H=[W.length],K=o.makeTensorInfo(H,"float32",W),X=o.makeTensorInfo(H,"float32",q),Z=Ir({inputs:{real:K,imag:X},backend:o}),et=S.exponents(e,n),rt=[et.real.length],ot=o.makeTensorInfo(rt,"float32",et.real),at=o.makeTensorInfo(rt,"float32",et.imag),nt=Ir({inputs:{real:ot,imag:at},backend:o}),st=$c({inputs:{a:nt,b:Z},backend:o}),ft=Yi({inputs:{a:V,b:st},backend:o}),gt=Wh({inputs:{a:V,b:st},backend:o}),Ct=Ao({inputs:{input:ft},backend:o}),$t=Ao({inputs:{input:gt},backend:o}),_t=Zi({inputs:{input:ft},backend:o}),Gt=Zi({inputs:{input:gt},backend:o}),Wt=Cu({inputs:[Ct,$t],backend:o,attrs:{axis:0}}),ue=Cu({inputs:[_t,Gt],backend:o,attrs:{axis:0}}),he=o.data.get(Wt.dataId).values,ee=o.data.get(ue.dataId).values;return o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(C),o.disposeIntermediateTensorInfo(F),o.disposeIntermediateTensorInfo(P),o.disposeIntermediateTensorInfo(V),o.disposeIntermediateTensorInfo(K),o.disposeIntermediateTensorInfo(X),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(ot),o.disposeIntermediateTensorInfo(at),o.disposeIntermediateTensorInfo(nt),o.disposeIntermediateTensorInfo(st),o.disposeIntermediateTensorInfo(ft),o.disposeIntermediateTensorInfo(gt),o.disposeIntermediateTensorInfo(Ct),o.disposeIntermediateTensorInfo(_t),o.disposeIntermediateTensorInfo($t),o.disposeIntermediateTensorInfo(Gt),o.disposeIntermediateTensorInfo(Wt),o.disposeIntermediateTensorInfo(ue),{real:he,imag:ee}}function kQ(r,t,e){let n=new Float32Array(t*2);for(let o=0;o<t;o++){let s=0,i=0;for(let a=0;a<t;a++){let u=S.exponent(o*a,t,e),l=S.getComplexWithIndex(r,a);s+=l.real*u.real-l.imag*u.imag,i+=l.real*u.imag+l.imag*u.real}e&&(s/=t,i/=t),S.assignToTypedArray(n,s,i,o)}return n}function EQ(r){let{inputs:t,backend:e}=r,{input:n}=t,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=o/s,a=Zt({inputs:{x:n},backend:e,attrs:{shape:[i,s]}}),u=hw(a,!1,e),l=Zt({inputs:{x:u},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),l}var yO={kernelName:Ip,backendName:"cpu",kernelFunc:EQ};function Kh(r){let{backend:t,attrs:e}=r,{shape:n,value:o,dtype:s}=e,i=s||y.inferDtype(o),a=y.getArrayFromDType(i,y.sizeFromShape(n));return _Q(a,o,i),t.makeTensorInfo(n,i,a)}var bO={kernelName:Fl,backendName:"cpu",kernelFunc:Kh};function _Q(r,t,e){r.fill(t)}var wO={kernelName:va,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,o=e,s=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[i,a,u,l]=n.shape,c=o.data.get(n.dataId).values;for(let m=0;m<i;m++){let f=m*u*a*l;for(let d=0;d<a;d++){let h=d*(u*l);for(let g=0;g<u;g++){let x=g*l;for(let b=0;b<l;b++){let w=Math.round(u-g-1),C=f+h+x+b,N=c[C];if(w>=0&&w<u){let _=w*l,A=f+h+_+b;N=c[A]}s[C]=N}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var AQ=Qt((r,t)=>Math.floor(r/t)),$Q=ie(rs,AQ,null,"int32"),CO={kernelName:rs,backendName:"cpu",kernelFunc:$Q};function DQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=yT({inputs:{x:o,filter:s},backend:e,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:m}});if(i){let g=h;if(c==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let x=Zt({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});h=Yi({inputs:{a:h,b:x},backend:e}),e.disposeIntermediateTensorInfo(x)}else h=Yi({inputs:{a:h,b:i},backend:e});e.disposeIntermediateTensorInfo(g)}if(f){let g=h;if(c==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){let x=Zt({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});h=Lc(e,h,f,x,d),e.disposeIntermediateTensorInfo(x)}else h=Lc(e,h,f,a,d);e.disposeIntermediateTensorInfo(g)}return h}var IO={kernelName:Si,backendName:"cpu",kernelFunc:DQ};function RQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=bT({inputs:{x:o,filter:s},backend:e,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:m}});if(i){let g=h;h=Yi({inputs:{a:h,b:i},backend:e}),e.disposeIntermediateTensorInfo(g)}if(f){let g=h;h=Lc(e,h,f,a,d),e.disposeIntermediateTensorInfo(g)}return h}var vO={kernelName:Ni,backendName:"cpu",kernelFunc:RQ};function FQ(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=y.sizeFromShape(n.shape),i=o.shape,a=i[i.length-1],[u,l,c,p]=S.prepareAndValidate(n,o);if(l===0)return e.makeTensorInfo(u,n.dtype,[]);let m=e.data.get(o.dataId).values,f=e.bufferSync(n),d=Qb(m,f,n.dtype,l,a,c,p,n.shape,s);return e.makeTensorInfo(u,n.dtype,d.values)}var SO={kernelName:Sa,backendName:"cpu",kernelFunc:FQ};function OQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:i,batchDims:a}=n;tt([o,s],"gatherV2");let u=y.parseAxisParam(i,o.shape)[0],l=e.data.get(s.dataId).values,c=o.shape[u];for(let C=0;C<l.length;++C){let N=l[C];y.assert(N<=c-1&&N>=0,()=>`GatherV2: the index value ${N} is not in [0, ${c-1}]`)}let p=a;a==null&&(p=0);let m=y.sizeFromShape(s.shape),f=S.segment_util.collectGatherOpShapeInfo(o,s,u,p),d=Zt({inputs:{x:o},backend:e,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),h=Zt({inputs:{x:s},backend:e,attrs:{shape:[f.batchSize,m/f.batchSize]}}),g=[f.batchSize,f.outerSize,m/f.batchSize,f.sliceSize],x=e.bufferSync(h),b=e.bufferSync(d),w=tw(b,x,g);return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),e.makeTensorInfo(f.outputShape,w.dtype,w.values)}var NO={kernelName:mi,backendName:"cpu",kernelFunc:OQ};function PQ(r){let{inputs:t,backend:e}=r,{input:n}=t,o=y.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=o/s,a=Zt({inputs:{x:n},backend:e,attrs:{shape:[i,s]}}),u=hw(a,!0,e),l=Zt({inputs:{x:u},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),l}var TO={kernelName:vp,backendName:"cpu",kernelFunc:PQ};var LQ=Et(Ta,r=>Number.isFinite(r)?1:0,"bool"),kO={kernelName:Ta,backendName:"cpu",kernelFunc:LQ};var MQ=Et(ka,r=>Math.abs(r)===1/0?1:0,"bool"),EO={kernelName:ka,backendName:"cpu",kernelFunc:MQ};var zQ=Et(ss,r=>Number.isNaN(r)?1:0,"bool"),_O={kernelName:ss,backendName:"cpu",kernelFunc:zQ};function BQ(r){let{backend:t,attrs:e}=r,{start:n,stop:o,num:s}=e,i=ew(n,o,s);return t.makeTensorInfo([i.length],"float32",i)}var AO={kernelName:Np,backendName:"cpu",kernelFunc:BQ};var VQ=Et(Aa,r=>Math.log1p(r)),$O={kernelName:Aa,backendName:"cpu",kernelFunc:VQ};var GQ=Qt((r,t)=>r&&t),WQ=ie($a,GQ,null,"bool"),DO={kernelName:$a,backendName:"cpu",kernelFunc:WQ};var UQ=Et(Da,r=>r?0:1,"bool"),RO={kernelName:Da,backendName:"cpu",kernelFunc:UQ};var HQ=Qt((r,t)=>r||t),qQ=ie(Ra,HQ,null,"bool"),FO={kernelName:Ra,backendName:"cpu",kernelFunc:qQ};function KQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{depthRadius:s,bias:i,alpha:a,beta:u}=n;tt(o,"LRN");let l=o.shape[3],c=l-1,p=e.data.get(o.dataId).values,m=y.sizeFromShape(o.shape),f=new Float32Array(m);function d(h){let g=h%l,x=h-g+Math.max(0,g-s),b=h-g+Math.min(g+s,c),w=0;for(;x<=b;x++){let C=p[x];w+=C*C}return w}for(let h=0;h<m;h++){let g=d(h),x=p[h]*Math.pow(i+a*g,-u);f[h]=x}return e.makeTensorInfo(o.shape,o.dtype,f)}var OO={kernelName:Ol,backendName:"cpu",kernelFunc:KQ};function jQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,y:s,dy:i}=t,{depthRadius:a,bias:u,alpha:l,beta:c}=n;tt(i,"LRNGrad");let p=y.sizeFromShape(i.shape),m=i.shape[3],f=e.data.get(i.dataId).values,d=e.data.get(o.dataId).values,h=e.data.get(s.dataId).values,g=new Float32Array(p),x=p;for(let b=0;b<x;b++){let w=b%m,C=b-w+Math.max(0,w-a),N=b-w+Math.min(m,w+a+1),_=0;for(let A=C;A<N;A++)_+=Math.pow(d[A],2);_=l*_+u;for(let A=C;A<N;A++){let $=-2*l*c*d[A]*h[b]/_;b===A&&($+=Math.pow(_,-c)),$*=f[b],g[A]+=$}}return e.makeTensorInfo(i.shape,o.dtype,g)}var PO={kernelName:Tp,backendName:"cpu",kernelFunc:jQ};function CT(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:i}=n,a=e,u=o.shape,l=u.length,c=y.parseAxisParam(s,u),p=c,m=S.getAxesPermutation(p,l),f=a.data.get(o.dataId).values;if(m!=null){let C=new Array(l);for(let N=0;N<C.length;N++)C[N]=u[m[N]];f=ld(f,u,o.dtype,m,C),p=S.getInnerMostAxes(p.length,l),u=C}tt(o,"max"),S.assertAxesAreInnerMostDims("max",p,l);let[d,h]=S.computeOutAndReduceShapes(u,p),g=y.sizeFromShape(h),x=rw(f,g,d,o.dtype),b=a.write(x,d,o.dtype),w=d;return i&&(w=S.expandShapeToKeepDim(d,c)),{dataId:b,shape:w,dtype:o.dtype}}var LO={kernelName:ls,backendName:"cpu",kernelFunc:CT};function XQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;tt(o,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;y.assert(S.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=S.computePool2DInfo(o.shape,s,i,l,a,u),p;if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))p=Xr({inputs:{x:o},backend:e});else{let m=e.data.get(o.dataId).values,f=y.computeStrides(o.shape),d=pd(m,o.shape,o.dtype,f,c,"max");p=e.makeTensorInfo(c.outShape,o.dtype,d.values)}return p}var MO={kernelName:cs,backendName:"cpu",kernelFunc:XQ};function YQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=n;tt(o,"maxPool3d");let c=S.computePool3DInfo(o.shape,s,i,1,a,u,l),p=e.data.get(o.dataId).values,m=dw(p,o.shape,o.dtype,y.computeStrides(o.shape),c,"max");return e.makeTensorInfo(m.shape,"float32",m.values)}var zO={kernelName:Pl,backendName:"cpu",kernelFunc:YQ};function ZQ(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=n;tt([o,s],"maxPool3DGrad");let c=S.computePool3DInfo(s.shape,i,a,1,u,l),p=e.bufferSync(s),m=FF(p,c),f=c.strideDepth,d=c.strideHeight,h=c.strideWidth,g=c.dilationDepth,x=c.dilationHeight,b=c.dilationWidth,w=c.effectiveFilterDepth,C=c.effectiveFilterHeight,N=c.effectiveFilterWidth,_=w-1-c.padInfo.front,A=N-1-c.padInfo.left,$=C-1-c.padInfo.top,F=bt(s.shape,"float32"),P=e.bufferSync(o);for(let V=0;V<c.batchSize;++V)for(let G=0;G<c.inChannels;++G)for(let W=0;W<c.inDepth;++W)for(let q=0;q<c.inHeight;++q)for(let H=0;H<c.inWidth;++H){let K=W-_,X=q-$,Z=H-A,et=0;for(let rt=0;rt<w;rt+=g){let ot=(K+rt)/f;if(!(ot<0||ot>=c.outDepth||Math.floor(ot)!==ot))for(let at=0;at<C;at+=x){let nt=(X+at)/d;if(!(nt<0||nt>=c.outHeight||Math.floor(nt)!==nt))for(let st=0;st<N;st+=b){let ft=(Z+st)/h;if(ft<0||ft>=c.outWidth||Math.floor(ft)!==ft)continue;let gt=w*C*N-1-m.get(V,ot,nt,ft,G),Ct=rt*C*N+at*N+st,$t=gt===Ct?1:0;if($t===0)continue;let _t=P.get(V,ot,nt,ft,G);et+=_t*$t}}}F.set(et,V,W,q,H,G)}return e.makeTensorInfo(F.shape,F.dtype,F.values)}var BO={kernelName:Ep,backendName:"cpu",kernelFunc:ZQ};function JQ(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s,output:i}=t,a=s;tt([s,i],"maxPoolGrad");let{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=n,m=S.computePool2DInfo(a.shape,u,l,1,c,p),f=e.data.get(a.dataId).values,d=bt(m.outShape,a.dtype,fw(f,a.shape,a.dtype,m).values),h=m.strideHeight,g=m.strideWidth,x=m.dilationHeight,b=m.dilationWidth,w=m.effectiveFilterHeight,C=m.effectiveFilterWidth,N=C-1-m.padInfo.left,_=w-1-m.padInfo.top,A=bt(a.shape,"float32"),$=e.data.get(o.dataId).values,F=bt(o.shape,"float32",$);for(let P=0;P<m.batchSize;++P)for(let V=0;V<m.inChannels;++V)for(let G=0;G<m.inHeight;++G)for(let W=0;W<m.inWidth;++W){let q=G-_,H=W-N,K=0;for(let X=0;X<w;X+=x){let Z=(q+X)/h;if(!(Z<0||Z>=m.outHeight||Math.floor(Z)!==Z))for(let et=0;et<C;et+=b){let rt=(H+et)/g;if(rt<0||rt>=m.outWidth||Math.floor(rt)!==rt)continue;let ot=w*C-1-d.get(P,Z,rt,V),at=X*C+et,nt=ot===at?1:0;if(nt===0)continue;let st=F.get(P,Z,rt,V);K+=st*nt}}A.set(K,P,G,W,V)}return e.makeTensorInfo(A.shape,A.dtype,A.values)}var VO={kernelName:kp,backendName:"cpu",kernelFunc:JQ};function GO(r,t,e,n,o){let s=y.computeStrides(t),i=pd(r,t,e,s,o,"max"),a=fw(r,t,e,o,!0,n);return[i.values,a.values]}var WO={kernelName:_p,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{filterSize:o,strides:s,pad:i,includeBatchInIndex:a}=t,u=e;tt(n,"MaxPoolWithArgmax");let l=u.data.get(n.dataId).values,c=S.computePool2DInfo(n.shape,o,s,[1,1],i),[p,m]=GO(l,n.shape,n.dtype,a,c),f=u.write(p,c.outShape,n.dtype),d=u.write(m,c.outShape,n.dtype);return[{dataId:f,shape:c.outShape,dtype:n.dtype},{dataId:d,shape:c.outShape,dtype:"int32"}]}};function QQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n,a=y.parseAxisParam(s,o.shape),l=S.computeOutAndReduceShapes(o.shape,a)[1],c=y.sizeFromShape(l),p=[],m=e.makeTensorInfo([],"float32",new Float32Array([c]));p.push(m);let f=$o({inputs:{x:o},backend:e,attrs:{dtype:"float32"}});p.push(f);let d=Hh({inputs:{a:f,b:m},backend:e});p.push(d);let h=yl({inputs:{x:d},backend:e,attrs:{axis:s,keepDims:i}});return p.forEach(g=>e.disposeIntermediateTensorInfo(g)),h}var UO={kernelName:ps,backendName:"cpu",kernelFunc:QQ};function t9(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n;tt(o,"min");let a=y.parseAxisParam(s,o.shape),u=a,l=S.getAxesPermutation(u,o.shape.length),c=o;l!=null&&(c=Ge({inputs:{x:o},backend:e,attrs:{perm:l}}),u=S.getInnerMostAxes(u.length,o.shape.length)),S.assertAxesAreInnerMostDims("min",u,c.shape.length);let[p,m]=S.computeOutAndReduceShapes(c.shape,u),f=y.sizeFromShape(m),d=y.makeZerosTypedArray(y.sizeFromShape(p),c.dtype),h=e.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let b=x*f,w=h[b];for(let C=0;C<f;++C){let N=h[b+C];(Number.isNaN(N)||N<w)&&(w=N)}d[x]=w}l!=null&&e.disposeIntermediateTensorInfo(c);let g=e.makeTensorInfo(p,c.dtype,d);if(i){let x=S.expandShapeToKeepDim(p,a),b=Zt({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),b}return g}var HO={kernelName:ms,backendName:"cpu",kernelFunc:t9};function e9(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,mode:i}=n;tt(o,"mirrorPad");let a=s.map((w,C)=>w[0]+o.shape[C]+w[1]),u=s.map(w=>w[0]),l=s.map((w,C)=>w[0]+o.shape[C]),c=i==="reflect"?0:1,p=e.data.get(o.dataId).values,m=o.shape.length,f=y.computeStrides(o.shape),d=y.sizeFromShape(a),h=a.length,g=y.computeStrides(a),x=y.getTypedArrayFromDType(o.dtype,d);for(let w=0;w<d;w++){let C=y.indexToLoc(w,h,g);for(let _=0;_<h;_++)C[_]<u[_]?C[_]=u[_]*2-C[_]-c:C[_]>=l[_]&&(C[_]=(l[_]-1)*2-C[_]+c);C=C.map((_,A)=>_-u[A]);let N=y.locToIndex(C,m,f);x[w]=p[N]}return{dataId:e.write(x,a,o.dtype),shape:a,dtype:o.dtype}}var qO={kernelName:ds,backendName:"cpu",kernelFunc:e9};var r9=Qt((r,t)=>{let e=r%t;return r<0&&t<0||r>=0&&t>=0?e:(e+t)%t}),n9=ie(Fa,r9),KO={kernelName:Fa,backendName:"cpu",kernelFunc:n9};var XO=El(ch());function IT(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,i=o.shape.length,a=s;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);let u=y.parseAxisParam([a],o.shape),l=CT({inputs:{x:o},backend:e,attrs:{reductionIndices:u,keepDims:!1}}),c=S.expandShapeToKeepDim(l.shape,u),p=Zt({inputs:{x:l},backend:e,attrs:{shape:c}}),m=Wh({inputs:{a:o,b:p},backend:e}),f=jN({inputs:{x:m},backend:e}),d=yl({inputs:{x:f},backend:e,attrs:{axis:u,keepDims:!1}}),h=Zt({inputs:{x:d},backend:e,attrs:{shape:c}}),g=Hh({inputs:{a:f,b:h},backend:e});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),g}var jO={kernelName:Rs,backendName:"cpu",kernelFunc:IT};function o9(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{numSamples:s,seed:i,normalized:a}=n;tt(o,"multinomial");let u=a?o:IT({inputs:{logits:o},backend:e,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],p=e.data.get(u.dataId).values,m=[l,s],f=y.makeZerosTypedArray(y.sizeFromShape(m),"int32");for(let d=0;d<l;++d){let h=d*c,g=new Float32Array(c-1);g[0]=p[h];for(let w=1;w<g.length;++w)g[w]=g[w-1]+p[h+w];let x=XO.alea(i.toString()),b=d*s;for(let w=0;w<s;++w){let C=x();f[b+w]=g.length;for(let N=0;N<g.length;N++)if(C<g[N]){f[b+w]=N;break}}}return a||e.disposeIntermediateTensorInfo(u),e.makeTensorInfo(m,"int32",f)}var YO={kernelName:Ap,backendName:"cpu",kernelFunc:o9};var s9=qr.nonMaxSuppressionV3Impl;function i9(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=n;tt(o,"NonMaxSuppression");let l=e.data.get(o.dataId).values,c=e.data.get(s.dataId).values,{selectedIndices:p}=s9(l,c,i,a,u);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var ZO={kernelName:Pa,backendName:"cpu",kernelFunc:i9};var a9=qr.nonMaxSuppressionV4Impl;function l9(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=n;tt(o,"NonMaxSuppressionPadded");let c=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,{selectedIndices:m,validOutputs:f}=a9(c,p,i,a,u,l);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}var JO={kernelName:La,backendName:"cpu",kernelFunc:l9};var u9=qr.nonMaxSuppressionV5Impl;function c9(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=n;tt(o,"NonMaxSuppressionWithScore");let c=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,m=i,f=a,d=u,h=l,{selectedIndices:g,selectedScores:x}=u9(c,p,m,f,d,h);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var QO={kernelName:Ma,backendName:"cpu",kernelFunc:c9};function p9(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:i,onValue:a,offValue:u}=n;tt(o,"oneHot");let l=y.sizeFromShape(o.shape),c=new Float32Array(l*i);c.fill(u);let p=e.data.get(o.dataId).values;for(let m=0;m<l;++m)p[m]>=0&&p[m]<i&&(c[m*i+p[m]]=a);return e.makeTensorInfo([...o.shape,i],s,c)}var tP={kernelName:gs,backendName:"cpu",kernelFunc:p9};function jh(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Ao({inputs:{input:n},backend:e}),s=jh({inputs:{x:o},backend:e}),i=Zi({inputs:{input:n},backend:e}),a=jh({inputs:{x:i},backend:e}),u=Ir({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),u}else return Kh({backend:e,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var eP={kernelName:Ii,backendName:"cpu",kernelFunc:jh};function rP(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=Ao({inputs:{input:n},backend:e}),s=rP({inputs:{x:o},backend:e}),i=Zi({inputs:{input:n},backend:e}),a=jh({inputs:{x:i},backend:e}),u=Ir({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),u}else return Kh({backend:e,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var nP={kernelName:di,backendName:"cpu",kernelFunc:rP};function vT(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return md({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,i=t[0].dtype;t.forEach(c=>{y.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),y.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=t.map(c=>{let p=md({inputs:{input:c},backend:e,attrs:{dim:o}});return a.push(p),p}),l=Cu({inputs:u,backend:e,attrs:{axis:o}});return a.forEach(c=>e.disposeIntermediateTensorInfo(c)),l}var oP={kernelName:hi,backendName:"cpu",kernelFunc:vT};function m9(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:i}=n;tt(o,"pad");let a=s.map((b,w)=>b[0]+o.shape[w]+b[1]),u=s.map(b=>b[0]),l=e.data.get(o.dataId).values,c=y.sizeFromShape(o.shape),p=o.shape.length,m=y.computeStrides(o.shape),f=y.sizeFromShape(a),d=a.length,h=y.computeStrides(a),g=y.getTypedArrayFromDType(o.dtype,f);i!==0&&g.fill(i);for(let b=0;b<c;b++){let C=y.indexToLoc(b,p,m).map((_,A)=>_+u[A]),N=y.locToIndex(C,d,h);g[N]=l[b]}return{dataId:e.write(g,a,o.dtype),shape:a,dtype:o.dtype}}var gw={kernelName:xs,backendName:"cpu",kernelFunc:m9};var f9=Qt((r,t)=>Math.pow(r,t)),d9=ie(ys,f9),sP={kernelName:ys,backendName:"cpu",kernelFunc:d9};function h9(r){let{inputs:t,backend:e,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:a}=n,u=o.map(x=>e.data.get(x.dataId).values),l=o.map(x=>x.shape),c=e.data.get(s.dataId).values,p=e.data.get(i.dataId).values,[m,f,d]=nw(u,l,c,s.shape,s.dtype,p,i.shape,a),h=m.map(x=>e.makeTensorInfo([x.length],"int32",x)),g=e.makeTensorInfo(d,s.dtype,f);return h.concat([g])}var iP={kernelName:$p,backendName:"cpu",kernelFunc:h9};function g9(r){let{inputs:t,backend:e}=r,{starts:n,limits:o,deltas:s}=t,i=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,[l,c]=ow(i,n.shape,n.dtype,a,o.shape,u,s.shape),p=e.makeTensorInfo([l.length],"int32",l),m=e.makeTensorInfo([c.length],n.dtype,c);return[p,m]}var aP={kernelName:Dp,backendName:"cpu",kernelFunc:g9};function x9(r){let{inputs:t,backend:e,attrs:n}=r,{shape:o,values:s,defaultValue:i,rowPartitionTensors:a}=t,{rowPartitionTypes:u}=n,l=e.data.get(o.dataId).values,c=e.data.get(s.dataId).values,p=e.data.get(i.dataId).values,m=a.map(g=>e.data.get(g.dataId).values),f=a.map(g=>g.shape),[d,h]=sw(l,o.shape,c,s.shape,s.dtype,p,i.shape,m,f,u);return e.makeTensorInfo(d,s.dtype,h)}var lP={kernelName:Rp,backendName:"cpu",kernelFunc:x9};function y9(r){let{backend:t,attrs:e}=r,{start:n,stop:o,dtype:s,step:i}=e,a=Dc(n,o,i,s);return t.makeTensorInfo([a.length],s,a)}var uP={kernelName:Ll,backendName:"cpu",kernelFunc:y9};var b9=Et(Cs,r=>1/r),cP={kernelName:Cs,backendName:"cpu",kernelFunc:b9};function w9(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:i,size:a}=n;tt(o,"resizeBilinear");let u=y.computeStrides(o.shape),[l,c]=a,[p,m,f,d]=o.shape,h=e.data.get(o.dataId).values,g=new Float32Array(y.sizeFromShape([p,l,c,d])),x=[s&&l>1?m-1:m,s&&c>1?f-1:f],b=[s&&l>1?l-1:l,s&&c>1?c-1:c],w=0,C=x[0]/b[0],N=x[1]/b[1];for(let _=0;_<p;_++)for(let A=0;A<l;A++){let $;i?$=C*(A+.5)-.5:$=C*A;let F=Math.max(0,Math.floor($)),P=$-F,V=Math.min(m-1,Math.ceil($)),G=_*u[0]+F*u[1],W=_*u[0]+V*u[1];for(let q=0;q<c;q++){let H;i?H=N*(q+.5)-.5:H=N*q;let K=Math.max(0,Math.floor(H)),X=H-K,Z=Math.min(f-1,Math.ceil(H)),et=G+K*u[2],rt=W+K*u[2],ot=G+Z*u[2],at=W+Z*u[2];for(let nt=0;nt<d;nt++){let st=h[et+nt],ft=h[rt+nt],gt=h[ot+nt],Ct=h[at+nt],$t=st+(gt-st)*X,_t=ft+(Ct-ft)*X,Gt=$t+(_t-$t)*P;g[w++]=Gt}}}return e.makeTensorInfo([p,l,c,d],"float32",g)}var pP={kernelName:Ss,backendName:"cpu",kernelFunc:w9};function C9(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:i}=n;tt([s,o],"resizeBilinearGrad");let a=y.computeStrides(o.shape),[u,l,c,p]=o.shape,[,m,f]=s.shape,d=new Float32Array(u*l*c*p),h=[i&&m>1?l-1:l,i&&f>1?c-1:c],g=[i&&m>1?m-1:m,i&&f>1?f-1:f],x=h[0]/g[0],b=h[1]/g[1],w=e.data.get(s.dataId).values,C=0;for(let N=0;N<u;N++){let _=N*a[0];for(let A=0;A<m;A++){let $=A*x,F=Math.floor($),P=Math.min(Math.ceil($),l-1),V=_+F*a[1],G=_+P*a[1],W=$-F,q=1-W;for(let H=0;H<f;H++){let K=H*b,X=Math.floor(K),Z=Math.min(Math.ceil(K),c-1),et=K-X,rt=1-et,ot=V+X*a[2],at=V+Z*a[2],nt=G+X*a[2],st=G+Z*a[2],ft=q*rt,gt=q*et,Ct=W*rt,$t=W*et;for(let _t=0;_t<p;_t++){let Gt=w[C++];d[ot+_t]+=Gt*ft,d[at+_t]+=Gt*gt,d[nt+_t]+=Gt*Ct,d[st+_t]+=Gt*$t}}}}return e.makeTensorInfo([u,c,l,p],"float32",d)}var mP={kernelName:Pp,backendName:"cpu",kernelFunc:C9};function I9(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:i,size:a}=n;tt(o,"resizeNearestNeighbor");let u=y.computeStrides(o.shape),[l,c]=a,[p,m,f,d]=o.shape,h=e.data.get(o.dataId).values,g=new Float32Array(p*l*c*d),x=[s&&l>1?m-1:m,s&&c>1?f-1:f],b=[s&&l>1?l-1:l,s&&c>1?c-1:c],w=x[0]/b[0],C=x[1]/b[1],N=0;for(let _=0;_<p;_++){let A=_*u[0];for(let $=0;$<l;$++){let F=i?w*($+.5):w*$,P=Math.min(m-1,s?Math.round(F):Math.floor(F));i&&(P=Math.max(0,P));let V=A+P*u[1];for(let G=0;G<c;G++){let W=i?C*(G+.5):C*G,q=Math.min(f-1,s?Math.round(W):Math.floor(W));i&&(q=Math.max(0,q));let H=V+q*u[2];for(let K=0;K<d;K++){let X=h[H+K];g[N++]=X}}}}return e.makeTensorInfo([p,l,c,d],o.dtype,g)}var fP={kernelName:vs,backendName:"cpu",kernelFunc:I9};function v9(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:i}=n;tt([s,o],"resizeNearestNeighborGrad");let a=y.computeStrides(o.shape),u=y.computeStrides(s.shape),[l,c,p,m]=o.shape,[,f,d]=s.shape,h=new Float32Array(l*c*p*m),g=e.data.get(s.dataId).values,x=[i&&f>1?c-1:c,i&&d>1?p-1:p],b=[i&&f>1?f-1:f,i&&d>1?d-1:d],w=x[0]/b[0],C=x[1]/b[1],N=1/w,_=1/C,A=Math.ceil(N)*2+2,$=Math.ceil(_)*2+2;for(let F=0;F<l;F++){let P=F*a[0];for(let V=0;V<c;V++){let G=P+V*a[1],W=Math.floor(V*N),q=Math.floor(W-A/2);for(let H=0;H<p;H++){let K=G+H*a[2],X=Math.floor(H*_),Z=Math.floor(X-$/2);for(let et=0;et<m;et++){let rt=0;for(let ot=0;ot<A;ot++){let at=ot+q;if(at<0||at>=f)continue;let nt=P+at*u[1],st=at*w,ft=Math.min(c-1,i?Math.round(st):Math.floor(st));if(V===ft)for(let gt=0;gt<$;gt++){let Ct=gt+Z;if(Ct<0||Ct>=d)continue;let $t=nt+Ct*u[2],_t=Ct*C,Gt=Math.min(p-1,i?Math.round(_t):Math.floor(_t));H===Gt&&(rt+=g[$t+et])}}h[K+et]=rt}}}}return e.makeTensorInfo(o.shape,o.dtype,h)}var dP={kernelName:Op,backendName:"cpu",kernelFunc:v9};function S9(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n;tt(o,"reverse");let i=o.shape.length,a=y.parseAxisParam(s,o.shape);if(i===0)return Xr({inputs:{x:o},backend:e});let u=new pe(o.shape,o.dtype),l=e.bufferSync(o);for(let c=0;c<u.size;c++){let p=u.indexToLoc(c),m=p.slice();a.forEach(f=>m[f]=o.shape[f]-1-m[f]),u.set(l.get(...m),...p)}return e.makeTensorInfo(u.shape,u.dtype,u.values)}var hP={kernelName:Ts,backendName:"cpu",kernelFunc:S9};var gP={kernelName:ja,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=t,a=e,u=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(n.shape)),[l,c,p,m]=n.shape,[f,d]=S.getImageCenter(i,c,p),h=255,g=Math.sin(o),x=Math.cos(o),b=a.data.get(n.dataId).values;for(let C=0;C<l;C++){let N=C*p*c*m;for(let _=0;_<c;_++){let A=_*(p*m);for(let $=0;$<p;$++){let F=$*m;for(let P=0;P<m;P++){let V=[l,_,$,P],G=V[2],W=V[1],q=(G-f)*x-(W-d)*g,H=(G-f)*g+(W-d)*x;q=Math.round(q+f),H=Math.round(H+d);let K=s;if(typeof s!="number"&&(P===3?K=h:K=s[P]),q>=0&&q<p&&H>=0&&H<c){let Z=H*(p*m),et=q*m,rt=N+Z+et+P;K=b[rt]}let X=N+A+F+P;u[X]=K}}}}return{dataId:a.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var N9=Et(ks,r=>{let t=Math.floor(r);return r-t<.5?Math.floor(r):r-t>.5?Math.ceil(r):t%2===0?t:t+1}),xP={kernelName:ks,backendName:"cpu",kernelFunc:N9};function T9(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:i}=n,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=S.calculateShapes(s,o,i),m=!0,f=e.bufferSync(o),d=e.bufferSync(s),h=xl(f,d,i,p,l,u,a,c,0,m);return e.makeTensorInfo(i,h.dtype,h.values)}var yP={kernelName:za,backendName:"cpu",kernelFunc:T9};function k9(r,t){let e=0,n=r.length,o=0;for(;e<n;)o=Math.floor((e+n)/2),r[o]<t?e=o+1:n=o;return n}function E9(r,t){let e=0,n=r.length,o=0;for(;e<n;)o=Math.floor((e+n)/2),r[o]<=t?e=o+1:n=o;return n}function bP(r,t,e,n,o,s){let i=y.getArrayFromDType("int32",e*o);for(let a=0;a<e;++a){let u=r.slice(a*n,(a+1)*n),l=a*o;for(let c=0;c<o;++c)i[l+c]=s==="left"?k9(u,t[c+l]):E9(u,t[c+l])}return i}function _9(r){let{inputs:t,backend:e,attrs:n}=r,{sortedSequence:o,values:s}=t,{side:i}=n,a=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,l=bP(a,u,o.shape[0],o.shape[1],s.shape[1],i);return e.makeTensorInfo(s.shape,"int32",l)}var wP={kernelName:Lp,backendName:"cpu",kernelFunc:_9};function A9(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t;tt([n,o,s],"select");let i=n.shape.length,a=e.data.get(n.dataId).values,u=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,c=lr(o.dtype,s.dtype),p=y.makeZerosTypedArray(y.sizeFromShape(o.shape),c),m=0,f=i===0||i>1||o.shape.length===1?1:y.sizeFromShape(o.shape.slice(1));for(let d=0;d<a.length;d++)for(let h=0;h<f;h++)a[d]===1?p[m++]=u[d]:p[m++]=l[d];return e.makeTensorInfo(o.shape,c,p)}var CP={kernelName:xi,backendName:"cpu",kernelFunc:A9};var $9=S.SELU_SCALEALPHA,D9=S.SELU_SCALE,R9=Et(Ba,r=>r>=0?D9*r:$9*(Math.exp(r)-1)),IP={kernelName:Ba,backendName:"cpu",kernelFunc:R9};var F9=Et(Ga,r=>r<0?-1:r>0?1:0),vP={kernelName:Ga,backendName:"cpu",kernelFunc:F9};var O9=Et(_s,r=>Math.sin(r)),SP={kernelName:_s,backendName:"cpu",kernelFunc:O9};var P9=Et(Va,r=>Math.sinh(r)),NP={kernelName:Va,backendName:"cpu",kernelFunc:P9};var L9=11920928955078125e-23,TP=Math.log(L9)+2,M9=Et(Wa,r=>{let t=r>-TP,e=r<TP,n=Math.exp(r),o;return e?o=n:t?o=r:o=Math.log(1+n),o}),kP={kernelName:Wa,backendName:"cpu",kernelFunc:M9};function z9(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:i}=n;tt([o],"spaceToBatchND");let a=y.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let _=1+s.length;_<o.shape.length;++_)u.push([0,0]);let l=gw.kernelFunc({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),c=S.getReshaped(l.shape,s,a,!1),p=S.getPermuted(c.length,s.length,!1),m=S.getReshapedPermuted(l.shape,s,a,!1),h=Zt({inputs:{x:l},backend:e,attrs:{shape:c}}),b=Ge({inputs:{x:h},backend:e,attrs:{perm:p}}),N=Zt({inputs:{x:b},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(b),N}var EP={kernelName:bi,backendName:"cpu",kernelFunc:z9};function B9(r){let{inputs:t,backend:e}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=e.data.get(n.dataId).values,u=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,c=e.data.get(i.dataId).values[0],[p,m,f,d,h]=iw(a,n.shape,n.dtype,u,o.dtype,l,c);return[e.makeTensorInfo(m,n.dtype,p),e.makeTensorInfo([m[0]],o.dtype,f),e.makeTensorInfo([d.length],"bool",new Uint8Array(d.map(g=>Number(g)))),e.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var _P={kernelName:Ml,backendName:"cpu",kernelFunc:B9};function V9(r){let{inputs:t,backend:e}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(e.data.get(o.dataId).values),a=e.data.get(n.dataId).values,u=Array.from(e.data.get(s.dataId).values),[l,c,p]=aw(a,n.shape,n.dtype,i,u);return[e.makeTensorInfo(c,n.dtype,l),e.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var AP={kernelName:Ua,backendName:"cpu",kernelFunc:V9};function G9(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,[l,c]=cd(i,n.shape,n.dtype,a,u,!0);return e.makeTensorInfo(c,n.dtype,l)}var $P={kernelName:zl,backendName:"cpu",kernelFunc:G9};function W9(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,[l,c]=cd(i,n.shape,n.dtype,a,u);return e.makeTensorInfo(c,n.dtype,l)}var DP={kernelName:Bl,backendName:"cpu",kernelFunc:W9};function U9(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=t,{outputShape:a}=n,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:m}=S.calculateShapes(s,o,a),f=!1,d=e.bufferSync(o),h;switch(s.dtype){case"bool":{let g=e.bufferSync(s),x=Boolean(e.data.get(i.dataId).values[0]);h=xl(d,g,a,m,c,l,u,p,x,f);break}case"float32":{let g=e.bufferSync(s),x=e.data.get(i.dataId).values[0];h=xl(d,g,a,m,c,l,u,p,x,f);break}case"int32":{let g=e.bufferSync(s),x=e.data.get(i.dataId).values[0];h=xl(d,g,a,m,c,l,u,p,x,f);break}case"string":{let g=e.bufferSync(s),x=y.decodeString(e.data.get(i.dataId).values[0]);h=xl(d,g,a,m,c,l,u,p,x,f);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return e.makeTensorInfo(a,h.dtype,h.values)}var RP={kernelName:Mp,backendName:"cpu",kernelFunc:U9};function H9(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:i}=n,a=y.parseAxisParam(i,o.shape)[0],u=S.prepareSplitSize(o,s,a),l=new Array(o.shape.length).fill(0),c=o.shape.slice();return u.map(p=>{let m=[...c];m[a]=p;let f=Fo({inputs:{x:o},backend:e,attrs:{begin:l,size:m}});return l[a]+=p,f})}var FP={kernelName:wi,backendName:"cpu",kernelFunc:H9};var OP={kernelName:Vl,backendName:"cpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,n=t;tt(e,"square");let o=n.data.get(e.dataId).values,s=new Float32Array(o.length);for(let a=0;a<o.length;++a){let u=o[a];s[a]=u*u}return{dataId:n.write(s,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};var q9=Et(mo,(r,t)=>{let e=t;return isNaN(r)?NaN:r>0?1:e.alpha}),PP={kernelName:mo,backendName:"cpu",kernelFunc:q9};function K9(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n;tt(o,"stridedSlice");let{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:C}=ze.sliceInfo(o.shape,s,i,a,u,l,c,p,m),N;if(h)N=Zt({inputs:{x:o},backend:e,attrs:{shape:d}});else if(g||x){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let _=ze.computeOutShape(b,w,C),A=Fo({inputs:{x:o},backend:e,attrs:{begin:b,size:_}});N=Zt({inputs:{x:A},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(A)}else{let _=e.bufferSync(o),A=lw(f,_,C,b);N=e.makeTensorInfo(d,A.dtype,A.values)}return N}var LP={kernelName:Ha,backendName:"cpu",kernelFunc:K9};function j9(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:l}=n,{data:c,dataSplits:p}=t,m=e.data.get(c.dataId).values,f=e.data.get(p.dataId).values,[d,h]=Fc(m,f,o,s,i,a,u,l);return[e.makeTensorInfo([d.length],"string",d),e.makeTensorInfo(p.shape,"int32",h)]}var MP={kernelName:Gl,backendName:"cpu",kernelFunc:j9};function X9(r){let{inputs:t,backend:e,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=e.data.get(s.dataId).values,u=e.data.get(i.dataId).values[0],[l,c,p]=Oc(a,u,o),m=c.length;return[e.makeTensorInfo([m,2],"int32",l),e.makeTensorInfo([m],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(p))]}var zP={kernelName:Wl,backendName:"cpu",kernelFunc:X9};function Y9(r){let{inputs:t,backend:e,attrs:n}=r,{numBuckets:o}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let i=e.data.get(s.dataId).values,a=Pc(i,o);return e.makeTensorInfo(s.shape,"int32",a)}var BP={kernelName:Ul,backendName:"cpu",kernelFunc:Y9};var Z9=Et(Ps,r=>Math.tan(r)),VP={kernelName:Ps,backendName:"cpu",kernelFunc:Z9};var J9=Et(Ls,r=>Math.tanh(r)),GP={kernelName:Ls,backendName:"cpu",kernelFunc:J9};function Q9(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;tt(o,"tile");let i=uw(e.bufferSync(o),s);return e.makeTensorInfo(i.shape,i.dtype,i.values)}var WP={kernelName:Qn,backendName:"cpu",kernelFunc:Q9};function ttt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:i}=n;tt(o,"topk");let a=e.data.get(o.dataId).values,[u,l]=cw(a,o.shape,o.dtype,s,i);return[e.makeTensorInfo(u.shape,u.dtype,u.values),e.makeTensorInfo(l.shape,l.dtype,l.values)]}var UP={kernelName:qa,backendName:"cpu",kernelFunc:ttt};function ett(r){let{inputs:t,attrs:e,backend:n}=r,{image:o,transforms:s}=t,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=e,[c,p,m,f]=o.shape,[d,h]=l!=null?l:[p,m],g=[c,d,h,f],x=y.computeStrides(o.shape),b=x[0],w=x[1],C=x[2],N=y.computeStrides(g),_=N[0],A=N[1],$=N[2],F=y.getTypedArrayFromDType(o.dtype,y.sizeFromShape(g));F.fill(u);let P=n.data.get(o.dataId).values,V=n.data.get(s.dataId).values;for(let W=0;W<c;++W){let q=s.shape[0]===1?V:V.subarray(W*8,W*8+8);for(let H=0;H<d;++H)for(let K=0;K<h;++K)for(let X=0;X<f;++X){let Z,et=q[6]*K+q[7]*H+1;if(et===0)continue;let rt=(q[0]*K+q[1]*H+q[2])/et,ot=(q[3]*K+q[4]*H+q[5])/et,at=HP(rt,m,a),nt=HP(ot,p,a);switch(i){case"nearest":Z=itt(P,p,m,b,w,C,W,nt,at,X,u);break;case"bilinear":Z=att(P,p,m,b,w,C,W,nt,at,X,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let st=W*_+H*A+K*$+X;F[st]=Z}return n.makeTensorInfo(g,o.dtype,F)}return{dataId:n.write(F,g,o.dtype),shape:o.shape,dtype:o.dtype}}var qP={kernelName:Ka,backendName:"cpu",kernelFunc:ett};function HP(r,t,e){switch(e){case"reflect":return rtt(r,t);case"wrap":return ntt(r,t);case"nearest":return stt(r,t);case"constant":default:return ott(r,t)}}function rtt(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let n=2*t;e<n&&(e=n*Math.trunc(-e/n)+e),e=e<-t?e+n:-e-1}else if(e>t-1)if(t<=1)e=0;else{let n=2*t;e-=n*Math.trunc(e/n),e>=t&&(e=n-e-1)}return y.clamp(0,e,t-1)}function ntt(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let n=t-1;e+=t*(Math.trunc(-e/n)+1)}else if(e>t-1)if(t<=1)e=0;else{let n=t-1;e-=t*Math.trunc(e/n)}return y.clamp(0,e,t-1)}function ott(r,t){return r}function stt(r,t){return y.clamp(0,r,t-1)}function Xh(r,t,e,n,o,s,i,a,u,l,c){let p=i*n+a*o+u*s+l;return 0<=a&&a<t&&0<=u&&u<e?r[p]:c}function itt(r,t,e,n,o,s,i,a,u,l,c){let p=Math.round(a),m=Math.round(u);return Xh(r,t,e,n,o,s,i,p,m,l,c)}function att(r,t,e,n,o,s,i,a,u,l,c){let p=Math.floor(a),m=Math.floor(u),f=p+1,d=m+1,h=(d-u)*Xh(r,t,e,n,o,s,i,p,m,l,c)+(u-m)*Xh(r,t,e,n,o,s,i,p,d,l,c),g=(d-u)*Xh(r,t,e,n,o,s,i,f,m,l,c)+(u-m)*Xh(r,t,e,n,o,s,i,f,d,l,c);return(f-a)*h+(a-p)*g}function ltt(r){let{inputs:t,attrs:e,backend:n}=r,{axis:o}=e,{x:s}=t;tt(s,"unique");let i=n.data.get(s.dataId).values,{outputValues:a,outputShape:u,indices:l}=pw(i,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,a),n.makeTensorInfo([l.length],"int32",l)]}var KP={kernelName:zp,backendName:"cpu",kernelFunc:ltt};function utt(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o.shape.length,a=o.shape[s],u=new Array(i-1),l=0;for(let f=0;f<i;f++)f!==s&&(u[l++]=o.shape[f]);let c=new Array(i).fill(0),p=o.shape.slice();p[s]=1;let m=new Array(a);for(let f=0;f<m.length;f++){c[s]=f;let d=Fo({inputs:{x:o},backend:e,attrs:{begin:c,size:p}});m[f]=Zt({inputs:{x:d},backend:e,attrs:{shape:u}}),e.disposeIntermediateTensorInfo(d)}return m}var jP={kernelName:Ci,backendName:"cpu",kernelFunc:utt};function ctt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,segmentIds:s}=t,{numSegments:i}=n;tt(o,"unsortedSegmentSum");let a=o.shape.length,u=s.shape.length,l=[],c=[],p=a-u,m=s;for(let d=0;d<p;++d){let h=md({inputs:{input:m},backend:e,attrs:{dim:d+1}});m=h,c.push(h)}for(let d=0;d<i;++d){let h=y.createScalarValue(d,"int32"),g=e.makeTensorInfo([],"int32",h),x=qN({inputs:{a:g,b:m},backend:e}),b=$o({inputs:{x},backend:e,attrs:{dtype:"float32"}}),w=$c({inputs:{a:b,b:o},backend:e}),C=yl({inputs:{x:w},backend:e,attrs:{axis:0,keepDims:!1}});l.push(C),c.push(g),c.push(x),c.push(b),c.push(w),c.push(C)}let f=vT({inputs:l,backend:e,attrs:{axis:0}});return c.forEach(d=>e.disposeIntermediateTensorInfo(d)),f}var XP={kernelName:Hl,backendName:"cpu",kernelFunc:ctt};var ptt=[CF,DR,IF,vF,LR,SF,NF,TF,kF,EF,_F,AF,$F,DF,RF,OF,PF,LF,MF,wF,zF,BF,VF,GF,PR,MR,WF,RR,UF,qF,KF,jF,XF,YF,ZF,JF,QF,tO,eO,rO,nO,oO,sO,iO,aO,lO,uO,cO,pO,mO,dO,dF,hO,zR,gO,BR,xO,VR,yO,bO,wO,GR,CO,IO,vO,SO,NO,WR,UR,FR,TO,HF,kO,EO,_O,hF,HR,qR,AO,KR,$O,DO,RO,FO,OO,PO,LO,jR,MO,zO,BO,VO,WO,UO,HO,XR,qO,KO,YO,YR,ZR,ZO,JO,QO,JR,tP,nP,oP,gw,sP,gF,tF,iP,aP,lP,uP,OR,qh,cP,xF,yF,bF,pP,mP,fP,dP,hP,gP,xP,sF,yP,wP,CP,IP,aF,vP,SP,NP,lF,jO,kP,EP,_P,AP,$P,DP,RP,FP,cF,OP,pF,PP,LP,MP,zP,BP,mF,fO,VP,GP,WP,UP,qP,QR,KP,jP,XP,eP];for(let r of ptt)Fu(r);var gd={};Ut(gd,{assertNotComplex:()=>ti,bindCanvasToFramebuffer:()=>wtt,bindColorTextureToFramebuffer:()=>Qh,bindTextureToProgramUniformSampler:()=>zT,bindTextureUnit:()=>QP,bindVertexBufferToProgramAttribute:()=>Iw,callAndCheck:()=>ht,canBeRepresented:()=>kT,createFragmentShader:()=>_T,createFramebuffer:()=>PT,createProgram:()=>AT,createStaticIndexBuffer:()=>RT,createStaticVertexBuffer:()=>DT,createTexture:()=>FT,createVertexShader:()=>ET,getBatchDim:()=>wl,getExtensionOrThrow:()=>fd,getFramebufferErrorMessage:()=>tL,getMaxTexturesInShader:()=>GT,getNumChannels:()=>ytt,getProgramUniformLocation:()=>MT,getProgramUniformLocationOrThrow:()=>LT,getRowsCols:()=>Cl,getShapeAs3D:()=>hd,getTextureShapeFromLogicalShape:()=>BT,getWebGLDisjointQueryTimerVersion:()=>WT,getWebGLErrorMessage:()=>JP,getWebGLMaxTextureSize:()=>VT,hasExtension:()=>Un,isCapableOfRenderingToFloatTexture:()=>UT,isDownloadFloatTextureEnabled:()=>HT,isReshapeFree:()=>vu,isWebGLFenceEnabled:()=>qT,isWebGLVersionEnabled:()=>Sw,linkProgram:()=>$T,logShaderSourceAndInfoLog:()=>Cw,resetMaxTextureSize:()=>Ctt,resetMaxTexturesInShader:()=>Itt,unbindColorTextureFromFramebuffer:()=>vw,unbindTextureUnit:()=>btt,validateFramebuffer:()=>dd,validateProgram:()=>Jh,validateTextureSize:()=>OT});var Mc={},xw={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ST(r,t){Mc[r]=t}function Wn(r,t){if(!(r in Mc)||t!=null){let n=ftt(r,t);if(n!==null)Mc[r]=n;else return console.log("Could not get context for WebGL version",r),null}let e=Mc[r];return e==null||e.isContextLost()?(delete Mc[r],Wn(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Mc[r])}function mtt(r){if(typeof OffscreenCanvas!="undefined"&&r===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function ftt(r,t){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=t==null?mtt(r):t;return e.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Mc[r]},!1),M().getBool("SOFTWARE_WEBGL_ENABLED")&&(xw.failIfMajorPerformanceCaveat=!1),r===1?e.getContext("webgl",xw)||e.getContext("experimental-webgl",xw):e.getContext("webgl2",xw)}var Iu;(function(r){r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH"})(Iu||(Iu={}));var Yr;(function(r){r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD"})(Yr||(Yr={}));var Lr;(function(r){r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Lr||(Lr={}));function zc(r,t){return[t,r]}function YP(r,t){return r*t}function Yh(r){let t=y.sizeFromShape(r),e=Math.ceil(t/4);return y.sizeToSquarishShape(e)}function Ji(r,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(r/2))]}function ZP(r,t){let[e,n]=Ji(r,t);return e*n*4}function Zh(r,t){let e=r,n,o,s,i,a,u,l,c,p,m;return M().getNumber("WEBGL_VERSION")===2?(n=e.R32F,o=e.R16F,s=e.RGBA16F,i=e.RGBA32F,a=e.RED,l=4,c=1,p=e.HALF_FLOAT,m=e.FLOAT,u=e.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,i=e.RGBA,a=r.RGBA,l=4,c=4,p=t!=null?t.HALF_FLOAT_OES:null,m=r.FLOAT,u=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:m}}function ht(r,t){let e=t();return M().getBool("DEBUG")&&dtt(r),e}function dtt(r){let t=r.getError();if(t!==r.NO_ERROR)throw new Error("WebGL Error: "+JP(r,t))}var htt=596e-10,gtt=65504;function kT(r){return!!(M().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||htt<Math.abs(r)&&Math.abs(r)<gtt)}function JP(r,t){switch(t){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function fd(r,t){return bl(r,()=>r.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function ET(r,t){let e=bl(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ht(r,()=>r.shaderSource(e,t)),ht(r,()=>r.compileShader(e)),r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function _T(r,t){let e=bl(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ht(r,()=>r.shaderSource(e,t)),ht(r,()=>r.compileShader(e)),M().get("ENGINE_COMPILE_ONLY"))return e;if(r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw Cw(t,r.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}var xtt=/ERROR: [0-9]+:([0-9]+):/g;function Cw(r,t){let e=xtt.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(r);return}let n=+e[1],o=r.split(`
`),s=o.length.toString().length+2,i=o.map((p,m)=>y.rightPad((m+1).toString(),s)+p),a=0;for(let p=0;p<i.length;p++)a=Math.max(i[p].length,a);let u=i.slice(0,n-1),l=i.slice(n-1,n),c=i.slice(n);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${y.rightPad(l[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function AT(r){return bl(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function $T(r,t){if(ht(r,()=>r.linkProgram(t)),!M().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(t,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Jh(r,t){if(ht(r,()=>r.validateProgram(t)),r.getProgramParameter(t,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function DT(r,t){let e=bl(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ht(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),ht(r,()=>r.bufferData(r.ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function RT(r,t){let e=bl(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return ht(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e)),ht(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function ytt(){return M().getNumber("WEBGL_VERSION")===2?1:4}function FT(r){return bl(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function OT(r,t){let e=M().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||t<=0){let n=`[${r}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>e||t>e){let n=`[${r}x${t}]`,o=`[${e}x${e}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function PT(r){return bl(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Iw(r,t,e,n,o,s,i){let a=r.getAttribLocation(t,e);return a===-1?!1:(ht(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),ht(r,()=>r.vertexAttribPointer(a,o,r.FLOAT,!1,s,i)),ht(r,()=>r.enableVertexAttribArray(a)),!0)}function QP(r,t,e){eL(r,e),ht(r,()=>r.activeTexture(r.TEXTURE0+e)),ht(r,()=>r.bindTexture(r.TEXTURE_2D,t))}function btt(r,t){eL(r,t),ht(r,()=>r.activeTexture(r.TEXTURE0+t)),ht(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function LT(r,t,e){return bl(r,()=>r.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function MT(r,t,e){return r.getUniformLocation(t,e)}function zT(r,t,e,n){ht(r,()=>QP(r,t,n)),ht(r,()=>r.uniform1i(e,n))}function wtt(r){ht(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),ht(r,()=>r.viewport(0,0,r.canvas.width,r.canvas.height)),ht(r,()=>r.scissor(0,0,r.canvas.width,r.canvas.height))}function Qh(r,t,e){ht(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),ht(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0))}function vw(r,t){ht(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),ht(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function dd(r){let t=r.checkFramebufferStatus(r.FRAMEBUFFER);if(t!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+tL(r,t))}function tL(r,t){switch(t){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function bl(r,t,e){let n=ht(r,()=>t());if(n==null)throw new Error(e);return n}function eL(r,t){let e=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+r.TEXTURE0;if(n<r.TEXTURE0||n>e){let o=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${o}.`)}}function wl(r,t=2){return y.sizeFromShape(r.slice(0,r.length-t))}function Cl(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function hd(r){let t=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(t=[wl(r),...Cl(r)]),t}function BT(r,t=!1){let e=M().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=M().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&M().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=e/2),t&&(e=e*2,n=n*2,r=r.map((a,u)=>u>=r.length-2?y.nearestLargerEven(r[u]):r[u]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=y.squeezeShape(r).newShape);let o=y.sizeFromShape(r),s=null;r.length<=1&&o<=e?s=[1,o]:r.length===2&&r[0]<=e&&r[1]<=e?s=r:r.length===3&&r[0]*r[1]<=e&&r[2]<=e?s=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=e&&r[1]*r[2]<=e?s=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=e&&r[3]<=e?s=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=e&&r[1]*r[2]*r[3]<=e&&(s=[r[0],r[1]*r[2]*r[3]]);let i=s!=null&&Math.max(...s)>n&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||i)if(t){let a=wl(r),u=2,l=2;r.length&&([u,l]=Cl(r)),o=a*(u/2)*(l/2),s=y.sizeToSquarishShape(o).map(c=>c*2)}else s=y.sizeToSquarishShape(o);return s}function yw(r){return r%2===0}function vu(r,t){if(r=r.slice(-2),t=t.slice(-2),y.arraysEqual(r,t)||!r.length||!t.length||r[0]===0||r[1]===0||t[0]===0||t[1]===0)return!0;if(r.length!==t.length){let e=r.slice(-1)[0],n=t.slice(-1)[0];if(e===n||yw(e)&&yw(n)&&(r[0]===1||t[0]===1))return!0}return r[1]===t[1]&&yw(r[0])&&yw(t[0])}var bw,ww;function VT(r){if(bw==null){let t=Wn(r);bw=t.getParameter(t.MAX_TEXTURE_SIZE)}return bw}function Ctt(){bw=null}function Itt(){ww=null}function GT(r){if(ww==null){let t=Wn(r);ww=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ww)}function WT(r){if(r===0)return 0;let t,e=Wn(r);return Un(e,"EXT_disjoint_timer_query_webgl2")&&r===2?t=2:Un(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function Un(r,t){return r.getExtension(t)!=null}function Sw(r){try{if(Wn(r)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function UT(r){if(r===0)return!1;let t=Wn(r);if(r===1){if(!Un(t,"OES_texture_float"))return!1}else if(!Un(t,"EXT_color_buffer_float"))return!1;return TT(t)}function HT(r){if(r===0)return!1;let t=Wn(r);if(r===1){if(!Un(t,"OES_texture_float")||!Un(t,"WEBGL_color_buffer_float"))return!1}else{if(Un(t,"EXT_color_buffer_float"))return TT(t);let n="EXT_color_buffer_half_float";if(Un(t,n)){let o=t.getExtension(n);return vtt(t,o)}return!1}return TT(t)}function TT(r){let t=Zh(r),e=r.createTexture();r.bindTexture(r.TEXTURE_2D,e);let n=1,o=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatFloat,n,o,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(e),r.deleteFramebuffer(s),i}function vtt(r,t){let e=Zh(r,t),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n);let o=1,s=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatHalfFloat,o,s,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(i),a}function qT(r){return r!==2?!1:Wn(r).fenceSync!=null}function ti(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Tt=M();Tt.registerFlag("HAS_WEBGL",()=>Tt.getNumber("WEBGL_VERSION")>0);Tt.registerFlag("WEBGL_VERSION",()=>Sw(2)?2:Sw(1)?1:0);Tt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Tt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Tt.get("WEBGL_VERSION")===2);Tt.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Tt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Tt.registerFlag("WEBGL_PACK",()=>Tt.getBool("HAS_WEBGL"));Tt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_CLIP",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_PACK_REDUCE",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_LAZILY_UNPACK",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_CONV_IM2COL",()=>Tt.getBool("WEBGL_PACK"));Tt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>VT(Tt.getNumber("WEBGL_VERSION")));Tt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>GT(Tt.getNumber("WEBGL_VERSION")));Tt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Tt.getNumber("WEBGL_VERSION");return r===0?0:WT(r)});Tt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Tt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Xl.isMobile());Tt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>UT(Tt.getNumber("WEBGL_VERSION")));Tt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Tt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Tt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Tt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>HT(Tt.getNumber("WEBGL_VERSION")));Tt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>qT(Tt.getNumber("WEBGL_VERSION")));Tt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Tt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Tt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});Tt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Xl.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});Tt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Tt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Tt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Tt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Tt.registerFlag("WEBGL_EXP_CONV",()=>!1);Tt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Tt.getBool("IS_TEST"));Tt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Tt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Tt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Tt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function We(){let r,t,e,n,o,s,i,a,u,l;return M().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",t="in",e="out",n="in",o="texture",s="outputColor",i="out vec4 outputColor;",a=M().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",t="attribute",e="varying",n="varying",o="texture2D",s="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:t,varyingVs:e,varyingFs:n,texture2D:o,output:s,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:u,defineRound:l}}function ei(r,t,e="index"){let n=y.computeStrides(t);return n.map((o,s)=>{let i=`int ${r[s]} = ${e} / ${o}`,a=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${i}; ${a};`}).join("")}function Bc(r,t,e="index"){let n=y.computeStrides(t);return n.map((o,s)=>{let i=`int ${r[s]} = ${e} / outShapeStrides[${s}]`,a=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${i}; ${a};`}).join("")}function Stt(r,t){let e=r.length,n=r.map(s=>`${t}[${s}]`),o=new Array(e-1);o[e-2]=n[e-1];for(let s=e-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function rL(r,t,e="index"){let n=r.map((s,i)=>i),o=Stt(n,t);return o.map((s,i)=>{let a=`int ${r[i]} = ${e} / ${o[i]}`,u=i===o.length-1?`int ${r[i+1]} = ${e} - ${r[i]} * ${o[i]}`:`index -= ${r[i]} * ${o[i]}`;return`${a}; ${u};`}).join("")}function xd(r){let t=y.computeStrides(r).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function yd(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var Nw=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:nL}=S;function oL(r,t,e){let n=[];if(r.forEach(f=>{let d=y.sizeFromShape(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?n.push(`uniform float ${f.name}${d>1?`[${d}]`:""};`):(n.push(`uniform sampler2D ${f.name};`),n.push(`uniform int offset${f.name};`)),e.enableShapeUniforms){let{uniformShape:h}=Tw(e.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(h.length){case 1:n.push(`uniform int ${f.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${f.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${f.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(f=>{n.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(f=>Ntt(f,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),i=t.texShape,a=We(),u=Ett(a),l,c,p=$tt(a);return t.isPacked?(l=Ttt(t.logicalShape,i,e.enableShapeUniforms),c=Att(a)):(l=ktt(t.logicalShape,i,e.enableShapeUniforms),c=_tt(a)),e.packedInputs&&(p+=Ott),[p,u,c,o,l,s,e.userCode].join(`
`)}function wd(r,t=!1){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return Ktt(r,t);case 1:return Xtt(r,t);case 2:return Ztt(r,t);case 3:return Qtt(r,t);case 4:return eet(r,t);case 5:return ret(r);case 6:return net(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function sL(r,t){switch(r.shapeInfo.logicalShape.length){case 0:return qtt(r);case 1:return jtt(r,t);case 2:return Ytt(r,t);case 3:return Jtt(r,t);default:return tet(r,t)}}function Ntt(r,t,e=!1,n){let o="";e?o+=sL(r,n):o+=wd(r,n);let s=r.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(e?o+=oet(r,t):o+=set(r,t)),o}function Ttt(r,t,e){switch(r.length){case 0:return iL();case 1:return Ptt(r,t,e);case 2:return Utt(r,t,e);case 3:return Mtt(r,t,e);default:return Btt(r,t,e)}}function ktt(r,t,e){switch(r.length){case 0:return iL();case 1:return Ltt(r,t,e);case 2:return Htt(r,t,e);case 3:return ztt(r,t,e);case 4:return Vtt(r,t,e);case 5:return Gtt(r,t);case 6:return Wtt(r,t);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function Ett(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function _tt(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function Att(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function $tt(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Dtt}
    ${Rtt}
    ${Ftt}
  `}var Dtt=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Rtt=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Ftt=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Ott=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function iL(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Ptt(r,t,e){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function Ltt(r,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function Mtt(r,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function ztt(r,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Bc(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=ei(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function Btt(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),i=s,a="",u="b, r, c";for(let l=2;l<r.length-1;l++)i*=r[r.length-l-1],a=`
      int b${l} = index / ${i};
      index -= b${l} * ${i};
    `+a,u=`b${l}, `+u;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${a}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${u});
    }
  `}function Vtt(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Bc(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=ei(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function Gtt(r,t){let e=ei(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Wtt(r,t){let e=ei(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Utt(r,t,e){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y.arraysEqual(r,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function Htt(r,t,e){return y.arraysEqual(r,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:r[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Vc(r){return`offset${r}`}function qtt(r){let t=r.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),n=We();return`
    vec4 ${e}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function Ktt(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let i=Vc(e);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${i});
      return sampleTexture(${e}, uv);
    }
  `;let[a,u]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}, ${u}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function jtt(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=r.shapeInfo.texShape,s=We();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${e}, uv);
    }
  `;let i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${e}, uv);
    }
  `}function Xtt(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${Cd(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],i=o[1];if(i===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=Vc(e);return i===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);
        return sampleTexture(${e}, uv);
      }
    `:s===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function Ytt(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,i=s[0],a=s[1],u=We();if(s!=null&&y.arraysEqual(e,s))return t?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],c=Math.ceil(e[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function Ztt(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&y.arraysEqual(e,s)){if(t)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let m=s[0],f=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:i,keptDims:a}=y.squeezeShape(e),u=i;if(u.length<e.length){let m=Id(r,u),f=["row","col"];return`
      ${wd(m,t)}
      float ${o}(int row, int col) {
        return ${o}(${vd(f,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${Cd(r)}
      }
    `;let l=s[0],c=s[1],p=Vc(n);return c===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${n}, uv);
    }
  `:l===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${p};
    vec2 uv = uvFromFlat(${l}, ${c}, index);
    return sampleTexture(${n}, uv);
  }
`}function Jtt(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(e[0]===1){let m=e.slice(1),f=[1,2],d=Id(r,m),h=["b","row","col"];return`
        ${sL(d,t)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${vd(h,f)});
        }
      `}let a=We();if(t)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `;let u=i[0],l=i[1],c=Math.ceil(e[2]/2),p=c*Math.ceil(e[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${p}, ${c}, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `}function Qtt(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],i=e[2],{newShape:a,keptDims:u}=y.squeezeShape(e),l=a;if(l.length<e.length){let h=Id(r,l),g=["row","col","depth"];return`
        ${wd(h,t)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${vd(g,u)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${Cd(r)}
      }
    `;let c=r.shapeInfo.texShape,p=c[0],m=c[1],f=r.shapeInfo.flatOffset;if(m===s&&f==null)return t?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${p}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(m===i&&f==null)return t?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${n}, uv);
    }
  `;let d=Vc(n);return t?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${d};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${d};
        vec2 uv = uvFromFlat(${p}, ${m}, index);
        return sampleTexture(${n}, uv);
      }
  `}function tet(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=We();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${e}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,i=s.length,a=r.shapeInfo.texShape,u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=u[0],c=u[1],p=Math.ceil(s[i-1]/2),m=p*Math.ceil(s[i-2]/2),f="int b, int row, int col",d=`b * ${m} + (row / 2) * ${p} + (col / 2)`;for(let h=2;h<i-1;h++)f=`int b${h}, `+f,m*=s[i-h-1],d=`b${h} * ${m} + `+d;return`
    vec4 ${n}(${f}) {
      int index = ${d};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});
      return ${o.texture2D}(${e}, uv);
    }
  `}function eet(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],i=e[2]*s,a=e[1]*i,{newShape:u,keptDims:l}=y.squeezeShape(e);if(u.length<e.length){let b=Id(r,u),w=["row","col","depth","depth2"];return`
      ${wd(b,t)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${vd(w,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${s}, 1)));
        ${Cd(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1],d=`int stride2 = ${n}Shape[3];`,h=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(f===a&&c==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${d}
        ${h}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===s&&c==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${n}, uv);
      }
    `;let x=Vc(n);return t?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${d}
      ${h}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${x});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${m}, ${f}, index + ${x});
      return sampleTexture(${n}, uv);
    }
  `}function ret(r){let t=r.shapeInfo.logicalShape,e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=t[4],s=t[3]*o,i=t[2]*s,a=t[1]*i,{newShape:u,keptDims:l}=y.squeezeShape(t);if(u.length<t.length){let h=Id(r,u),g=["row","col","depth","depth2","depth3"];return`
      ${wd(h)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${vd(g,l)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${s}, ${o})) +
          depth3;
        ${Cd(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1];if(f===a&&c==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===o&&c==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;let d=Vc(e);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${s} +
          depth2 * ${o} + depth3 + ${d};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function net(r){let t=r.shapeInfo.logicalShape,e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:o,keptDims:s}=y.squeezeShape(t);if(o.length<t.length){let g=Id(r,o),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${wd(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${vd(x,s)});
      }
    `}let i=t[5],a=t[4]*i,u=t[3]*a,l=t[2]*u,c=t[1]*l;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${l}, ${u}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Cd(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,f=m[0],d=m[1];if(d===c&&p==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(d===i&&p==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;let h=Vc(e);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${l} + depth * ${u} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${h};
      vec2 uv = uvFromFlat(${f}, ${d}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Cd(r){let t=r.name,e=y.sizeFromShape(r.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function oet(r,t){let e=r.name,n=e.charAt(0).toUpperCase()+e.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,i=t.logicalShape.length,a=nL(r.shapeInfo.logicalShape,t.logicalShape),u=Vt(i),l=i-s,c,p=["x","y","z","w","u","v"];s===0?c="":i<2&&a.length>=1?c="coords = 0;":c=a.map(b=>`coords.${p[b+l]} = 0;`).join(`
`);let m="";i<2&&s>0?m="coords":m=r.shapeInfo.logicalShape.map((b,w)=>`coords.${p[w+l]}`).join(", ");let f="return outputValue;",h=y.sizeFromShape(r.shapeInfo.logicalShape)===1,x=y.sizeFromShape(t.logicalShape)===1;if(s===1&&!h&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(h&&!x)i===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){let b=s-2,w=s-1;a.indexOf(b)>-1&&a.indexOf(w)>-1?f="return vec4(outputValue.x);":a.indexOf(b)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${u} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${n}(${m});
      ${f}
    }
  `}function set(r,t){let e=r.name,n=e.charAt(0).toUpperCase()+e.slice(1),o="get"+n+"AtOutCoords",s=t.texShape,i=r.shapeInfo.texShape,a=r.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!r.shapeInfo.isUniform&&a===u&&r.shapeInfo.flatOffset==null&&y.arraysEqual(i,s))return`
      float ${o}() {
        return sampleTexture(${e}, resultUV);
      }
    `;let l=Vt(u),c=nL(r.shapeInfo.logicalShape,t.logicalShape),p=u-a,m,f=["x","y","z","w","u","v"];a===0?m="":u<2&&c.length>=1?m="coords = 0;":m=c.map(h=>`coords.${f[h+p]} = 0;`).join(`
`);let d="";return u<2&&a>0?d="coords":d=r.shapeInfo.logicalShape.map((h,g)=>`coords.${f[g+p]}`).join(", "),`
    float ${o}() {
      ${l} coords = getOutputCoords();
      ${m}
      return get${n}(${d});
    }
  `}function Vt(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Tw(r,t,e){let{newShape:n,keptDims:o}=y.squeezeShape(t),s=t.length,i=r&&s===3&&t[0]===1,a=i?t.slice(1):n,u=!r&&s>1&&!y.arraysEqual(t,e)&&n.length<s||i;return{useSqueezeShape:u,uniformShape:u?a:t,keptDims:o}}function Id(r,t){let e=JSON.parse(JSON.stringify(r));return e.shapeInfo.logicalShape=t,e}function vd(r,t){return t.map(e=>r[e]).join(", ")}function lL(r,t,e,n){let o=e.map((c,p)=>{let m={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(m.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:m}}),s=o.map(c=>c.shapeInfo),i={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},a=oL(o,i,t),u=_T(r.gl,a),l=r.createProgram(u);return M().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:s,outShapeInfo:i},KT(r,t,l))}function KT(r,t,e){let n={},o={},s={},i=[],a,u,l,c=null,p=null;p=r.getUniformLocation(e,"NAN",!1),M().getNumber("WEBGL_VERSION")===1&&(c=r.getUniformLocation(e,"INFINITY",!1));let m=!1;for(let f=0;f<t.variableNames.length;f++){let d=t.variableNames[f];n[d]=r.getUniformLocation(e,d,m),n[`offset${d}`]=r.getUniformLocation(e,`offset${d}`,m),t.enableShapeUniforms&&(o[`${d}Shape`]=r.getUniformLocation(e,`${d}Shape`,m),s[`${d}TexShape`]=r.getUniformLocation(e,`${d}TexShape`,m))}return t.enableShapeUniforms&&(a=r.getUniformLocation(e,"outShape",m),l=r.getUniformLocation(e,"outShapeStrides",m),u=r.getUniformLocation(e,"outTexShape",m)),t.customUniforms&&t.customUniforms.forEach((f,d)=>{i[d]=r.getUniformLocation(e,f.name,m)}),{uniformLocations:n,customUniformLocations:i,infLoc:c,nanLoc:p,inShapesLocations:o,inTexShapesLocations:s,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:u}}function aL(r,t){if(r.length!==t.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${t.length} inputs`);r.forEach((e,n)=>{let o=e.logicalShape,s=t[n],i=s.shape;if(!y.arraysEqual(o,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${i} must match`);if(e.isUniform&&s.isUniform)return;let a=e.texShape,u=s.isUniform?null:s.texData.texShape;if(!y.arraysEqual(a,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${u} must match`)})}function uL(r,t,e,n,o){t.program.enableShapeUniforms||(aL(t.inShapeInfos,e),aL([t.outShapeInfo],[n]));let s=n.texData.texture,i=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):r.setOutputMatrixTexture(s.texture,i[0],i[1]),r.setProgram(t.webGLProgram),M().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&r.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&r.gl.uniform1f(t.nanLoc,NaN),e.forEach((u,l)=>{let c=t.program.variableNames[l],p=t.uniformLocations[c],m=t.uniformLocations[`offset${c}`],f=t.inShapesLocations[`${c}Shape`],d=t.inTexShapesLocations[`${c}TexShape`];if(f){let{uniformShape:h}=Tw(t.program.packedInputs,u.shape,u.texData.texShape);switch(h.length){case 1:r.gl.uniform1iv(f,new Int32Array(h));break;case 2:r.gl.uniform2iv(f,new Int32Array(h));break;case 3:r.gl.uniform3iv(f,new Int32Array(h));break;case 4:r.gl.uniform4iv(f,new Int32Array(h));break;default:break}}if(d&&r.gl.uniform2i(d,u.texData.texShape[0],u.texData.texShape[1]),p!=null){if(u.isUniform){if(y.sizeFromShape(u.shape)<2)r.gl.uniform1f(p,u.uniformValues[0]);else{let h=u.uniformValues;h instanceof Float32Array||(h=new Float32Array(h)),r.gl.uniform1fv(p,h)}return}u.texData.slice!=null&&m!=null&&r.gl.uniform1i(m,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,p,l)}});let a=t.outShapeLocation;if(a)switch(n.shape.length){case 1:r.gl.uniform1iv(a,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(a,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(a,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(a,new Int32Array(n.shape));break;default:break}if(t.outShapeStridesLocation){let u=y.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:r.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:r.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break;default:break}}t.outTexShapeLocation&&r.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&o&&t.program.customUniforms.forEach((u,l)=>{let c=t.customUniformLocations[l],p=o[l];if(u.type==="float")r.gl.uniform1fv(c,p);else if(u.type==="vec2")r.gl.uniform2fv(c,p);else if(u.type==="vec3")r.gl.uniform3fv(c,p);else if(u.type==="vec4")r.gl.uniform4fv(c,p);else if(u.type==="int")r.gl.uniform1iv(c,p);else if(u.type==="ivec2")r.gl.uniform2iv(c,p);else if(u.type==="ivec3")r.gl.uniform3iv(c,p);else if(u.type==="ivec4")r.gl.uniform4iv(c,p);else throw Error(`uniform type ${u.type} is not supported yet.`)}),r.executeProgram()}function cL(r,t,e){let n="";t.concat(e).forEach(i=>{let a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!i.isUniform){let u=i.texData.texShape,{useSqueezeShape:l,uniformShape:c,keptDims:p}=Tw(r.packedInputs,i.shape,u),m="",f="",d="";if(c.length===1&&r.packedInputs){let N=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];m=`${N[0]>1}_${N[1]>1}`}else if(c.length===2&&!r.packedInputs)f=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!r.packedInputs){let N=y.computeStrides(c);d=`${N[0]===u[1]}_${N[N.length-1]===u[1]}`}let h=i.shape.length,g=c.length===2&&y.arraysEqual(i.shape,u),x=y.sizeFromShape(i.shape)===1,b=S.getBroadcastDims(i.shape,e.shape),w=!r.packedInputs&&h===e.shape.length&&y.arraysEqual(u,e.texData.texShape),C=r.packedInputs||c.length>2?"":`${u[0]>1}_${u[1]>1}`;n+=`${h}_${w}_${l?p:""}_${c.length}_${x}_${b}_${g}_${m}_${f}_${d}_${C}_${a}`}else{let u=i.isUniform?"uniform":i.texData.texShape;n+=`${i.shape}_${u}_${a}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${M().getNumber("WEBGL_VERSION")}`,s}function Ce(r){return M().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var kw=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Iu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=We();this.outputShape=t,this.enableShapeUniforms=Ce(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Bc(["r","c","d"],t):ei(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}};var Ew=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Iu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=We();this.outputShape=t,this.enableShapeUniforms=Ce(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Bc(["r","c","d"],t):ei(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}};var _w=class{constructor(t){this.variableNames=["A"],this.outTexUsage=Yr.DOWNLOAD;let e=We();this.outputShape=t,this.userCode=`
      ${Nw}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}};var Aw=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Yr.DOWNLOAD;let e=We();this.outputShape=t,this.userCode=`
      ${Nw}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}};var uet={R:0,G:1,B:2,A:3},tg=class{constructor(t,e=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let o=We();this.outputShape=t,this.enableShapeUniforms=Ce(this.outputShape.length);let s="result";e&&(s="floor(result * 255. + 0.5)");let i="";for(let a=0;a<n.length;a++){let u=n[a];i+=`
          if(offset == ${a}) {
            result = values[${uet[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?yd():xd(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${o.texture2D}(A, uv);
          ${i}
        }
        ${o.output} = vec4(${s}, 0., 0., 0.);
      }
    `}};var $w=class{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=We();this.outputShape=t,this.enableShapeUniforms=Ce(this.outputShape.length);let o="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){let u=i*2+a;o+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?yd():xd(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};var ck={};Ut(ck,{bindVertexProgramAttributeStreams:()=>rk,createBufferFromOutputTexture:()=>sk,createFloat16MatrixTexture:()=>JT,createFloat16PackedMatrixTexture:()=>ek,createFloat32MatrixTexture:()=>ZT,createIndexBuffer:()=>YT,createPackedMatrixTexture:()=>tk,createUnsignedBytesMatrixTexture:()=>QT,createVertexBuffer:()=>XT,createVertexShader:()=>jT,downloadByteEncodedFloatMatrixFromOutputTexture:()=>ak,downloadFloat32MatrixFromBuffer:()=>ik,downloadMatrixFromPackedOutputTexture:()=>uk,downloadPackedMatrixFromBuffer:()=>lk,getInternalFormatForFloat16MatrixTexture:()=>Rw,getInternalFormatForFloat16PackedMatrixTexture:()=>Pw,getInternalFormatForFloat32MatrixTexture:()=>Dw,getInternalFormatForPackedMatrixTexture:()=>Ow,getInternalFormatForUnsignedBytesMatrixTexture:()=>Fw,uploadDenseMatrixToTexture:()=>nk,uploadPixelDataToTexture:()=>ok});function jT(r){let t=We(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return ET(r,e)}function XT(r){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return DT(r,t)}function YT(r){let t=new Uint16Array([0,1,2,2,1,3]);return RT(r,t)}function eg(r,t,e,n,o,s){OT(t,e);let i=FT(r),a=r.TEXTURE_2D;return ht(r,()=>r.bindTexture(a,i)),ht(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),ht(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),ht(r,()=>r.texParameteri(a,r.TEXTURE_MIN_FILTER,r.NEAREST)),ht(r,()=>r.texParameteri(a,r.TEXTURE_MAG_FILTER,r.NEAREST)),M().getNumber("WEBGL_VERSION")===1?ht(r,()=>r.texImage2D(a,0,n,t,e,0,o,s,null)):ht(r,()=>r.texStorage2D(a,1,n,t,e)),ht(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function Dw(r){return r.internalFormatFloat}function ZT(r,t,e,n){let[o,s]=zc(t,e);return eg(r,o,s,Dw(n),n.textureFormatFloat,r.FLOAT)}function Rw(r){return r.internalFormatHalfFloat}function JT(r,t,e,n){let[o,s]=zc(t,e);return eg(r,o,s,Rw(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function Fw(r){return r.downloadTextureFormat}function QT(r,t,e,n){let[o,s]=zc(t,e);return eg(r,o,s,Fw(n),r.RGBA,r.UNSIGNED_BYTE)}function Ow(r){return r.internalFormatPackedFloat}function tk(r,t,e,n){let[o,s]=Ji(t,e);return eg(r,o,s,Ow(n),r.RGBA,r.FLOAT)}function Pw(r){return r.internalFormatPackedHalfFloat}function ek(r,t,e,n){let[o,s]=Ji(t,e);return eg(r,o,s,Pw(n),r.RGBA,n.textureTypeHalfFloat)}function rk(r,t,e){return ht(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),Iw(r,t,"clipSpacePos",e,3,20,0)&&Iw(r,t,"uv",e,2,20,12)}function nk(r,t,e,n,o,s){ht(r,()=>r.bindTexture(r.TEXTURE_2D,t));let i,a,u;o instanceof Uint8Array?(i=new Uint8Array(e*n*4),a=r.UNSIGNED_BYTE,u=r.RGBA):(i=new Float32Array(e*n*4),a=r.FLOAT,u=s.internalFormatPackedFloat),i.set(o),M().getNumber("WEBGL_VERSION")===2?ht(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e,n,r.RGBA,a,i)):ht(r,()=>r.texImage2D(r.TEXTURE_2D,0,u,e,n,0,r.RGBA,a,i)),ht(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function ok(r,t,e){ht(r,()=>r.bindTexture(r.TEXTURE_2D,t)),e.data instanceof Uint8Array?M().getNumber("WEBGL_VERSION")===2?ht(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e.width,e.height,r.RGBA,r.UNSIGNED_BYTE,e.data)):ht(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e.width,e.height,0,r.RGBA,r.UNSIGNED_BYTE,e.data)):M().getNumber("WEBGL_VERSION")===2?ht(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,e)):ht(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e)),ht(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function sk(r,t,e,n){let o=r.createBuffer();ht(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let a=4*4*t*e;return ht(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,a,r.STREAM_READ)),ht(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,0)),ht(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function ik(r,t,e){let n=r,o=new Float32Array(e);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function ak(r,t,e,n){let[o,s]=zc(t,e),i=4,a=new Uint8Array(YP(t*e,i));return ht(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function lk(r,t,e,n,o,s,i,a){let u=r,l=new Float32Array(ZP(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function uk(r,t,e){let n=new Float32Array(t*e*4);return ht(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,n)),n}var Gc=class{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let e=M().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,ST(e,t)):this.gl=Wn(e),t=this.gl,M().getNumber("WEBGL_VERSION")===2){let s=t;this.createVertexArray=()=>ht(s,()=>s.createVertexArray()),this.bindVertexArray=i=>ht(s,()=>s.bindVertexArray(i)),this.deleteVertexArray=i=>ht(s,()=>s.deleteVertexArray(i)),this.getVertexArray=()=>ht(s,()=>s.getParameter(s.VERTEX_ARRAY_BINDING))}else if(t!=null){let s=t.getExtension("OES_vertex_array_object");if(s==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ht(t,()=>s.createVertexArrayOES()),this.bindVertexArray=i=>ht(t,()=>s.bindVertexArrayOES(i)),this.deleteVertexArray=i=>ht(t,()=>s.deleteVertexArrayOES(i)),this.getVertexArray=()=>ht(t,()=>t.getParameter(s.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),M().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=fd(this.gl,s),Un(this.gl,i))this.textureHalfFloatExtension=fd(this.gl,i);else if(M().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Un(this.gl,o))this.colorBufferHalfFloatExtension=fd(this.gl,o);else if(M().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Un(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Un(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=XT(this.gl),this.indexBuffer=YT(this.gl),this.framebuffer=PT(this.gl),this.textureConfig=Zh(this.gl,this.textureHalfFloatExtension)}get debug(){return M().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;ht(t,()=>t.finish()),ht(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),ht(t,()=>t.deleteFramebuffer(this.framebuffer)),ht(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),ht(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),ht(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),ZT(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),JT(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),QT(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),ok(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,o){this.throwIfDisposed(),nk(this.gl,t,e,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),ek(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),tk(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(vw(this.gl,this.framebuffer),this.outputTexture=null),ht(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>ak(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,o,s,i){return lk(this.gl,t,e,n,o,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return ik(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);let o=sk(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(M().getBool("WEBGL_FENCE_API_ENABLED")){let o=t,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{let i=o.clientWaitSync(s,0,0);return i===o.ALREADY_SIGNALED||i===o.CONDITION_SATISFIED},e=s}else M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>uk(this.gl,e,n))}createProgram(t){this.throwIfDisposed();let e=this.gl;this.vertexShader==null&&(this.vertexShader=jT(e));let n=AT(e);ht(e,()=>e.attachShader(n,this.vertexShader)),ht(e,()=>e.attachShader(n,t)),$T(e,n);let o;return o=Object.assign(n,{vao:this.createVertexArray()}),this.bindVertexArray(o.vao),ht(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(rk(e,o,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&Jh(e,o),this.setProgram(o),o}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(ht(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&(this.bindVertexArray(this.program.vao),this.debug&&Jh(this.gl,this.program)),ht(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?LT(this.gl,t,e):MT(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),ht(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),zT(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();let[o,s]=Ji(e,n);this.setOutputMatrixTextureDriver(t,o,s)}setOutputMatrixWriteRegion(t,e,n,o){this.setOutputMatrixWriteRegionDriver(n,t,o,e)}setOutputPackedMatrixWriteRegion(t,e,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Jh(this.gl,this.program),dd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ht(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ht(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=fd(this.gl,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,n=this.getQueryTimerExtensionWebGL2();e.endQuery(n.TIME_ELAPSED_EXT);return}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await y.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){let n=this.gl;return n.getQueryParameter(t,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(t,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(t,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(t,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=cet(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:n}=this.itemsToPoll[e];n()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in M().platform&&(n=M().platform.setTimeoutCustom.bind(M().platform)),y.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Qh(this.gl,t,this.framebuffer),this.debug&&dd(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Qh(this.gl,this.outputTexture,this.framebuffer),this.debug&&dd(this.gl)):vw(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();let o=this.gl;Qh(o,t,this.framebuffer),this.debug&&dd(o),this.outputTexture=t,ht(o,()=>o.viewport(0,0,e,n)),ht(o,()=>o.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,o){this.throwIfDisposed(),ht(this.gl,()=>this.gl.scissor(t,e,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function cet(r){let t=0;for(;t<r.length&&r[t]();++t);return t-1}var{addImpl:pL,bincountImpl:Lw,bincountReduceImpl:mL,castImpl:fL,ceilImpl:dL,concatImpl:hL,equalImpl:gL,expImpl:xL,expm1Impl:yL,floorImpl:bL,gatherNdImpl:wL,gatherV2Impl:CL,greaterImpl:IL,greaterEqualImpl:vL,lessImpl:SL,lessEqualImpl:NL,linSpaceImpl:TL,logImpl:kL,maxImpl:EL,maximumImpl:_L,minimumImpl:AL,multiplyImpl:$L,negImpl:DL,notEqualImpl:RL,prodImpl:FL,raggedGatherImpl:OL,raggedRangeImpl:PL,raggedTensorToTensorImpl:LL,rangeImpl:ML,rsqrtImpl:zL,scatterImpl:BL,sigmoidImpl:VL,simpleAbsImpl:Mw,sliceImpl:GL,sparseFillEmptyRowsImpl:WL,sparseReshapeImpl:UL,sparseSegmentReductionImpl:zw,sqrtImpl:HL,stridedSliceImpl:qL,stringNGramsImpl:KL,stringSplitImpl:jL,stringToHashBucketFastImpl:XL,subImpl:YL,tileImpl:ZL,topKImpl:JL,transposeImpl:Wc,uniqueImpl:QL}=mw;function pk(r,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${r}.${e}`)}function er(r,t){return t===1?[r]:pk(r,t)}function tM(r,t){if(r===1)return"rc";let e="";for(let n=0;n<r;n++)e+=t[n],n<r-1&&(e+=",");return e}var Bw=class{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Ce(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=er("rc",this.rank),n=Vt(this.rank),o=this.getOutOfBoundsCondition(e),s=this.getSetup(e),i=this.getOutput(e);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(t){let e=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)s=`${t[t.length-1-i]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";let e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(t){let e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}};var Sd=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Ce(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2===1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${pet(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?yd():xd(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${n}

        setOutput(result);
      }
    `}};function pet(r,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?rL(["r","c","d"],"inputShape"):ei(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var Vw=class{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){let o=rM(e,n),s=nM(t,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let i=eM(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let u=this.freeTextures[s].shift();return this.usedTextures[s].push(u),u}let a;return o===Lr.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):o===Lr.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):o===Lr.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):o===Lr.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):o===Lr.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,n,o){if(this.freeTextures==null)return;let s=rM(n,o),i=nM(e,s,o);i in this.freeTextures||(this.freeTextures[i]=[]);let a=eM(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),u=M().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;let l=this.usedTextures[i],c=l.indexOf(t);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function met(r,t){let e=r;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===r.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function eM(r,t,e,n,o){let s=fet(t,n),i;if(o){let[u,l]=Ji(r[0],r[1]);i=u*l}else{let[u,l]=zc(r[0],r[1]);i=u*l}let a=met(e,s);return i*a}function fet(r,t){switch(r){case Lr.PACKED_2X2_FLOAT32:return Ow(t);case Lr.PACKED_2X2_FLOAT16:return Pw(t);case Lr.UNPACKED_FLOAT32:return Dw(t);case Lr.UNPACKED_FLOAT16:return Rw(t);case Lr.PACKED_4X1_UNSIGNED_BYTE:return Fw(t);default:throw new Error(`Unknown physical texture type ${r}`)}}function det(r){return M().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?Lr.PACKED_2X2_FLOAT32:Lr.UNPACKED_FLOAT32:r?Lr.PACKED_2X2_FLOAT16:Lr.UNPACKED_FLOAT16}function rM(r,t){if(r===Yr.UPLOAD)return Lr.PACKED_2X2_FLOAT32;if(r===Yr.RENDER||r==null)return det(t);if(r===Yr.DOWNLOAD||r===Yr.PIXELS)return Lr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function nM(r,t,e){return`${r[0]}_${r[1]}_${t}_${e}`}var Mr=class{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Ce(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},xr="if (isnan(x)) return x;",oM="return x;",mk="return abs(x);";var sM="return (x >= 0.0) ? x : (exp(x) - 1.0);",iM=xr+`
  return (x < 0.0) ? 0.0 : x;
`,aM=xr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Qi="return x;",lM="return 1.0 / (1.0 + exp(-1.0 * x));";var cM="return x;",pM=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,mM=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,fM=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,dM="return 1.0 / (1.0 + exp(-1.0 * x));",_n=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Ce(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var Gw=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=Ce(this.outputShape.length);let e=t.length,n=er("rc",e),o=Vt(e),s=tM(e,n),i=n.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}};var get=qr.whereImpl,xet=1e-7,yet=1e-4,Ww={};function bet(r){return r in Ww||(Ww[r]={}),Ww[r]}var wet=M().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Cet=600;function Iet(){return M().global.screen==null?1024:M().global.screen.height*M().global.screen.width*window.devicePixelRatio*Cet/1024/1024}var Su=class extends zo{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!M().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Gc)e=t;else{let n=Wn(M().getNumber("WEBGL_VERSION"),t);e=new Gc(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Wn(M().getNumber("WEBGL_VERSION"));e=new Gc(n),this.binaryCache=bet(M().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Vw(this.gpgpu),this.numMBBeforeWarning=Iet(),this.texData=new ia(this,Ln())}nextDataId(){return Su.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,n,o,s,i){let a=this.makeTensorInfo(e,n),u=this.texData.get(a.dataId);u.isPacked=!1,u.texture={texture:t,texShape:[o,s]},u.texShape=[o,s];let l=hd(e),c=new tg(l,!1,i),p=this.runWebGLProgram(c,[a],n,[[o,s]]);return p.shape=e,u.texture=null,this.disposeIntermediateTensorInfo(a),p.dataId}write(t,e,n){if((M().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||M().getBool("DEBUG"))&&this.checkNumericalProblems(t),n==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let o={id:this.nextDataId()};return this.texData.set(o,{shape:e,dtype:n,values:t,usage:Yr.UPLOAD,refCount:1}),o}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){let e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){let e=this.texData.get(t);e.refCount--}}move(t,e,n,o,s){if(M().getBool("DEBUG")&&this.checkNumericalProblems(e),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:o,values:e,usage:Yr.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){let e=this.texData.get(t),{values:n,dtype:o,complexTensorInfos:s,slice:i,shape:a,isPacked:u}=e;if(i!=null){let m;u?m=new _n(a,Qi):m=new Mr(a,Qi);let f=this.runWebGLProgram(m,[{dataId:t,shape:a,dtype:o}],o),d=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),d}if(n!=null)return this.convertAndCacheOnCPU(t);if(o==="string")return n;let l=this.activeTimers!=null,c;l&&(c=y.now());let p;if(o==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);p=S.mergeRealAndImagArrays(m,f)}else p=this.getValuesFromTexture(t);return l&&(this.downloadWaitMs+=y.now()-c),this.convertAndCacheOnCPU(t,p)}async read(t){if(this.pendingRead.has(t)){let d=this.pendingRead.get(t);return new Promise(h=>d.push(h))}let e=this.texData.get(t),{values:n,shape:o,slice:s,dtype:i,complexTensorInfos:a,isPacked:u}=e;if(s!=null){let d;u?d=new _n(o,Qi):d=new Mr(o,Qi);let h=this.runWebGLProgram(d,[{dataId:t,shape:o,dtype:i}],i),g=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),g}if(n!=null)return this.convertAndCacheOnCPU(t);if(M().getBool("DEBUG")&&!M().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&M().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(i!=="complex64"&&M().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(t);let d=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(d.texture.texture,...Yh(o))}this.pendingRead.set(t,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(i==="complex64"){let d=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),h=d[0],g=d[1];p=S.mergeRealAndImagArrays(h,g)}else if(l==null)p=this.getValuesFromTexture(t);else{let d=y.sizeFromShape(o);p=this.gpgpu.downloadFloat32MatrixFromBuffer(l,d)}if(c!=null&&this.disposeIntermediateTensorInfo(c),l!=null){let d=this.gpgpu.gl;ht(d,()=>d.deleteBuffer(l))}let m=this.convertAndCacheOnCPU(t,p),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach(d=>d(m)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Ln().removeDataId(t,this),this.pendingDeletes--),m}readToGPU(t,e={}){let n=this.texData.get(t),{values:o,shape:s,slice:i,dtype:a,isPacked:u,texture:l}=n;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let f;u?f=new _n(s,Qi):f=new Mr(s,Qi);let d=this.runWebGLProgram(f,[{dataId:t,shape:s,dtype:a}],a),h=this.readToGPU(d,e);return this.disposeIntermediateTensorInfo(d),h}if(l==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let c=this.decode(t,e.customTexShape),p=Ln().makeTensorFromTensorInfo(c),m=this.texData.get(c.dataId);return Object.assign({tensorRef:p},m.texture)}bufferSync(t){let e=this.readSync(t.dataId);if(t.dtype==="string")try{let n=e.map(o=>y.decodeString(o));return bt(t.shape,t.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return bt(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){let n=t[e];if(!kT(n))throw M().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(t){let{shape:e,dtype:n,isPacked:o}=this.texData.get(t),s=y.sizeFromShape(e);if(M().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(t),f=this.texData.get(m.dataId),d=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...Yh(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),d}let i=M().getBool("WEBGL_PACK")&&o===!0,a=i?hd(e):e,u=i?new Aw(a):new _w(a),l=this.runWebGLProgram(u,[{shape:a,dtype:n,dataId:t}],"float32"),c=this.texData.get(l.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),p}timerAvailable(){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){let e=this.activeTimers,n=[],o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,t();let s=y.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=y.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=e,o&&(this.programTimersStack=null);let a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=await Promise.all(s);a.kernelMs=y.sum(u),a.getExtraProfileInfo=()=>u.map((l,c)=>({name:i[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:y.now(),endMs:null}}endTimer(t){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=y.now(),t)}async getQueryTime(t){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);let e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);let{complexTensorInfos:n}=this.texData.get(t);return n!=null&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){let{texture:e,dtype:n,texShape:o,usage:s,isPacked:i,slice:a}=this.texData.get(t),u=a&&a.origDataId||t,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),e!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(e,o,s,i)));let c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=wet){return M().getBool("WEBGL_CPU_FORWARD")&&t.every(n=>this.texData.get(n.dataId).texture==null&&y.sizeFromShape(n.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){S.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let e=t.dataSync();return get(t.shape,e)}packedUnaryOp(t,e,n){let o=new _n(t.shape,e),s=this.compileAndRun(o,[t],n);return Ln().makeTensorFromTensorInfo(s)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){let o=Mw(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,o)}if(M().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,mk,t.dtype);let e=new Mr(t.shape,mk),n=this.compileAndRun(e,[t]);return Ln().makeTensorFromTensorInfo(n)}makeTensorInfo(t,e,n){let o;if(e==="string"&&n!=null&&n.length>0&&y.isString(n[0])){let s=n.map(i=>y.encodeString(i));o=this.write(s,t,e)}else o=this.write(n,t,e);return this.texData.get(o).usage=null,{dataId:o,shape:t,dtype:e}}makeOutput(t,e,n){return Ln().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,n),this)}unpackTensor(t){let e=new Gw(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){let e=new Bw(t.shape),n=!0;return this.runWebGLProgram(e,[t],t.dtype,null,n)}packedReshape(t,e){let n=[wl(t.shape),...Cl(t.shape)],o={dtype:t.dtype,shape:n,dataId:t.dataId},s=[wl(e),...Cl(e)],i=new Sd(s,n),a=!0,u=[n],l=this.runWebGLProgram(i,[o],t.dtype,u,a);return{dataId:l.dataId,shape:e,dtype:l.dtype}}decode(t,e){let n=this.texData.get(t),{isPacked:o,shape:s,dtype:i}=n;if(e!=null){let m=y.sizeFromShape(s),f=e[0]*e[1]*4;y.assert(m<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let a=hd(s),u;o?u=new Ew(a):u=new kw(a);let l=!0,c=[e!=null?e:Yh(a)],p=this.runWebGLProgram(u,[{shape:a,dtype:i,dataId:t}],i,c,l,e);return{dtype:i,shape:s,dataId:p.dataId}}runWebGLProgram(t,e,n,o,s=!1,i){let a=this.makeTensorInfo(t.outputShape,n),u=this.texData.get(a.dataId);if(t.packedOutput&&(u.isPacked=!0),t.outPackingScheme===Iu.DENSE){let x=i!=null?i:Yh(t.outputShape);u.texShape=x.map(b=>b*2)}if(t.outTexUsage!=null&&(u.usage=t.outTexUsage),y.sizeFromShape(a.shape)===0)return u.values=y.getTypedArrayFromDType(a.dtype,0),a;let l=[],c=e.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(x.dataId);if(b.texture==null){if(!t.packedInputs&&y.sizeFromShape(x.shape)<=M().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!b.isPacked!=!!t.packedInputs)x=b.isPacked?this.unpackTensor(x):this.packTensor(x),l.push(x),b=this.texData.get(x.dataId);else if(b.isPacked&&!vu(b.shape,x.shape)){let w=x,C=x.shape;x.shape=b.shape,x=this.packedReshape(x,C),l.push(x),b=this.texData.get(x.dataId),w.shape=C}return{shape:x.shape,texData:b,isUniform:!1}});this.uploadToGPU(a.dataId);let p={shape:a.shape,texData:u,isUniform:!1},m=cL(t,c,p),f=this.getAndSaveBinary(m,()=>lL(this.gpgpu,t,c,p)),d=this.activeTimers!=null,h;d&&(h=this.startTimer()),M().get("ENGINE_COMPILE_ONLY")||uL(this.gpgpu,f,c,p,o),l.forEach(x=>this.disposeIntermediateTensorInfo(x)),d&&(h=this.endTimer(h),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(h)}));let g=M().get("WEBGL_FLUSH_THRESHOLD");if(g>0){let x=y.now();x-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!M().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&s===!1){let x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(t,e,n,o,s=!1){return n=n||e[0].dtype,this.runWebGLProgram(t,e,n,o,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(M().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=B(()=>{if(!M().get("WEBGL_RENDER_FLOAT32_ENABLED")){let t=M().getBool("DEBUG");M().set("DEBUG",!1);let e=this.abs(pt(1e-8)).dataSync()[0];if(M().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?xet:yet}uploadToGPU(t){let e=this.texData.get(t),{shape:n,dtype:o,values:s,texture:i,usage:a,isPacked:u}=e;if(i!=null)return;let l=this.activeTimers!=null,c;l&&(c=y.now());let p=e.texShape;if(p==null&&(p=BT(n,u),e.texShape=p),s!=null){let m=hd(n),f,d=p[1],h=p[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(u||!g)&&([d,h]=Ji(p[0],p[1])),u?f=new $w(m,g):f=new tg(m,g);let x=g?[h,d]:p,b=this.makeTensorInfo(x,o),w=this.texData.get(b.dataId);g?w.usage=Yr.PIXELS:w.usage=Yr.UPLOAD,w.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),d,h,s);let C=[[h,d]],N=!0,_=this.runWebGLProgram(f,[b],o,C,N),A=this.texData.get(_.dataId);e.texShape=A.texShape,e.isPacked=A.isPacked,e.usage=A.usage,M().get("ENGINE_COMPILE_ONLY")?this.disposeData(_.dataId):(e.texture=A.texture,e.values=null,this.texData.delete(_.dataId)),this.disposeIntermediateTensorInfo(b),l&&(this.uploadWaitMs+=y.now()-c)}else{let m=this.acquireTexture(p,a,o,u);e.texture=m}}convertAndCacheOnCPU(t,e){let n=this.texData.get(t),{dtype:o}=n;return e!=null&&(n.values=vet(e,o)),n.values}acquireTexture(t,e,n,o){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,o)}computeBytes(t,e){return t[0]*t[1]*y.bytesPerElement(e)}checkCompileCompletion(){for(let[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){let t=[];if(this.gpgpu.parallelCompilationExtension){for(let[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(let[,e]of Object.entries(this.binaryCache)){let n=new Promise(o=>{try{this.checkCompletion_(e),o(!0)}catch(s){throw s}});t.push(n)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await yh(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Cw(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,t]of Object.entries(this.binaryCache)){let{uniformLocations:e,customUniformLocations:n,infLoc:o,nanLoc:s,inShapesLocations:i,inTexShapesLocations:a,outShapeLocation:u,outShapeStridesLocation:l,outTexShapeLocation:c}=KT(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=n,t.infLoc=o,t.nanLoc=s,t.inShapesLocations=i,t.inTexShapesLocations=a,t.outShapeLocation=u,t.outShapeStridesLocation=l,t.outTexShapeLocation=c}}createTensorFromGPUData(t,e,n){t.channels=t.channels||"RGBA";let{texture:o,height:s,width:i,channels:a}=t,u=Ln().backend;if(!u.gpgpu.gl.isTexture(o))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=u.writeTexture(o,e,n,s,i,a);return Ln().makeTensorFromDataId(l,e,n,u)}};Su.nextDataId=0;function vet(r,t){if(t==="float32"||t==="complex64")return r;if(t==="int32"||t==="bool"){let e=t==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<e.length;++n)e[n]=Math.round(r[n]);return e}else throw new Error(`Unknown dtype ${t}`)}var hM="4.2.0";function gM(){M().set("WEBGL_FORCE_F16_TEXTURES",!0)}Xl.isBrowser()&&Yp("webgl",()=>new Su,2);var g1e={forceHalfFloat:gM};var Nd=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var ao=class{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=S.assertAndGetBroadcastShape(e,n),this.enableShapeUniforms=Ce(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var ta=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;var Oo=class{constructor(t,e,n,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=S.assertAndGetBroadcastShape(e,n);let s=this.outputShape.length;this.enableShapeUniforms=Ce(s);let i="";if(o)if(s===0||y.sizeFromShape(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${Vt(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let u=er("coords",s);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${u[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${u[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}};function rr(r){let{inputs:t,backend:e}=r,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var xM={kernelName:po,backendName:"webgl",kernelFunc:rr};function An(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.makeTensorInfo(n.shape,"complex64"),i=e.texData.get(s.dataId),a=rr({inputs:{x:n},backend:e}),u=rr({inputs:{x:o},backend:e});return i.complexTensorInfos={real:a,imag:u},s}var yM={kernelName:mp,backendName:"webgl",kernelFunc:An};var fk="return (a < 0.) ? b * a : a;",dk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Net(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n,i=e.makeTensorInfo([],"float32",y.createScalarValue(s,"float32")),a=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Oo(dk,o.shape,i.shape):new ao(fk,o.shape,i.shape),u=e.runWebGLProgram(a,[o,i],"float32");return e.disposeIntermediateTensorInfo(i),u}var bM={kernelName:is,backendName:"webgl",kernelFunc:Net};var hk="return (a < 0.) ? b * a : a;",gk=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Tet(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Oo(gk,n.shape,o.shape):new ao(hk,n.shape,o.shape);return e.runWebGLProgram(s,[n,o],"float32")}var wM={kernelName:bs,backendName:"webgl",kernelFunc:Tet};var Po="if (isnan(x)) return x;";function wt({opSnippet:r,packedOpSnippet:t,cpuKernelImpl:e,dtype:n}){return({inputs:o,backend:s})=>{let{x:i}=o,a=s,u=n||i.dtype;if(a.shouldExecuteOnCPU([i])&&e!=null){let p=a.texData.get(i.dataId),m=e(p.values,u);return a.makeTensorInfo(i.shape,u,m)}let l=M().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return l?c=new _n(i.shape,t):c=new Mr(i.shape,r),a.runWebGLProgram(c,[i],u)}}function ae({opSnippet:r,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:i,backend:a})=>{let{a:u,b:l}=i,c=a;if(n&&u.dtype==="complex64"){let d=c.texData.get(u.dataId),h=c.texData.get(l.dataId),[g,x]=[[d.complexTensorInfos.real,h.complexTensorInfos.real],[d.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(w=>{let[C,N]=w,_={dataId:C.dataId,dtype:C.dtype,shape:u.shape},A={dataId:N.dataId,dtype:N.dtype,shape:l.shape},$=new ao(r,u.shape,l.shape);return c.runWebGLProgram($,[_,A],lr(C.dtype,N.dtype))}),b=An({inputs:{real:g,imag:x},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(x),b}let p=s||lr(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||c.shouldExecuteOnCPU([u,l]))&&o!=null){let d=c.texData.get(u.dataId).values,h=c.texData.get(l.dataId).values,g=u.dtype==="string"?S.fromUint8ToStringArray(d):d,x=u.dtype==="string"?S.fromUint8ToStringArray(h):h,[b,w]=o(u.shape,l.shape,g,x,p),C=c.makeTensorInfo(w,p),N=c.texData.get(C.dataId);return N.values=b,C}let m=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,f;return m?f=new Oo(t,u.shape,l.shape,e):f=new ao(r,u.shape,l.shape),c.runWebGLProgram(f,[u,l],p)}}function Il(r,t=!1){if(r==="linear")return t?cM:oM;if(r==="relu")return t?mM:iM;if(r==="elu")return t?pM:sM;if(r==="relu6")return t?fM:aM;if(r==="prelu")return t?gk:hk;if(r==="leakyrelu")return t?dk:fk;if(r==="sigmoid")return t?dM:lM;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Td=class{constructor(t,e,n,o=!1,s=!1,i=!1,a=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Ce(this.outputShape.length);let c=o?t[1]:t[2],p=Math.ceil(c/2),m=o?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",d=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",x="";a&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");let b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let w="rc.x",C="rc.x";t[0]<e[0]?w=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(C=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${C};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${d[0]} * ${h[0]});
          result += (${d[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${x}

        setOutput(result);
      }
    `}};var xk={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},rg=class{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=S.assertAndGetBroadcastShape(e,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var CM="return a * b;";function ng(r){let{inputs:t,backend:e}=r,{a:n,b:o}=t,s=S.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let a=e.texData.get(n.dataId),u=e.texData.get(o.dataId),l=new rg(xk.REAL,n.shape,o.shape),c=new rg(xk.IMAG,n.shape,o.shape),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:n.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:o.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:o.shape}],m=e.runWebGLProgram(l,p,"float32"),f=e.runWebGLProgram(c,p,"float32"),d=An({inputs:{real:m,imag:f},backend:e});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),d}if(e.shouldExecuteOnCPU([n,o])){let a=e.texData.get(n.dataId),u=e.texData.get(o.dataId),[l,c]=$L(n.shape,o.shape,a.values,u.values,s),p=e.makeTensorInfo(c,s),m=e.texData.get(p.dataId);return m.values=l,p}let i;return M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Oo(CM,n.shape,o.shape):i=new ao(CM,n.shape,o.shape),e.runWebGLProgram(i,[n,o],s)}var IM={kernelName:hs,backendName:"webgl",kernelFunc:ng};function vM(r,t,e){let n=[wl(r.shape),...Cl(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[wl(t),...Cl(t)],i=new Sd(s,n),a=!0,u=[n],l=e.runWebGLProgram(i,[o],r.dtype,u,a);return{dataId:l.dataId,shape:t,dtype:l.dtype}}function it(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{shape:s}=n,i=e,a=y.sizeFromShape(o.shape),u=y.inferFromImplicitShape(s,a),l=y.sizeFromShape(u);y.assert(a===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);let c=i.texData.get(o.dataId);return c.isPacked&&!vu(o.shape,u)&&!(c.texture!==null&&vu(c.shape,u))?vM(o,u,i):(i.incRef(o.dataId),{dataId:o.dataId,shape:u,dtype:o.dtype})}var SM={kernelName:gi,backendName:"webgl",kernelFunc:it};var og=class{constructor(t,e){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:i}=t;this.outputShape=[o,i];let a=Math.floor(n/4)*4,u=n%4,l="sumValue += dot(values, ones);";if(e!=null){let p=1/e;l=`sumValue += dot(values * ${y.isInt(p)?p.toPrecision(2):p}, ones);`}let c="";s%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${a};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}};var Uw=class{constructor(t,e){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:i}=t;this.outputShape=[o,i];let a="0.0",u="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",u="min"):e==="max"&&(a="-1.0 / 1e-20",u="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?l="sumValue":e==="prod"?l="prodValue":e==="all"?l="allValue":e==="any"&&(l="anyValue");let c=Math.floor(n/4)*4,p=n%4,m=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";e==="all"?(a="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):e==="any"&&(a="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${l});
      }
    `}};function Eet(r){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let e=t.length?t[t.length-1].outSize:r[1],n=S.computeOptimalWindowSize(e);t.push({inSize:e,windowSize:n,outSize:Math.ceil(e/n)})}return t}function Hn(r,t,e,n){let o=Eet(r.shape),s=r;for(let i=0;i<o.length;i++){let{inSize:a,windowSize:u,outSize:l}=o[i],c,p;e==="mean"?c=i===0?new og({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:l},a):new og({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:l}):c=new Uw({windowSize:u,inSize:a,batchSize:r.shape[0],outSize:l},e),p=s,s=n.runWebGLProgram(c,[s],t),p.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(p)}return s}var Hw=class{constructor(t,e){this.variableNames=["A"];let n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[e[i]];this.outputShape=n,this.rank=n.length;let o=Vt(this.rank),s=_et(e);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function _et(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let o=0;o<r.length;o++)n[r[o]]=e[o];return n.join()}var qw=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(t.length);for(let c=0;c<n.length;c++)n[c]=t[e[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=Vt(this.rank),s=pk("rc",this.rank),i=new Array(this.rank);for(let c=0;c<e.length;c++)i[e[c]]=s[c];let a=`vec2(${i.slice(-2).join()})`,u=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}};function Nu(r,t,e){let n=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qw(r.shape,t):new Hw(r.shape,t);return e.runWebGLProgram(n,[r],r.dtype)}function NM(r,t,e,n){let o=t,s=r.shape.length,i=y.parseAxisParam(o,r.shape),a=i,u=S.getAxesPermutation(a,s),l=u!=null,c=r;l&&(c=Nu(r,u,n),a=S.getInnerMostAxes(a.length,s)),S.assertAxesAreInnerMostDims("sum",a,s);let[p,m]=S.computeOutAndReduceShapes(c.shape,a),f=p;e&&(f=S.expandShapeToKeepDim(p,i));let d=y.sizeFromShape(m),g=y.sizeFromShape(r.shape)/d,x=it({inputs:{x:c},attrs:{shape:[g,d]},backend:n}),b=Bu(r.dtype),w=Hn(x,b,"sum",n),C=it({inputs:{x:w},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),l&&n.disposeIntermediateTensorInfo(c),C}function Uc(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n;return NM(o,s,i,e)}var TM={kernelName:Ds,backendName:"webgl",kernelFunc:Uc};function Pe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{perm:s}=n,i=e,a=o.shape.length,u=new Array(a);for(let c=0;c<u.length;c++)u[c]=o.shape[s[c]];let l;if(i.shouldExecuteOnCPU([o])){let p=i.texData.get(o.dataId).values,m=Wc(p,o.shape,o.dtype,s,u);l=i.makeTensorInfo(u,o.dtype);let f=i.texData.get(l.dataId);f.values=m}else l=Nu(o,s,i);return l}var kM={kernelName:to,backendName:"webgl",kernelFunc:Pe};var yk=1e3;function Hc({a:r,b:t,transposeA:e,transposeB:n,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:u=null}){let l=r.shape.length,c=t.shape.length,p=e?r.shape[l-2]:r.shape[l-1],m=n?t.shape[c-1]:t.shape[c-2],f=e?r.shape[l-1]:r.shape[l-2],d=n?t.shape[c-2]:t.shape[c-1],h=r.shape.slice(0,-2),g=t.shape.slice(0,-2),x=y.sizeFromShape(h),b=y.sizeFromShape(g),C=Wr.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,d]);y.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);let N=e?[x,p,f]:[x,f,p],_=n?[b,d,m]:[b,m,d],A=it({inputs:{x:r},backend:o,attrs:{shape:N}}),$=it({inputs:{x:t},backend:o,attrs:{shape:_}}),F=[A,$],P=Math.max(x,b),V=e?A.shape[1]:A.shape[2],G=s!=null,W=i!=null,q=u==="leakyrelu",H=u!=null?Il(u,!0):null,K=G||W||q||H!=null,X;if((f===1||d===1)&&V>yk&&K===!1){let et=A,rt=$;e&&(et=Pe({inputs:{x:A},backend:o,attrs:{perm:[0,2,1]}}),F.push(et)),n&&(rt=Pe({inputs:{x:$},backend:o,attrs:{perm:[0,2,1]}}),F.push(rt));let ot=d!==1,at=d===1,nt=et;ot&&(nt=it({inputs:{x:et},backend:o,attrs:{shape:[P,V,1]}}),F.push(nt));let st=d===1?2:1,ft=rt;at&&(ft=it({inputs:{x:rt},backend:o,attrs:{shape:[P,1,V]}}),F.push(ft));let gt=ng({inputs:{a:nt,b:ft},backend:o});X=Uc({inputs:{x:gt},backend:o,attrs:{axis:st,keepDims:!0}}),F.push(gt)}else{let et=lr(r.dtype,t.dtype),rt=new Td(N,_,[P,f,d],e,n,G,H,W,q),ot=[A,$];if(s!=null&&ot.push(s),W&&ot.push(i),q){let at=o.makeTensorInfo([],"float32",y.createScalarValue(a,"float32"));ot.push(at),F.push(at)}X=o.runWebGLProgram(rt,ot,et)}let Z=it({inputs:{x:X},backend:o,attrs:{shape:C}});F.push(X);for(let et of F)o.disposeIntermediateTensorInfo(et);return Z}function Aet(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=n;return Hc({a:o,b:s,transposeA:u,transposeB:l,backend:e,bias:i,preluActivationWeights:a,leakyreluAlpha:p,activation:c})}var EM={kernelName:vi,backendName:"webgl",kernelFunc:Aet};var _M="return abs(x);";function $et(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=e.texData.get(n.dataId),i=Mw(s.values);return e.makeTensorInfo(n.shape,n.dtype,i)}let o;return M().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new _n(n.shape,_M):o=new Mr(n.shape,_M),e.runWebGLProgram(o,[n],n.dtype)}var AM={kernelName:li,backendName:"webgl",kernelFunc:$et};var Det=xr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,Ret=wt({opSnippet:Det}),$M={kernelName:la,backendName:"webgl",kernelFunc:Ret};var Fet=xr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Oet=wt({opSnippet:Fet}),DM={kernelName:ua,backendName:"webgl",kernelFunc:Oet};var RM="return a + b;",Pet=ae({opSnippet:RM,packedOpSnippet:RM,supportsComplex:!0,cpuKernelImpl:pL}),FM={kernelName:Jn,backendName:"webgl",kernelFunc:Pet};var Kw=class{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((s,i)=>`T${i}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var jw=class{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((s,i)=>`T${i}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function Xw(r){let{inputs:t,backend:e}=r,n=t;if(n.length===1)return rr({inputs:{x:n[0]},backend:e});if(n.length>M().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(n.length/2),l=Xw({inputs:n.slice(0,u),backend:e}),c=Xw({inputs:n.slice(u),backend:e});return Xw({inputs:[l,c],backend:e})}let o=n.map(u=>u.dtype).reduce((u,l)=>lr(u,l)),s=n.map(u=>u.shape),a=M().getBool("WEBGL_PACK")?new jw(n[0].shape,s):new Kw(n[0].shape,s);return e.runWebGLProgram(a,n,o)}var OM={kernelName:Vo,backendName:"webgl",kernelFunc:Xw};function Let(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n,a=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,c=S.getAxesPermutation(l,a),p=o;c!=null&&(p=Pe({inputs:{x:o},backend:e,attrs:{perm:c}}),l=S.getInnerMostAxes(l.length,a)),S.assertAxesAreInnerMostDims("all",l,a);let[m,f]=S.computeOutAndReduceShapes(p.shape,l),d=y.sizeFromShape(f),h=it({inputs:{x:p},backend:e,attrs:{shape:[-1,d]}}),g=Hn(h,h.dtype,"all",e),x;if(i){let b=S.expandShapeToKeepDim(m,u);x=it({inputs:{x:g},backend:e,attrs:{shape:b}})}else x=it({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),c!=null&&e.disposeIntermediateTensorInfo(p),x}var PM={kernelName:ca,backendName:"webgl",kernelFunc:Let};function Met(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n,a=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,c=S.getAxesPermutation(l,a),p=o;c!=null&&(p=Pe({inputs:{x:o},backend:e,attrs:{perm:c}}),l=S.getInnerMostAxes(l.length,a)),S.assertAxesAreInnerMostDims("any",l,a);let[m,f]=S.computeOutAndReduceShapes(p.shape,l),d=y.sizeFromShape(f),h=it({inputs:{x:p},backend:e,attrs:{shape:[-1,d]}}),g=Hn(h,h.dtype,"any",e),x;if(i){let b=S.expandShapeToKeepDim(m,u);x=it({inputs:{x:g},backend:e,attrs:{shape:b}})}else x=it({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),c!=null&&e.disposeIntermediateTensorInfo(p),x}var LM={kernelName:pa,backendName:"webgl",kernelFunc:Met};var Yw=class{constructor(t,e,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];let a=e==="max"?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var Zw=class{constructor(t,e,n,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,y.assert(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),o||this.variableNames.push("bestIndicesA");let a=this.outputShape,u=a.length,l=Vt(u),c=er("coords",u),p,m;if(i===1){m=u+1;let $=Vt(m);p=`
        ${$} sourceLocR = ${$}(${c.join()}, 0);
        ++${c[u-1]};
        ${$} sourceLocG = ${$}(${c.join()}, 0);
        ++${c[u-2]};
        ${$} sourceLocA = ${$}(${c.join()}, 0);
        --${c[u-1]};
        ${$} sourceLocB = ${$}(${c.join()}, 0);
        --${c[u-2]};`}else m=u,p=`
        ${l} sourceLocR = coords;
        ++${c[u-1]};
        ${l} sourceLocG = coords;
        ++${c[u-2]};
        ${l} sourceLocA = coords;
        --${c[u-1]};
        ${l} sourceLocB = coords;
        --${c[u-2]};`;let f=["x","y","z","w","u","v"].slice(0,m),d="."+f[m-1],h=f.map($=>"int "+$),g=er("sourceLocR",m-1).concat("inIdx.r"),x=er("sourceLocG",m-1).concat("inIdx.g"),b=er("sourceLocB",m-1).concat("inIdx.b"),w=er("sourceLocA",m-1).concat("inIdx.a"),C=n==="max"?"greaterThan":"lessThan",N=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${w.join()})));`,_=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,A=o?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${A}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[u-1]} < ${a[u-1]-1};
        bool hasNextRow = ${c[u-2]} < ${a[u-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},
          sourceLocB${d}, sourceLocA${d}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${_};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${N}
          vec4 candidate = ${_};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${C}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function MM(r,t,e,n=null){let o=t.shape[0],s=t.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let i=S.computeOptimalWindowSize(s),a={windowSize:i,inSize:s,batchSize:o,outSize:Math.ceil(s/i)},u=new Yw(a,e,n==null),l=[t];n!=null&&l.push(n);let c=r.runWebGLProgram(u,l,"int32");if(c.shape[1]===1)return c;let p=MM(r,t,e,c);return r.disposeIntermediateTensorInfo(c),p}function zM(r,t,e,n=null){let o=n!=null?n.shape:t.shape,s=o[o.length-1],i=S.computeOptimalWindowSize(s),a=new Zw(o,i,e,n==null),u=n==null?[t]:[t,n],l=r.runWebGLProgram(a,u,"int32");if(l.shape.length===t.shape.length){let c=zM(r,t,e,l);return r.disposeIntermediateTensorInfo(l),c}return l}function Jw(r,t,e,n){let o=[e];if(S.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,t.shape.length),!M().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=r.texData.get(t.dataId),a=i!==null&&i.isPacked,u=t;a&&(u=r.unpackTensor(t),s.push(u));let[l,c]=S.computeOutAndReduceShapes(u.shape,o),p=y.sizeFromShape(c),m=it({inputs:{x:u},backend:r,attrs:{shape:[-1,p]}});s.push(m);let f=MM(r,m,n);s.push(f);let d=it({inputs:{x:f},backend:r,attrs:{shape:l}});return s.forEach(h=>r.disposeIntermediateTensorInfo(h)),d}return zM(r,t,n)}function zet(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,i=y.parseAxisParam(s,o.shape),a=S.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=Pe({inputs:{x:o},backend:e,attrs:{perm:a}}),l.push(u),i=S.getInnerMostAxes(i.length,u.shape.length)),S.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let c=Jw(e,u,i[0],"max");return l.forEach(p=>e.disposeIntermediateTensorInfo(p)),c}var BM={kernelName:Go,backendName:"webgl",kernelFunc:zet};function Bet(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,i=y.parseAxisParam(s,o.shape),a=S.getAxesPermutation(i,o.shape.length),u=o,l=[];a!=null&&(u=Pe({inputs:{x:o},backend:e,attrs:{perm:a}}),l.push(u),i=S.getInnerMostAxes(i.length,u.shape.length)),S.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let c=Jw(e,u,i[0],"min");return l.forEach(p=>e.disposeIntermediateTensorInfo(p)),c}var VM={kernelName:_l,backendName:"webgl",kernelFunc:Bet};var Vet=xr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Get=wt({opSnippet:Vet}),GM={kernelName:ma,backendName:"webgl",kernelFunc:Get};var Wet=xr+"return log(x + sqrt(x * x + 1.0));",Uet=wt({opSnippet:Wet}),WM={kernelName:fa,backendName:"webgl",kernelFunc:Uet};var Het=xr+`
  return atan(x);
`,qet=wt({opSnippet:Het}),UM={kernelName:da,backendName:"webgl",kernelFunc:qet};var Ket=Nd+`
  return atan(a, b);
`,jet=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ta+`
  return result;
`,Xet=ae({opSnippet:Ket,packedOpSnippet:jet}),HM={kernelName:ga,backendName:"webgl",kernelFunc:Xet};var Yet=xr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Zet=wt({opSnippet:Yet}),qM={kernelName:ha,backendName:"webgl",kernelFunc:Zet};var ri=class{constructor(t,e,n,o=!1,s=!1){if(this.variableNames=["x"],e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let i=t.filterWidth,a=t.strideHeight,u=t.strideWidth,l=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterHeight,m=t.effectiveFilterWidth,f=t.padInfo.top,d=t.padInfo.left;this.outputShape=t.outShape;let h=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,x=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,b="0.0";if(h||(b="-1.0 / 1e-20"),n){let $=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${u});
        const ivec2 pads = ivec2(${f}, ${d});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${$} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?g:x:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let w="max",C=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(C="avgValue / max(count, 1.0)");let N=Math.floor(i/4)*4,_=i%4,A=`
      if (${h}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${u});
      const ivec2 pads = ivec2(${f}, ${d});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${N}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${A}
          }

          int xC = xCCorner + ${N};
          if (${_===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${_===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${_===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${A}
          }
        }
        setOutput(${C});
      }
    `}},Tu=class{constructor(t,e,n,o=!1,s=!1){if(this.variableNames=["x"],e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let i=t.filterWidth,a=t.strideDepth,u=t.strideHeight,l=t.strideWidth,c=t.dilationDepth,p=t.dilationHeight,m=t.dilationWidth,f=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,g=t.padInfo.front,x=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;let w=e==="avg",C="0.0";if(w||(C="-1.0 / 1e-20"),n){let P=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${u}, ${l});
        const ivec3 pads = ivec3(${g}, ${x}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${d};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${h};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${P} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${d} * ${h} +
                      wR * ${h} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let N="max",_=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(_="avgValue / max(count, 1.0)");let A=Math.floor(i/4)*4,$=i%4,F=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${N}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${u}, ${l});
      const ivec3 pads = ivec3(${g}, ${x}, ${b});
      const float initializationValue = ${C};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${C});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${A}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${F}
            }

            int xC = xCCorner + ${A};
            if (${$===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${F}
            } else if (${$===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${F}
            } else if (${$===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${F}
            }
          }
        }
        setOutput(${_});
      }
    `}};function Jet(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;ti(o,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;y.assert(S.eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=S.computePool2DInfo(o.shape,s,i,l,a,u);if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))return rr({inputs:{x:o},backend:e});let p=new ri(c,"avg",!1);return e.runWebGLProgram(p,[o],"float32")}var KM={kernelName:Wo,backendName:"webgl",kernelFunc:Jet};function Qet(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=n,c=[1,1,1],p=S.computePool3DInfo(o.shape,s,i,c,a,u,l),m=new Tu(p,"avg",!1);return e.runWebGLProgram(m,[o],"float32")}var jM={kernelName:Al,backendName:"webgl",kernelFunc:Qet};var Qw=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=u-1-t.padInfo.top,p=l-1-t.padInfo.left,m=1/(e*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},tC=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterDepth,n=t.filterHeight,o=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,u=t.dilationDepth,l=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterDepth,m=t.effectiveFilterHeight,f=t.effectiveFilterWidth,d=p-1-t.padInfo.front,h=m-1-t.padInfo.top,g=f-1-t.padInfo.left,x=1/(e*n*o);this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function trt(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,i=s,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=n,p=[1,1,1],m=S.computePool3DInfo(i.shape,a,u,p,l,c),f=new tC(m);return e.runWebGLProgram(f,[o],i.dtype)}var XM={kernelName:up,backendName:"webgl",kernelFunc:trt};function ert(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,i=s;ti([o,s],"avgPoolGrad");let{filterSize:a,strides:u,pad:l}=n,c=S.computePool2DInfo(i.shape,a,u,1,l),p=new Qw(c);return e.runWebGLProgram(p,[o],i.dtype)}var YM={kernelName:lp,backendName:"webgl",kernelFunc:ert};function rrt(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:i,transposeB:a}=n;return Hc({a:o,b:s,transposeA:i,transposeB:a,backend:e})}var ZM={kernelName:Uo,backendName:"webgl",kernelFunc:rrt};var eC=class{constructor(t,e,n,o,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],S.assertAndGetBroadcastShape(t,e),S.assertAndGetBroadcastShape(t,n);let a="0.0";o!=null&&(S.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="1.0";s!=null&&(S.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var rC=class{constructor(t,e,n,o,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],S.assertAndGetBroadcastShape(t,e),S.assertAndGetBroadcastShape(t,n);let a="vec4(0.0)";o!=null&&(S.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="vec4(1.0)";s!=null&&(S.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var nrt=({inputs:r,backend:t,attrs:e})=>{let{x:n,mean:o,variance:s,offset:i,scale:a}=r;y.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=e;u==null&&(u=.001);let l=[n,o,s],c=null;i!=null&&(c=i.shape,l.push(i));let p=null;a!=null&&(p=a.shape,l.push(a));let m=M().getBool("WEBGL_PACK_NORMALIZATION")?new rC(n.shape,o.shape,s.shape,c,p,u):new eC(n.shape,o.shape,s.shape,c,p,u);return t.runWebGLProgram(m,l,l[0].dtype)},JM={kernelName:ns,backendName:"webgl",kernelFunc:nrt};var nC=class{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;let e=Vt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=ort(this.rank),o,s=t.map((i,a)=>`sourceLoc.${bk[a]} = start[${a}] + coords.${bk[a]};`);o=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},bk=["x","y","z","w","u","v"];function ort(r){if(r===1)return"sourceLoc";if(r<=6)return bk.slice(0,r).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var oC=class{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let e=Vt(this.rank),n=er("coords",this.rank),o=er("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,i=`getChannel(getSource(${o.join()}), ${s})`,a=`
      result.x = ${i};
      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${i};
        --${o[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${i};
        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${i};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((c,p)=>`start[${p}]`).join()});`:t.map((c,p)=>`${o[p]} = ${n[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${a}
        ${u}
        setOutput(result);
      }
    `}};function srt(r,t,e,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(e,r.dtype),i=n.texData.get(s.dataId);Object.assign(i,o),i.refCount=1,i.shape=e,i.dtype=r.dtype;let a=ze.computeFlatOffset(t,y.computeStrides(r.shape));o.slice&&(a+=o.slice.flatOffset),i.slice={flatOffset:a,origDataId:o.slice&&o.slice.origDataId||r.dataId};let u=n.dataRefCount.get(i.slice.origDataId)||1;return n.dataRefCount.set(i.slice.origDataId,u+1),s}function ni(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:i}=n,[a,u]=ze.parseSliceParams(o,s,i);if(ze.assertParamsValid(o,a,u),y.sizeFromShape(u)===0)return e.makeTensorInfo(u,o.dtype,[]);if(e.shouldExecuteOnCPU([o])||o.dtype==="string"){let p=e.texData.get(o.dataId),m=GL(p.values,a,u,o.shape,o.dtype);return e.makeTensorInfo(u,o.dtype,m)}let{isPacked:l}=e.texData.get(o.dataId),c=ze.isSliceContinous(o.shape,a,u);if(l||!c){let p=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oC(u):new nC(u),m=[a];return e.runWebGLProgram(p,[o],o.dtype,m)}return e.uploadToGPU(o.dataId),srt(o,a,u,e)}var QM={kernelName:yi,backendName:"webgl",kernelFunc:ni};var irt=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:i}=n;y.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((b,w)=>b*w),u=S.getReshaped(o.shape,s,a),l=S.getPermuted(u.length,s.length),c=S.getReshapedPermuted(o.shape,s,a),p=S.getSliceBeginCoords(i,s.length),m=S.getSliceSize(c,i,s.length),f=[],d=it({inputs:{x:o},backend:e,attrs:{shape:u}}),h=Pe({inputs:{x:d},backend:e,attrs:{perm:l}}),g=it({inputs:{x:h},backend:e,attrs:{shape:c}}),x=ni({inputs:{x:g},backend:e,attrs:{begin:p,size:m}});return f.push(d),f.push(h),f.push(g),f.forEach(b=>e.disposeIntermediateTensorInfo(b)),x},tz={kernelName:ui,backendName:"webgl",kernelFunc:irt};function art(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:i}=n,a=e.readSync(o.dataId),u=e.readSync(s.dataId),l=Lw(a,u,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,l)}var ez={kernelName:cp,backendName:"webgl",kernelFunc:art};function lrt(r){let{inputs:t,backend:e}=r,{s0:n,s1:o}=t,s=e.readSync(n.dataId),i=e.readSync(o.dataId),a=S.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var rz={kernelName:pp,backendName:"webgl",kernelFunc:lrt};var urt="return float(a != b);",wk=ae({opSnippet:urt,cpuKernelImpl:RL,dtype:"bool"}),nz={kernelName:Oa,backendName:"webgl",kernelFunc:wk};function vl(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.texData.get(n.dataId);return rr({inputs:{x:o.complexTensorInfos.real},backend:e})}var oz={kernelName:Fp,backendName:"webgl",kernelFunc:vl};var crt="return float(int(x));";function sz(r,t){let e=new Mr(r.shape,crt),n=t.runWebGLProgram(e,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function Ck(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return rr({inputs:{x:o},backend:e});let i=Te(o.shape),a=Ck({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),u=An({inputs:{real:a,imag:i},backend:e});return i.dispose(),e.disposeIntermediateTensorInfo(a),u}if(o.dtype==="complex64"){let i=vl({inputs:{input:o},backend:e}),a=Ck({inputs:{x:i},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(i),a}if(!y.hasEncodingLoss(o.dtype,s)){let i=rr({inputs:{x:o},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(e.shouldExecuteOnCPU([o])){let i=e.texData.get(o.dataId).values,[a,u,l]=fL(i,o.shape,o.dtype,s);return e.makeTensorInfo(a,u,l)}if(s==="int32")return sz(o,e);if(s==="bool"){let i=e.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),u=wk({inputs:{a:o,b:i},backend:e});return e.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var iz={kernelName:uo,backendName:"webgl",kernelFunc:Ck};var az="return ceil(x);",prt=wt({opSnippet:az,packedOpSnippet:az,cpuKernelImpl:dL}),lz={kernelName:Ho,backendName:"webgl",kernelFunc:prt};var sC=class{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var iC=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function mrt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:i}=n,a;M().getBool("WEBGL_PACK_CLIP")?a=new iC(o.shape):a=new sC(o.shape);let u=[[s],[i]];return e.runWebGLProgram(a,[o],o.dtype,u)}var uz={kernelName:co,backendName:"webgl",kernelFunc:mrt};var aC=class{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function cz(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function frt(r){let{inputs:t,backend:e}=r,{x:n}=t,o=e.texData.get(n.dataId),s=new aC(n.shape),i=[cz(n,o.complexTensorInfos.real),cz(n,o.complexTensorInfos.imag)];return e.runWebGLProgram(s,i,i[0].dtype)}var pz={kernelName:$l,backendName:"webgl",kernelFunc:frt};var lC=class{constructor(t){this.outputShape=[],this.outputShape=S.computeOutShape(t,1),this.variableNames=t.map((i,a)=>`T${a}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];let n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){let a=e[i-1];n.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${a}));`)}let o=e.length,s=e[e.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var cC=class{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=S.computeOutShape(t,e);let n=this.outputShape,o=n.length,s=Vt(o),i=er("coords",o),a=["x","y","z","w","u","v"].slice(0,o);this.variableNames=t.map((h,g)=>`T${g}`);let u=new Array(t.length-1);u[0]=t[0][e];for(let h=1;h<u.length;h++)u[h]=u[h-1]+t[h][e];let l=a[e],c=a.slice(-2),p=a.join(),m=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${p}), vec2(${c.join()}));
        }`;for(let h=1;h<u.length;h++){let g=u[h-1];m+=`
        if (${l} < ${u[h]}  && ${l} >= ${u[h-1]}) {
          return getChannel(
            getT${h}(${uC(a,l,g)}),
            vec2(${uC(c,l,g)}));
        }`}let f=u.length,d=u[u.length-1];m+=`
        return getChannel(
          getT${f}(${uC(a,l,d)}),
          vec2(${uC(c,l,d)}));`,this.userCode=`
      float getValue(${a.map(h=>"int "+h)}) {
        ${m}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[o-1]} = ${i[o-1]} + 1;
        if (${i[o-1]} < ${n[o-1]}) {
          result.g = getValue(${i});
        }

        ${i[o-2]} = ${i[o-2]} + 1;
        if (${i[o-2]} < ${n[o-2]}) {
          result.a = getValue(${i});
        }

        ${i[o-1]} = ${i[o-1]} - 1;
        if (${i[o-2]} < ${n[o-2]} &&
            ${i[o-1]} < ${n[o-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}};function uC(r,t,e){let n=r.indexOf(t);return r.map((s,i)=>i===n?`${s} - ${e}`:s).join()}function qc(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.texData.get(n.dataId);return rr({inputs:{x:o.complexTensorInfos.imag},backend:e})}var mz={kernelName:Sp,backendName:"webgl",kernelFunc:qc};function kd(r,t,e){let n=r[0].dtype;if(n==="complex64"){let f=r.map(b=>vl({inputs:{input:b},backend:e})),d=r.map(b=>qc({inputs:{input:b},backend:e})),h=kd(f,t,e),g=kd(d,t,e),x=An({inputs:{real:h,imag:g},backend:e});return f.forEach(b=>e.disposeIntermediateTensorInfo(b)),d.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),x}let o=e.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let f=r.map(C=>{let _=[-1,y.sizeFromShape(C.shape.slice(t))];return it({inputs:{x:C},backend:e,attrs:{shape:_}})}),d=f.map(C=>({vals:e.readSync(C.dataId),shape:C.shape})),h=S.computeOutShape(f.map(C=>C.shape),1),g=f[0].shape[0]===1,x=hL(d,h,n,g),b=S.computeOutShape(r.map(C=>C.shape),t),w=e.makeTensorInfo(b,n,x);return f.forEach(C=>e.disposeIntermediateTensorInfo(C)),w}let s=r.filter(f=>y.sizeFromShape(f.shape)>0),i=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let f=i?new Mr(r[0].shape,Qi):new _n(r[0].shape,Qi);return e.runWebGLProgram(f,r,n)}let a=M().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>a){let f=[];for(let h=0;h<s.length;h+=a){let g=s.slice(h,h+a);f.push(kd(g,t,e))}let d=kd(f,t,e);for(let h of f)e.disposeIntermediateTensorInfo(h);return d}if(i){let f=new cC(s.map(d=>d.shape),t);return e.runWebGLProgram(f,s,n)}let{tensors2D:u,outShape:l}=drt(s,t,e),c=new lC(u.map(f=>f.shape)),p=e.runWebGLProgram(c,u,n);u.forEach(f=>e.disposeIntermediateTensorInfo(f));let m=it({inputs:{x:p},attrs:{shape:l},backend:e});return e.disposeIntermediateTensorInfo(p),m}function drt(r,t,e){let n=S.computeOutShape(r.map(s=>s.shape),t);return{tensors2D:r.map(s=>it({inputs:{x:s},attrs:{shape:[-1,y.sizeFromShape(s.shape.slice(t))]},backend:e})),outShape:n}}function Ik(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=y.parseAxisParam(o,t[0].shape)[0],i=t.map(l=>l.shape);S.assertParamsConsistent(i,s);let a=S.computeOutShape(t.map(l=>l.shape),s);if(y.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let u=t.filter(l=>y.sizeFromShape(l.shape)>0);return u.length===1?rr({inputs:{x:u[0]},backend:e}):kd(u,s,e)}var fz={kernelName:ci,backendName:"webgl",kernelFunc:Ik};var Ed=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;let i=t.padInfo.top,a=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,p=t.dilationWidth,m=t.filterHeight,f=t.filterWidth,d=Math.floor(t.inChannels/4)*4,h=t.inChannels%4,g=t.dataFormat==="channelsLast",x=g?1:2,b=g?2:3,w=g?3:1,C="",N="";n&&(o?C=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?C=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:C=`
          float activation(float x) {
            ${n}
          }
        `,N="result = activation(result);");let _=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${C}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${d}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${h===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${d}) *
                    getW(wR, wC, ${d}, d2);
              } else {
                dotProd +=
                    getX(batch, ${d}, xR, xC) *
                    getW(wR, wC, ${d}, d2);
              }

            } else if (${h===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${h===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2),
                getW(wR, wC, ${d} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1),
                  getX(batch, xR, xC, ${d} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC),
                  getX(batch, ${d} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${_}
        ${N}
        setOutput(result);
      }
    `}},pC=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let e=t.padInfo.front,n=t.padInfo.top,o=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,u=t.dilationDepth,l=t.dilationHeight,c=t.dilationWidth,p=t.filterDepth,m=t.filterHeight,f=t.filterWidth,d=Math.floor(t.inChannels/4)*4,h=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${i}, ${a});
      const ivec3 pads = ivec3(${e}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${d}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${h===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${d}) *
                  getW(wF, wR, wC, ${d}, d2);
              } else if (${h===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${h===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1),
                  getX(batch, xF, xR, xC, ${d} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2),
                  getW(wF, wR, wC, ${d} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var _d=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Ce(this.outputShape.length);let i=t.padInfo.left,a=t.strideWidth,u=t.dilationWidth,l=t.filterHeight,c=t.filterWidth,p=c,m=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)m+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;m+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<c;g++)m+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;m+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(p+1)/2;g++){let x=g*2;if(m+=`
           xC = xCCorner + ${x*u};
           `,a===1){if(x<c&&(i%2===1?(m+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,u===1&&x>0?m+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:m+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):m+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<c)){let b=i%2===0?y.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(m+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,u>1?m+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:m+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):b===1?m+=`
                     xC${x+1} = xTexelC${x};
                     `:m+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<c&&(i%2===1?(m+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<c&&(m+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(m+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<c&&(m+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<c&&(m+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<c&&(m+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}m+=`
     }
   `,m+=`
     }
   `,m+=`
     }
   `;let f="",d="";n&&(o?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:s?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:f=`vec4 activation(vec4 x) {
           ${n}
         }`,d="result = activation(result);");let h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${m}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${h}
         ${d}
         setOutput(result);
       }
     `}};var mC=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=Ce(this.outputShape.length);let{dataFormat:n}=e,o=We(),s=n==="channelsLast",i=s?1:2,a=s?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`,l="";for(let c=0;c<=1;c++)for(let p=0;p<=1;p++)l+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${c};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${o.output} = result;
      }
    `}};function fC(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function dC({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let u=r.shape,l=n.texData.get(r.dataId),c=e.inChannels,p=u[0]*u[1]*u[2],m=e.outChannels,f=e.dataFormat==="channelsLast",d=!1,h=!1,g,x=[];if(s!=null){let C=fC(s.shape,f);C!=null&&(s=it({inputs:{x:s},backend:n,attrs:{shape:C}}),x.push(s))}if(o!=null){let C=fC(o.shape,f);C!=null&&(o=it({inputs:{x:o},backend:n,attrs:{shape:C}}),x.push(o))}if(!((p===1||m===1)&&c>yk)&&l.isPacked&&f&&l.texture!=null&&u[2]%2!==0&&y.arraysEqual(l.shape.slice(-3),u.slice(-3))){let C=u[0]*u[1]*(u[2]+1),N={dataId:r.dataId,shape:[1,C,e.inChannels],dtype:r.dtype},_=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,y.assert(vu(l.shape,N.shape),()=>`packed reshape ${l.shape} to ${N.shape} isn't free`);let A=it({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});x.push(A);let $=Hc({a:N,b:A,backend:n,transposeA:d,transposeB:h,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i}),F=n.texData.get($.dataId);y.assert(F.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=_,F.shape=e.outShape,g=rr({inputs:{x:$},backend:n}),g.shape=e.outShape,x.push($)}else{let C=e.outHeight*e.outWidth,N=it({inputs:{x:r},backend:n,attrs:{shape:f?[e.batchSize,C,e.inChannels]:[e.batchSize,e.inChannels,C]}}),_=it({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}}),A=Hc({a:f?N:_,b:f?_:N,transposeA:!f,transposeB:h,backend:n,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i});g=it({inputs:{x:A},backend:n,attrs:{shape:e.outShape}}),x.push(N),x.push(_),x.push(A)}for(let C of x)n.disposeIntermediateTensorInfo(C);return g}function hC({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let{filterWidth:u,filterHeight:l,inChannels:c,outWidth:p,outHeight:m,dataFormat:f}=e,d=f==="channelsLast",h=u*l*c,g=m*p,x=[e.batchSize,h,g],b=!0,w=!1,C=[];if(s!=null){let Z=fC(s.shape,d);Z!=null&&(s=it({inputs:{x:s},backend:n,attrs:{shape:Z}}),C.push(s))}if(o!=null){let Z=fC(o.shape,d);Z!=null&&(o=it({inputs:{x:o},backend:n,attrs:{shape:Z}}),C.push(o))}let N=it({inputs:{x:t},backend:n,attrs:{shape:[1,h,y.sizeFromShape(t.shape)/h]}});C.push(N);let _=new mC(x,e),A=[r.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],$=n.runWebGLProgram(_,[r],"float32",A),F=it({inputs:{x:$},backend:n,attrs:{shape:x}});C.push($),C.push(F);let P=o!=null,V=s!=null,G=a==="leakyrelu",W=a?Il(a,!0):null,q=new Td(d?F.shape:N.shape,d?N.shape:F.shape,d?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],b,w,P,W,V,G),H=d?[F,N]:[N,F];if(o&&H.push(o),V&&H.push(s),G){let Z=n.makeTensorInfo([],"float32",y.createScalarValue(i,"float32"));H.push(Z),C.push(Z)}let K=n.runWebGLProgram(q,H,"float32"),X=it({inputs:{x:K},backend:n,attrs:{shape:e.outShape}});C.push(K);for(let Z of C)n.disposeIntermediateTensorInfo(Z);return X}function hrt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:i,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=n,p=S.convertConv2DDataFormat(u),m=S.computeConv2DInfo(o.shape,s.shape,i,l,a,c,!1,p),f;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))f=dC({x:o,filter:s,convInfo:m,backend:e});else if(m.strideWidth<=2&&p==="channelsLast"&&M().getBool("WEBGL_EXP_CONV")){let h=new _d(m),g=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];f=e.runWebGLProgram(h,[o,s],"float32",g)}else if(M().getBool("WEBGL_CONV_IM2COL"))f=hC({x:o,filter:s,convInfo:m,backend:e});else{let h=new Ed(m);f=e.runWebGLProgram(h,[o,s],"float32")}let d=it({inputs:{x:f},backend:e,attrs:{shape:m.outShape}});return e.disposeIntermediateTensorInfo(f),d}var dz={kernelName:qo,backendName:"webgl",kernelFunc:hrt};var gC=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,n=t.strideWidth,o=t.padInfo.top,s=t.padInfo.left,i=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${i}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},xC=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,i=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,u=n-1-t.padInfo.left,l=i?1:2,c=i?2:3,p=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},yC=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideDepth,n=t.strideHeight,o=t.strideWidth,s=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${s};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${i};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},bC=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterDepth,n=t.filterHeight,o=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,u=e-1-t.padInfo.front,l=n-1-t.padInfo.top,c=o-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function grt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:i,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=n,p=S.convertConv2DDataFormat(u),m=S.computeConv2DInfo(o.shape,c,i,1,a,l,!1,p),f=new gC(m);return e.runWebGLProgram(f,[o,s],"float32")}var hz={kernelName:fp,backendName:"webgl",kernelFunc:grt};function xrt(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:i,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=n,p=S.convertConv2DDataFormat(l),m=S.computeConv2DInfo(i,s.shape,a,1,u,c,!1,p),f=new xC(m);return e.runWebGLProgram(f,[o,s],"float32")}var gz={kernelName:Ko,backendName:"webgl",kernelFunc:xrt};function yrt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:i,pad:a,dilations:u}=n,l=S.computeConv3DInfo(o.shape,s.shape,i,u,a),c=new pC(l);return e.runWebGLProgram(c,[o,s],"float32")}var xz={kernelName:Dl,backendName:"webgl",kernelFunc:yrt};function brt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:i,pad:a,filterShape:u}=n,l=S.computeConv3DInfo(o.shape,u,i,1,a),c=new yC(l);return e.runWebGLProgram(c,[o,s],"float32")}var yz={kernelName:dp,backendName:"webgl",kernelFunc:brt};function wrt(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{pad:i,strides:a,inputShape:u}=n,l=S.computeConv3DInfo(u,s.shape,a,1,i),c=new bC(l);return e.runWebGLProgram(c,[o,s],"float32")}var bz={kernelName:hp,backendName:"webgl",kernelFunc:wrt};var Crt=Po+`
  return cos(x);
`,Irt=wt({opSnippet:Crt}),wz={kernelName:jo,backendName:"webgl",kernelFunc:Irt};var vrt=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Srt=wt({opSnippet:vrt}),Cz={kernelName:Xo,backendName:"webgl",kernelFunc:Srt};var wC=class{constructor(t,e,n,o,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[i,a,u,l]=t,[c]=e,[p,m]=n;this.outputShape=[c,p,m,l];let f=o==="bilinear"?1:0,[d,h]=[`${a-1}.0`,`${u-1}.0`],[g,x,b]=p>1?[`${(a-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[w,C,N]=m>1?[`${(u-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${C};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${d} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${N};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var Nrt=r=>{let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:i}=t,{cropSize:a,method:u,extrapolationValue:l}=n,c=new wC(o.shape,s.shape,a,u,l);return e.runWebGLProgram(c,[o,s,i],"float32")},Iz={kernelName:ya,backendName:"webgl",kernelFunc:Nrt};var Kc;(function(r){r.Prod="*",r.Sum="+"})(Kc||(Kc={}));var sg=class{constructor(t,e,n,o){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,i=this.op===Kc.Prod?"1.0":"0.0",a=n?i:`getX(${vz(s,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1],l="",c="";n?(l=o?`end != ${u-1}`:"end != 0",c=o?"end + 1":"end - 1"):(l=o?`end + pow2 < ${u}`:"end >= pow2",c=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Vt(s)} coords = getOutputCoords();
        int end = ${Sz(s,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${c};
          ${Sz(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${vz(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function vz(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function Sz(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function CC(r,t,e,n,o,s){let i=t.shape.length,a=S.getAxesPermutation([n],i),u=t;a!=null&&(u=Pe({inputs:{x:t},backend:e,attrs:{perm:a}}));let l=S.getInnerMostAxes(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let c=u.shape[l],p=rr({inputs:{x:u},backend:e});for(let m=0;m<=Math.ceil(Math.log2(c))-1;m++){let f=new sg(r,u.shape,!1,s),d=[[m]],h=p;p=e.runWebGLProgram(f,[p],p.dtype,d),e.disposeIntermediateTensorInfo(h)}if(o){let m=new sg(r,u.shape,o,s),f=p;p=e.runWebGLProgram(m,[p],p.dtype),e.disposeIntermediateTensorInfo(f)}if(a!=null){let m=S.getUndoAxesPermutation(a),f=Pe({inputs:{x:p},backend:e,attrs:{perm:m}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(u),f}return p}function Trt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:i,reverse:a}=n;return CC(Kc.Prod,o,e,s,i,a)}var Nz={kernelName:xa,backendName:"webgl",kernelFunc:Trt};function krt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:i,reverse:a}=n;return CC(Kc.Sum,o,e,s,i,a)}var Tz={kernelName:Yo,backendName:"webgl",kernelFunc:krt};function Ert(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:i,binaryOutput:a}=n;if(o.shape.length===1){let u=e.readSync(o.dataId),l=e.readSync(s.dataId),c=Lw(u,l,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,c)}else if(o.shape.length===2){let u=e.bufferSync(o),l=e.bufferSync(s),c=mL(u,l,i,a);return e.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var kz={kernelName:gp,backendName:"webgl",kernelFunc:Ert};var IC=class{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function _rt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:i}=n,a=o.shape[0],u=i==="NHWC"?o.shape[1]:o.shape[2],l=i==="NHWC"?o.shape[2]:o.shape[3],c=i==="NHWC"?o.shape[3]:o.shape[1],p=u*s,m=l*s,f=c/(s*s),d=i==="NHWC"?[a,p,m,f]:[a,f,p,m],h=new IC(d,s,i);return e.runWebGLProgram(h,[o],o.dtype)}var Ez={kernelName:ba,backendName:"webgl",kernelFunc:_rt};var Ad=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Ce(this.outputShape.length);let i=t.filterHeight,a=t.filterWidth,u=t.outChannels/t.inChannels,l="",c="";n&&(o?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:l=`
          float activation(float x) {
            ${n}
          }
        `,c="result = activation(result);");let p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${c}
        setOutput(result);
      }
    `}};var $d=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Ce(this.outputShape.length);let i=t.outChannels/t.inChannels,a=t.padInfo.left,u=t.strideWidth,l=t.dilationWidth,c=t.filterHeight,p=t.filterWidth,m=p,f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<p;x++)f+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;f+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let x=0;x<p;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(m+1)/2;x++){let b=x*2;if(f+=`
          xC = xCCorner + ${b*l};
          `,u===1){if(b<p&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,l===1&&b>0?f+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<p)){let w=a%2===0?y.nearestLargerEven(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,l>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:f+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):w===1?f+=`
                    xC${b+1} = xTexelC${b};
                    `:f+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<p&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<p&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<p&&(f+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<p&&(f+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<p&&(f+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let d="",h="";n&&(o?d=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?d=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:d=`vec4 activation(vec4 x) {
          ${n}
        }`,h="result = activation(result);");let g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${d}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${h}
        setOutput(result);
      }
    `}};function Art(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:i,pad:a,dilations:u,dimRoundingMode:l}=n,c=u;c==null&&(c=[1,1]),y.assert(S.eitherStridesOrDilationsAreOne(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let p=S.computeConv2DInfo(o.shape,s.shape,i,c,a,l,!0),m;M().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?m=new $d(p):m=new Ad(p);let f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return e.runWebGLProgram(m,[o,s],"float32",f)}var _z={kernelName:Zo,backendName:"webgl",kernelFunc:Art};var vC=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,n=t.strideWidth,o=t.padInfo.top,s=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},SC=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.top,a=n-1-t.padInfo.left,u=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function $rt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:i,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=n,p=S.computeConv2DInfo(o.shape,c,i,a,u,l,!0),m=new vC(p);return e.runWebGLProgram(m,[o,s],"float32")}var Az={kernelName:xp,backendName:"webgl",kernelFunc:$rt};function Drt(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{strides:i,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=n,p=S.computeConv2DInfo(c,s.shape,i,a,u,l,!0),m=new SC(p);return e.runWebGLProgram(m,[o,s],"float32")}var $z={kernelName:yp,backendName:"webgl",kernelFunc:Drt};var NC=class{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Rrt(r){let{inputs:t,backend:e}=r,{x:n}=t,o=[...n.shape,...n.shape],s=y.sizeFromShape(n.shape),i=it({inputs:{x:n},backend:e,attrs:{shape:[s]}}),a=new NC(s),u=e.runWebGLProgram(a,[i],i.dtype),l=it({inputs:{x:u},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),l}var Dz={kernelName:bp,backendName:"webgl",kernelFunc:Rrt};var TC=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let{inHeight:e,inWidth:n,padInfo:o,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:u,dilationHeight:l,dilationWidth:c}=t,{top:p,left:m}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${i});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function Frt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:i,pad:a,dilations:u}=n,l=S.computeDilation2DInfo(o.shape,s.shape,i,a,"NHWC",u),c,p=new TC(l);c=e.runWebGLProgram(p,[o,s],"float32");let m=it({inputs:{x:c},backend:e,attrs:{shape:l.outShape}});return e.disposeIntermediateTensorInfo(c),m}var Rz={kernelName:Rl,backendName:"webgl",kernelFunc:Frt};function Ort(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:i,summedDims:a,idDims:u}=S.decodeEinsumEquation(o,s.length);S.checkEinsumDimSizes(i.length,u,s);let{path:l,steps:c}=S.getEinsumComputePath(a,u),p=c.length,m=null,f=i.length,d=[];for(let h=0;h<p;++h){for(let g of c[h]){let{permutationIndices:x,expandDims:b}=S.getEinsumPermutation(f,u[g]),w;S.isIdentityPermutation(x)?w=s[g]:(w=Pe({inputs:{x:s[g]},backend:e,attrs:{perm:x}}),d.push(w));let C=w.shape.slice();for(let N=0;N<b.length;++N)C.splice(b[N],0,1);y.arraysEqual(w.shape,C)||(w=it({inputs:{x:w},backend:e,attrs:{shape:C}}),d.push(w)),m===null?m=w:(m=ng({inputs:{a:w,b:m},backend:e}),d.push(m))}h<p-1&&(l[h]>=0&&(m=Uc({inputs:{x:m},backend:e,attrs:{axis:l[h]-(i.length-f),keepDims:!1}}),d.push(m)),f--)}for(let h of d)h!==m&&e.disposeIntermediateTensorInfo(h);return m}var Fz={kernelName:wp,backendName:"webgl",kernelFunc:Ort};var Prt="return (x >= 0.0) ? x : (exp(x) - 1.0);",Lrt=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Mrt=wt({opSnippet:Prt,packedOpSnippet:Lrt}),Oz={kernelName:Qo,backendName:"webgl",kernelFunc:Mrt};var zrt="return (b >= 1.0) ? a : a * (b + 1.0);",Brt=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Vrt=r=>{let{inputs:t,backend:e}=r,{dy:n,y:o}=t,s=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Oo(Brt,n.shape,o.shape):new ao(zrt,n.shape,o.shape);return e.runWebGLProgram(s,[n,o],n.dtype)},Pz={kernelName:Cp,backendName:"webgl",kernelFunc:Vrt};var Grt=`
  return vec4(equal(a, b));
`,Wrt="return float(a == b);",Urt=ae({opSnippet:Wrt,packedOpSnippet:Grt,dtype:"bool",cpuKernelImpl:gL}),Lz={kernelName:Ca,backendName:"webgl",kernelFunc:Urt};var Hrt=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${S.ERF_P};
  float a1 = ${S.ERF_A1};
  float a2 = ${S.ERF_A2};
  float a3 = ${S.ERF_A3};
  float a4 = ${S.ERF_A4};
  float a5 = ${S.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,qrt=wt({opSnippet:Hrt}),Mz={kernelName:wa,backendName:"webgl",kernelFunc:qrt};var Krt=Po+`
  return exp(x);
`,jrt=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,vk=wt({opSnippet:Krt,packedOpSnippet:jrt,cpuKernelImpl:xL,dtype:"float32"}),zz={kernelName:ts,backendName:"webgl",kernelFunc:vk};function kC(r){let{inputs:t,attrs:e,backend:n}=r,{dim:o}=e,{input:s}=t,i=s.shape.length,a=s.shape.slice(),u=o;return o<0&&(y.assert(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+o+1),a.splice(u,0,1),it({inputs:{x:s},backend:n,attrs:{shape:a}})}var Bz={kernelName:pi,backendName:"webgl",kernelFunc:kC};var Vz="return exp(x) - 1.0;",Xrt=wt({opSnippet:Vz,packedOpSnippet:Vz,cpuKernelImpl:yL}),Gz={kernelName:Ia,backendName:"webgl",kernelFunc:Xrt};var ig=class{constructor(t,e,n){this.variableNames=["real","imag"];let o=e[1];this.outputShape=e;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${o}.0`:"1.0",a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function EC(r,t,e){let n=e.texData.get(r.dataId),o=y.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=o/s,a=it({inputs:{x:r},backend:e,attrs:{shape:[i,s]}}),u=a.shape,l=new ig("real",u,t),c=new ig("imag",u,t),p=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],m=e.runWebGLProgram(l,p,"float32"),f=e.runWebGLProgram(c,p,"float32"),d=An({inputs:{real:m,imag:f},backend:e});e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f);let h=it({inputs:{x:d},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(d),h}function Yrt(r){let{inputs:t,backend:e}=r,{input:n}=t;return EC(n,!1,e)}var Wz={kernelName:Ip,backendName:"webgl",kernelFunc:Yrt};var _C=class{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Sl(r){let{backend:t,attrs:e}=r,{shape:n,value:o}=e,{dtype:s}=e;if(s=s||y.inferDtype(o),s==="string"){let i=y.getArrayFromDType(s,y.sizeFromShape(n));return i.fill(o),t.makeTensorInfo(n,s,i)}else{let i=new _C(n,o),a=[[o]];return t.runWebGLProgram(i,[],s,a)}}var Uz={kernelName:Fl,backendName:"webgl",kernelFunc:Sl};var AC=class{constructor(t){this.variableNames=["Image"],this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var Hz={kernelName:va,backendName:"webgl",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,n=t,o=new AC(e.shape);return n.runWebGLProgram(o,[e],e.dtype)}};var qz="return floor(x);",Zrt=wt({opSnippet:qz,packedOpSnippet:qz,cpuKernelImpl:bL}),Kz={kernelName:es,backendName:"webgl",kernelFunc:Zrt};var Jrt=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Qrt=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,tnt=ae({opSnippet:Jrt,packedOpSnippet:Qrt,dtype:"int32"}),jz={kernelName:rs,backendName:"webgl",kernelFunc:tnt};var $C=class{constructor(t){this.variableNames=["A"];let e=We(),[n,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var DC=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let e=We(),[n,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}};var Xz={kernelName:Xd,backendName:"webgl",kernelFunc:ent},Dd,Sk=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function ent(r){let{inputs:t,backend:e,attrs:n}=r,{pixels:o}=t,{numChannels:s}=n,i=typeof HTMLVideoElement!="undefined"&&o instanceof HTMLVideoElement,a=typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement,[u,l]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[l,u],p=[l,u,s];if(a||i){let h=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Dd==null||h!==Sk)&&(Sk=h,Dd=document.createElement("canvas").getContext("2d",{willReadFrequently:Sk})),Dd.canvas.width=u,Dd.canvas.height=l,Dd.drawImage(o,0,0,u,l),o=Dd.canvas}let m=e.makeTensorInfo(c,"int32");e.texData.get(m.dataId).usage=Yr.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(m.dataId),o);let f=M().getBool("WEBGL_PACK")?new DC(p):new $C(p),d=e.runWebGLProgram(f,[m],"int32");return e.disposeData(m.dataId),d}function rnt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,h=S.convertConv2DDataFormat(c),g=S.computeConv2DInfo(o.shape,s.shape,u,p,l,m,!1,h),x,b=[],w=i!=null,C=a!=null,N=f==="leakyrelu",_=()=>{let $=[o,s],F=(P,V)=>{if(V==="NCHW"&&P.shape.length===1&&P.shape[0]!==1){let G=it({inputs:{x:P},backend:e,attrs:{shape:[P.shape[0],1,1]}});return b.push(G),G}return P};if(w&&$.push(F(i,c)),C&&$.push(F(a,c)),N){let P=e.makeTensorInfo([],"float32",y.createScalarValue(d,"float32"));$.push(P),b.push(P)}return $};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=dC({x:o,filter:s,convInfo:g,backend:e,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:d});else if(g.strideWidth<=2&&h==="channelsLast"&&M().getBool("WEBGL_EXP_CONV")){let $=f?Il(f,!0):null,F=new _d(g,w,$,C,N),P=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],V=_();x=e.runWebGLProgram(F,V,"float32",P)}else if(M().getBool("WEBGL_CONV_IM2COL"))x=hC({x:o,filter:s,convInfo:g,backend:e,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:d});else{let $=f?Il(f,!1):null,F=new Ed(g,w,$,C,N),P=_();x=e.runWebGLProgram(F,P,"float32")}let A=it({inputs:{x},backend:e,attrs:{shape:g.outShape}});return b.push(x),b.forEach($=>e.disposeIntermediateTensorInfo($)),A}var Yz={kernelName:Si,backendName:"webgl",kernelFunc:rnt};function nnt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:p,activation:m,leakyreluAlpha:f}=n,d=[],h=c;h==null&&(h=[1,1]),y.assert(S.eitherStridesOrDilationsAreOne(u,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${h}'`);let g=S.computeConv2DInfo(o.shape,s.shape,u,h,l,p,!0),x=M().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=m?Il(m,x):null,w=[o,s],C=i!=null,N=a!=null,_=m==="leakyrelu";if(C&&w.push(i),N&&w.push(a),_){let P=e.makeTensorInfo([],"float32",y.createScalarValue(f,"float32"));w.push(P),d.push(P)}let A;x?A=new $d(g,C,b,N,_):A=new Ad(g,C,b,N,_);let $=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],F=e.runWebGLProgram(A,w,"float32",$);return d.forEach(P=>e.disposeIntermediateTensorInfo(P)),F}var Zz={kernelName:Ni,backendName:"webgl",kernelFunc:nnt};var RC=class{constructor(t,e,n,o){this.sliceDim=t,this.strides=e,this.paramsShape=o,this.variableNames=["x","indices"],this.outputShape=n;let s=Vt(n.length),i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function ont(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=o.shape,i=s[s.length-1],a=y.sizeFromShape(n.shape),[u,l,c,p]=S.prepareAndValidate(n,o),m=it({inputs:{x:o},backend:e,attrs:{shape:[l,i]}}),f=it({inputs:{x:n},backend:e,attrs:{shape:[y.sizeFromShape(n.shape)/c,c]}});if(e.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let x=e.readSync(o.dataId),b=e.bufferSync(n),w=wL(x,b,n.dtype,l,i,c,p,n.shape,a);return e.makeTensorInfo(u,n.dtype,w.values)}let d=new RC(i,p,[l,c],n.shape),h=e.runWebGLProgram(d,[f,m],f.dtype),g=it({inputs:{x:h},backend:e,attrs:{shape:u}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),g}var Jz={kernelName:Sa,backendName:"webgl",kernelFunc:ont};var FC=class{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;let n=Vt(this.rank),o=snt(t,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}};function snt(r,t){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("index"):n.push(`${e[o]}`);return n.join()}function Nk(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:i,batchDims:a}=n,u=y.parseAxisParam(i,o.shape)[0];if(M().get("DEBUG")){let b=e.readSync(s.dataId),w=o.shape[u];for(let C=0;C<b.length;++C){let N=b[C];y.assert(N<=w-1&&N>=0,()=>`GatherV2: the index value ${N} is not in [0, ${w-1}]`)}}let l=S.segment_util.collectGatherOpShapeInfo(o,s,u,a),c=y.sizeFromShape(s.shape),p=[],m=it({inputs:{x:o},backend:e,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=it({inputs:{x:s},backend:e,attrs:{shape:[l.batchSize,c/l.batchSize]}});p.push(m),p.push(f);let d=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(e.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let b=e.bufferSync(f),w=e.bufferSync(m),C=CL(w,b,d);return p.forEach(N=>e.disposeIntermediateTensorInfo(N)),e.makeTensorInfo(l.outputShape,C.dtype,C.values)}let h=new FC(m.shape,d),g=e.runWebGLProgram(h,[m,f],m.dtype);p.push(g);let x=it({inputs:{x:g},backend:e,attrs:{shape:l.outputShape}});return p.forEach(b=>e.disposeIntermediateTensorInfo(b)),x}var Qz={kernelName:mi,backendName:"webgl",kernelFunc:Nk};var int="return float(a > b);",ant=`
  return vec4(greaterThan(a, b));
`,lnt=ae({opSnippet:int,packedOpSnippet:ant,cpuKernelImpl:IL,dtype:"bool"}),t3={kernelName:Na,backendName:"webgl",kernelFunc:lnt};var unt="return float(a >= b);",cnt=`
  return vec4(greaterThanEqual(a, b));
`,pnt=ae({opSnippet:unt,packedOpSnippet:cnt,dtype:"bool",cpuKernelImpl:vL}),e3={kernelName:os,backendName:"webgl",kernelFunc:pnt};function mnt(r){let{inputs:t,backend:e}=r,{input:n}=t;return EC(n,!0,e)}var r3={kernelName:vp,backendName:"webgl",kernelFunc:mnt};var fnt="return float(!isnan(x) && !isinf(x));",dnt=wt({opSnippet:fnt,dtype:"bool"}),n3={kernelName:Ta,backendName:"webgl",kernelFunc:dnt};var hnt="return float(isinf(x));",gnt=wt({opSnippet:hnt,dtype:"bool"}),o3={kernelName:ka,backendName:"webgl",kernelFunc:gnt};var xnt="return float(isnan(x));",ynt=wt({opSnippet:xnt,dtype:"bool"}),s3={kernelName:ss,backendName:"webgl",kernelFunc:ynt};var bnt="return float(a < b);",wnt=`
  return vec4(lessThan(a, b));
`,Cnt=ae({opSnippet:bnt,packedOpSnippet:wnt,cpuKernelImpl:SL,dtype:"bool"}),i3={kernelName:Ea,backendName:"webgl",kernelFunc:Cnt};var Int="return float(a <= b);",vnt=`
  return vec4(lessThanEqual(a, b));
`,Snt=ae({opSnippet:Int,packedOpSnippet:vnt,cpuKernelImpl:NL,dtype:"bool"}),a3={kernelName:_a,backendName:"webgl",kernelFunc:Snt};function Nnt(r){let{backend:t,attrs:e}=r,{start:n,stop:o,num:s}=e,i=TL(n,o,s);return t.makeTensorInfo([i.length],"float32",i)}var l3={kernelName:Np,backendName:"webgl",kernelFunc:Nnt};var Tnt=Po+`
  return x < 0.0 ? 0./0. : log(x);
`,knt=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Ent=wt({opSnippet:Tnt,packedOpSnippet:knt,cpuKernelImpl:kL}),u3={kernelName:as,backendName:"webgl",kernelFunc:Ent};var _nt=Po+`
  return log(1.0 + x);
`,Ant=wt({opSnippet:_nt}),c3={kernelName:Aa,backendName:"webgl",kernelFunc:Ant};var $nt="return float(a >= 1.0 && b >= 1.0);",Dnt=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Rnt=ae({opSnippet:$nt,packedOpSnippet:Dnt,dtype:"bool"}),p3={kernelName:$a,backendName:"webgl",kernelFunc:Rnt};var Fnt="return float(!(x >= 1.0));",Ont=wt({opSnippet:Fnt}),m3={kernelName:Da,backendName:"webgl",kernelFunc:Ont};var Pnt="return float(a >= 1.0 || b >= 1.0);",Lnt=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Mnt=ae({opSnippet:Pnt,packedOpSnippet:Lnt,dtype:"bool"}),f3={kernelName:Ra,backendName:"webgl",kernelFunc:Mnt};var OC=class{constructor(t,e,n,o,s){this.variableNames=["x"],this.outputShape=[];let i=e,a=t[3]-1;this.outputShape=t;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}};var PC=class{constructor(t,e,n,o,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let i=e,a=t[3]-1;this.outputShape=t;let u,l=`float(${n}) + float(${o}) * sum`;s===.5?u=`inversesqrt(${l})`:s===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}};var znt=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{depthRadius:s,bias:i,alpha:a,beta:u}=n,l=M().getBool("WEBGL_PACK_NORMALIZATION")?new PC(o.shape,s,i,a,u):new OC(o.shape,s,i,a,u);return e.runWebGLProgram(l,[o],o.dtype)},d3={kernelName:Ol,backendName:"webgl",kernelFunc:znt};var LC=class{constructor(t,e,n,o,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var Bnt=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o,y:s,dy:i}=t,{depthRadius:a,bias:u,alpha:l,beta:c}=n,p=new LC(o.shape,a,u,l,c);return e.runWebGLProgram(p,[o,s,i],o.dtype)},h3={kernelName:Tp,backendName:"webgl",kernelFunc:Bnt};function g3(r,t,e,n){let o=y.sizeFromShape(t),i=y.sizeFromShape(r.shape)/o,a=it({inputs:{x:r},attrs:{shape:[i,o]},backend:n}),u=Hn(a,r.dtype,"max",n),l=it({inputs:{x:u},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}function Tk(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:i}=n,a=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,c=S.getAxesPermutation(l,a),p=c!=null,m=e.shouldExecuteOnCPU([o]),f=o;if(p){if(m){let w=e.texData.get(f.dataId).values,C=new Array(a);for(let A=0;A<C.length;A++)C[A]=o.shape[c[A]];let N=Wc(w,o.shape,o.dtype,c,C);f=e.makeTensorInfo(C,o.dtype);let _=e.texData.get(f.dataId);_.values=N}else f=Nu(o,c,e);l=S.getInnerMostAxes(l.length,a)}S.assertAxesAreInnerMostDims("max",l,a);let[d,h]=S.computeOutAndReduceShapes(f.shape,l),g=d;i&&(g=S.expandShapeToKeepDim(d,u));let x;if(m){let w=e.texData.get(f.dataId).values,C=EL(w,y.sizeFromShape(h),g,o.dtype);x=e.makeTensorInfo(g,o.dtype);let N=e.texData.get(x.dataId);N.values=C}else x=g3(f,h,g,e);return p&&e.disposeIntermediateTensorInfo(f),x}var x3={kernelName:ls,backendName:"webgl",kernelFunc:Tk};var Vnt=Nd+`
  return max(a, b);
`,Gnt=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ta+`
  return result;
`,Wnt=ae({opSnippet:Vnt,packedOpSnippet:Gnt,cpuKernelImpl:_L}),y3={kernelName:us,backendName:"webgl",kernelFunc:Wnt};function Unt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;ti(o,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:u}=n,l=1;y.assert(S.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=S.computePool2DInfo(o.shape,s,i,l,a,u);if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))return rr({inputs:{x:o},backend:e});let p=new ri(c,"max",!1);return e.runWebGLProgram(p,[o],o.dtype)}var b3={kernelName:cs,backendName:"webgl",kernelFunc:Unt};function Hnt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:i,pad:a,dataFormat:u,dimRoundingMode:l}=n,c=[1,1,1],p=S.computePool3DInfo(o.shape,s,i,c,a,l,u),m=new Tu(p,"max",!1);return e.runWebGLProgram(m,[o],o.dtype)}var w3={kernelName:Pl,backendName:"webgl",kernelFunc:Hnt};var MC=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideHeight,n=t.strideWidth,o=t.dilationHeight,s=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=s-1-t.padInfo.top,u=i-1-t.padInfo.left,l=s*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},zC=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideDepth,n=t.strideHeight,o=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,u=t.effectiveFilterDepth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,p=u-1-t.padInfo.front,m=l-1-t.padInfo.top,f=c-1-t.padInfo.left,d=u*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${d} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function qnt(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,i=s,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=n,p=[1,1,1],m=S.computePool3DInfo(i.shape,a,u,p,l,c),f=new Tu(m,"max",!0),d=e.runWebGLProgram(f,[i],i.dtype),h=new zC(m),g=e.runWebGLProgram(h,[o,d],i.dtype);return e.disposeIntermediateTensorInfo(d),g}var C3={kernelName:Ep,backendName:"webgl",kernelFunc:qnt};function Knt(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s,output:i}=t,a=s;ti([s,i],"maxPoolGrad");let{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=n,m=S.computePool2DInfo(a.shape,u,l,1,c,p),f=!0,d=new ri(m,"max",f),h=e.runWebGLProgram(d,[a],a.dtype),g=new MC(m),x=e.runWebGLProgram(g,[o,h],a.dtype);return e.disposeIntermediateTensorInfo(h),x}var I3={kernelName:kp,backendName:"webgl",kernelFunc:Knt};function v3(r,t,e,n){let o=new ri(e,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new ri(e,"max",!0,!0,t);let i=n.runWebGLProgram(o,[r],"float32");return[s,i]}var S3={kernelName:_p,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{filterSize:o,strides:s,pad:i,includeBatchInIndex:a}=t,u=e;y.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let l=[1,1];y.assert(S.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);let c=S.computePool2DInfo(n.shape,o,s,l,i),[p,m]=v3(n,a,c,u);return[p,m]}};function N3(r,t,e,n){let o=y.sizeFromShape(t),i=y.sizeFromShape(r.shape)/o,a=it({inputs:{x:r},attrs:{shape:[i,o]},backend:n}),u=Hn(a,"float32","mean",n),l=it({inputs:{x:u},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}var T3={kernelName:ps,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{keepDims:o,axis:s}=t,i=e,a=n.shape.length,u=y.parseAxisParam(s,n.shape),l=u,c=S.getAxesPermutation(l,a),p=c!=null,m=i.shouldExecuteOnCPU([n]),f=[],d=n;if(p){if(m){let C=i.texData.get(d.dataId).values,N=new Array(a);for(let $=0;$<N.length;$++)N[$]=n.shape[c[$]];let _=Wc(C,n.shape,n.dtype,c,N);d=i.makeTensorInfo(N,n.dtype);let A=i.texData.get(d.dataId);A.values=_}else d=Nu(n,c,i);f.push(d),l=S.getInnerMostAxes(l.length,a)}S.assertAxesAreInnerMostDims("sum",l,a);let[h,g]=S.computeOutAndReduceShapes(d.shape,l),x=h;o&&(x=S.expandShapeToKeepDim(h,u));let b=N3(d,g,x,i);for(let w of f)i.disposeIntermediateTensorInfo(w);return b}};function jnt(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n,a=o.shape.length,u=y.parseAxisParam(s,o.shape),l=u,c=S.getAxesPermutation(l,a),p=o;c!=null&&(p=Pe({inputs:{x:o},backend:e,attrs:{perm:c}}),l=S.getInnerMostAxes(l.length,o.shape.length)),S.assertAxesAreInnerMostDims("min",l,a);let[m,f]=S.computeOutAndReduceShapes(p.shape,l),d=y.sizeFromShape(f),h=it({inputs:{x:p},backend:e,attrs:{shape:[-1,d]}}),g=Hn(h,h.dtype,"min",e),x;if(i){let b=S.expandShapeToKeepDim(m,u);x=it({inputs:{x:g},backend:e,attrs:{shape:b}})}else x=it({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(g),c!=null&&e.disposeIntermediateTensorInfo(p),x}var k3={kernelName:ms,backendName:"webgl",kernelFunc:jnt};var Xnt=Nd+`
  return min(a, b);
`,Ynt=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ta+`
  return result;
`,Znt=ae({opSnippet:Xnt,packedOpSnippet:Ynt,cpuKernelImpl:AL}),E3={kernelName:fs,backendName:"webgl",kernelFunc:Znt};var BC=class{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((c,p)=>c[0]+t[p]+c[1]);let o=t.length,s=Vt(o),i=e.map(c=>c[0]).join(","),a=e.map((c,p)=>c[0]+t[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),l=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}};var VC=class{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((d,h)=>d[0]+t[h]+d[1]);let o=t.length,s=Vt(o),i=e.map(d=>d[0]).join(","),a=e.map((d,h)=>d[0]+t[h]).join(","),u=er("rc",o),l=er("source",o),c=`${u[o-1]} < ${this.outputShape[o-1]}`,p=o===1?"source":`vec2(${l.slice(-2).join()})`,m=n==="reflect"?0:1,f="";if(o===1){let d=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${l.join()}), ${p});
        ${u[o-1]} += 1;
        if(${c}) {
          ${d}
          result[1] = getChannel(getX(${l.join()}), ${p});
        }
      `}else{let d=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${l.join()}), ${p});
        ${u[o-1]} += 1;
        if(${c}) {
          ${d}
          result[1] = getChannel(getX(${l.join()}), ${p});
        }
        rc = outputLoc;
        ${u[o-2]} += 1;
        if(${u[o-2]} < ${this.outputShape[o-2]}) {
          ${d}
          result[2] = getChannel(getX(${l.join()}), ${p});
          ${u[o-1]} += 1;
          if(${c}) {
            ${d}
            result[3] = getChannel(getX(${l.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var Jnt=({inputs:r,backend:t,attrs:e})=>{let{x:n}=r,{paddings:o,mode:s}=e,i=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new VC(n.shape,o,s):new BC(n.shape,o,s);return t.runWebGLProgram(i,[n],n.dtype)},_3={kernelName:ds,backendName:"webgl",kernelFunc:Jnt};var Qnt=`if (b == 0.0) return NAN;
  return mod(a, b);`,tot=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+ta+`
  return result;
`,eot=ae({opSnippet:Qnt,packedOpSnippet:tot}),A3={kernelName:Fa,backendName:"webgl",kernelFunc:eot};var GC=class{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}};var rot=`
if (a == b) {
  return 1.0;
};
return a / b;`,not=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,kk=ae({opSnippet:rot,packedOpSnippet:not,checkOutOfBounds:!0}),$3={kernelName:Jo,backendName:"webgl",kernelFunc:kk};var D3="return a - b;",Ek=ae({opSnippet:D3,packedOpSnippet:D3,supportsComplex:!0,cpuKernelImpl:YL}),R3={kernelName:Os,backendName:"webgl",kernelFunc:Ek};function _k(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,i=y.parseAxisParam([s],o.shape),a=Tk({inputs:{x:o},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),u=S.expandShapeToKeepDim(a.shape,i),l=it({inputs:{x:a},backend:e,attrs:{shape:u}}),c=Ek({inputs:{a:o,b:l},backend:e}),p=vk({inputs:{x:c},backend:e}),m=Uc({inputs:{x:p},backend:e,attrs:{axis:i,keepDims:!1}}),f=it({inputs:{x:m},backend:e,attrs:{shape:u}}),d=kk({inputs:{a:p,b:f},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),d}var F3={kernelName:Rs,backendName:"webgl",kernelFunc:_k};function oot(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{numSamples:s,seed:i,normalized:a}=n,u=a?o:_k({inputs:{logits:o},backend:e,attrs:{dim:o.shape.length-1}}),l=u.shape[0],c=u.shape[1],p=new GC(l,c,s),m=[[i]],f=e.runWebGLProgram(p,[u],"int32",m);return a||e.disposeIntermediateTensorInfo(u),f}var O3={kernelName:Ap,backendName:"webgl",kernelFunc:oot};var sot=xr+`
  return -x;
`,iot=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function aot(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])){let s=e.texData.get(n.dataId),[i,a]=DL(s.values,n.shape,n.dtype);return e.makeTensorInfo(a,n.dtype,i)}let o;return M().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new _n(n.shape,iot):o=new Mr(n.shape,sot),e.runWebGLProgram(o,[n],n.dtype)}var P3={kernelName:fi,backendName:"webgl",kernelFunc:aot};var lot=qr.nonMaxSuppressionV3Impl;function uot(r){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=n,l=e.readSync(o.dataId),c=e.readSync(s.dataId),{selectedIndices:p}=lot(l,c,i,a,u);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var L3={kernelName:Pa,backendName:"webgl",kernelFunc:uot};var cot=qr.nonMaxSuppressionV4Impl;function pot(r){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=n,c=e.readSync(o.dataId),p=e.readSync(s.dataId),{selectedIndices:m,validOutputs:f}=cot(c,p,i,a,u,l);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}var M3={kernelName:La,backendName:"webgl",kernelFunc:pot};var mot=qr.nonMaxSuppressionV5Impl;function fot(r){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=n,c=e.readSync(o.dataId),p=e.readSync(s.dataId),m=i,f=a,d=u,h=l,{selectedIndices:g,selectedScores:x}=mot(c,p,m,f,d,h);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var z3={kernelName:Ma,backendName:"webgl",kernelFunc:fot};var WC=class{constructor(t,e,n,o){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var dot=r=>{let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:i,onValue:a,offValue:u}=n,l=y.sizeFromShape(o.shape),c=new WC(l,i,a,u),p=it({inputs:{x:o},backend:e,attrs:{shape:[l]}}),m=e.runWebGLProgram(c,[p],s);e.disposeIntermediateTensorInfo(p);let f=[...o.shape,i],d=it({inputs:{x:m},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(m),d},B3={kernelName:gs,backendName:"webgl",kernelFunc:dot};function ag(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="complex64"){let o=vl({inputs:{input:n},backend:e}),s=ag({inputs:{x:o},backend:e}),i=qc({inputs:{input:n},backend:e}),a=ag({inputs:{x:i},backend:e}),u=An({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),u}else return Sl({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}var V3={kernelName:Ii,backendName:"webgl",kernelFunc:ag};function G3(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=vl({inputs:{input:n},backend:e}),s=G3({inputs:{x:o},backend:e}),i=qc({inputs:{input:n},backend:e}),a=ag({inputs:{x:i},backend:e}),u=An({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),u}else return Sl({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}var W3={kernelName:di,backendName:"webgl",kernelFunc:G3};function hot(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return kC({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,i=t[0].dtype;t.forEach(c=>{y.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),y.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=t.map(c=>{let p=kC({inputs:{input:c},backend:e,attrs:{dim:o}});return a.push(p),p}),l=Ik({inputs:u,backend:e,attrs:{axis:o}});return a.forEach(c=>e.disposeIntermediateTensorInfo(c)),l}var U3={kernelName:hi,backendName:"webgl",kernelFunc:hot};var UC=class{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((l,c)=>l[0]+t[c]+l[1]);let o=t.length,s=Vt(o),i=e.map(l=>l[0]).join(","),a=e.map((l,c)=>l[0]+t[c]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}};var HC=class{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((h,g)=>h[0]+t[g]+h[1]);let o=t.length,s=Vt(o),i=e.map(h=>h[0]).join(","),a=e.map((h,g)=>h[0]+t[g]).join(","),u=er("rc",o),l=er("source",o),c=`${u[o-1]} < ${this.outputShape[o-1]}`,p=o===1?"source":`vec2(${l.slice(-2).join()})`,m=[`${s} rc = outputLoc;`,`${u[o-1]} += 1;
       if(${c}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${u[o-2]} += 1;
       if(${u[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${u[o-1]} += 1;
         if(${c}) {`],f=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",d="";for(let h=0,g=o===1?2:4;h<g;h++)d+=`
        ${m[h]}
        if (${f}) {
          result[${h}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${h}] = getChannel(getX(${l.join()}), ${p});
        }
      `;d+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var Ak=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:i}=n;if(y.sizeFromShape(o.shape)===0){let l=s.map((c,p)=>c[0]+o.shape[p]+c[1]);return Sl({backend:e,attrs:{shape:l,value:i,dtype:o.dtype}})}let a=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HC(o.shape,s,i):new UC(o.shape,s,i),u=[[i]];return e.runWebGLProgram(a,[o],o.dtype,u)},H3={kernelName:xs,backendName:"webgl",kernelFunc:Ak};var got=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,xot=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+ta+`
  return result;
`,yot=ae({opSnippet:got,packedOpSnippet:xot}),q3={kernelName:ys,backendName:"webgl",kernelFunc:yot};function bot(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n,a=o.shape.length,u=[],l=y.parseAxisParam(s,o.shape),c=l,p=S.getAxesPermutation(c,a),m=o;p!=null&&(m=Pe({inputs:{x:o},backend:e,attrs:{perm:p}}),c=S.getInnerMostAxes(c.length,a),u.push(m)),S.assertAxesAreInnerMostDims("prod",c,a);let f;if(e.shouldExecuteOnCPU([m])){let d=e.texData.get(m.dataId).values,{outVals:h,outShape:g,outDtype:x}=FL(m.shape,m.dtype,d,c);f=e.makeTensorInfo(g,x,h)}else{let[d,h]=S.computeOutAndReduceShapes(m.shape,c),g=y.sizeFromShape(h),x=it({inputs:{x:m},backend:e,attrs:{shape:[-1,g]}}),b=Bu(o.dtype),w=Hn(x,b,"prod",e);f=it({inputs:{x:w},backend:e,attrs:{shape:d}}),u.push(x),u.push(w)}if(i){u.push(f);let d=S.expandShapeToKeepDim(f.shape,l);f=it({inputs:{x:f},backend:e,attrs:{shape:d}})}return u.forEach(d=>e.disposeIntermediateTensorInfo(d)),f}var K3={kernelName:ws,backendName:"webgl",kernelFunc:bot};function wot(r){let{inputs:t,backend:e,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:a}=n,u=o.map(x=>e.readSync(x.dataId)),l=o.map(x=>x.shape),c=e.readSync(s.dataId),p=e.readSync(i.dataId),[m,f,d]=OL(u,l,c,s.shape,s.dtype,p,i.shape,a),h=m.map(x=>e.makeTensorInfo([x.length],"int32",x)),g=e.makeTensorInfo(d,s.dtype,f);return h.concat([g])}var j3={kernelName:$p,backendName:"webgl",kernelFunc:wot};function Cot(r){let{inputs:t,backend:e}=r,{starts:n,limits:o,deltas:s}=t,i=e.readSync(n.dataId),a=e.readSync(o.dataId),u=e.readSync(s.dataId),[l,c]=PL(i,n.shape,n.dtype,a,o.shape,u,s.shape),p=e.makeTensorInfo([l.length],"int32",l),m=e.makeTensorInfo([c.length],n.dtype,c);return[p,m]}var X3={kernelName:Dp,backendName:"webgl",kernelFunc:Cot};function Iot(r){let{inputs:t,backend:e,attrs:n}=r,{shape:o,values:s,defaultValue:i,rowPartitionTensors:a}=t,{rowPartitionTypes:u}=n,l=e.readSync(o.dataId),c=e.readSync(s.dataId),p=e.readSync(i.dataId),m=a.map(g=>e.readSync(g.dataId)),f=a.map(g=>g.shape),[d,h]=LL(l,o.shape,c,s.shape,s.dtype,p,i.shape,m,f,u);return e.makeTensorInfo(d,s.dtype,h)}var Y3={kernelName:Rp,backendName:"webgl",kernelFunc:Iot};var $k=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:i}=e,a=ML(n,o,s,i);return t.makeTensorInfo([a.length],i,a)},Z3={kernelName:Ll,backendName:"webgl",kernelFunc:$k};var vot="return 1.0 / x;",Sot=wt({opSnippet:vot}),J3={kernelName:Cs,backendName:"webgl",kernelFunc:Sot};var Not=xr+`
  return (x < 0.0) ? 0.0 : x;
`,Tot=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,kot=wt({opSnippet:Not,packedOpSnippet:Tot}),Q3={kernelName:Is,backendName:"webgl",kernelFunc:kot};var Eot=xr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,_ot=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Aot=wt({opSnippet:Eot,packedOpSnippet:_ot}),tB={kernelName:Ns,backendName:"webgl",kernelFunc:Aot};var qC=class{constructor(t,e,n,o,s){this.variableNames=["A"],this.outputShape=[];let[i,a,u,l]=t;this.outputShape=[i,e,n,l];let c=[o&&e>1?a-1:a,o&&n>1?u-1:u],p=[o&&e>1?e-1:e,o&&n>1?n-1:n],m;s?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var KC=class{constructor(t,e,n,o,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,a,u,l]=t;this.outputShape=[i,e,n,l];let c=[o&&e>1?a-1:a,o&&n>1?u-1:u],p=[o&&e>1?e-1:e,o&&n>1?n-1:n],m;s?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function $ot(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,c=M().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new KC(o.shape,u,l,s,i):new qC(o.shape,u,l,s,i);return e.runWebGLProgram(c,[o],"float32")}var eB={kernelName:Ss,backendName:"webgl",kernelFunc:$ot};var jC=class{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,o,s]=e,[,i,a]=t,u=[n&&i>1?o-1:o,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],c=u[0]/l[0],p=u[1]/l[1],m=1/c,f=1/p,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Dot(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:i}=n,a=new jC(s.shape,o.shape,i);return e.runWebGLProgram(a,[s],s.dtype)}var rB={kernelName:Pp,backendName:"webgl",kernelFunc:Dot};var XC=class{constructor(t,e,n,o,s){this.variableNames=["A"],this.outputShape=[];let[i,a,u,l]=t;this.outputShape=[i,e,n,l];let c=[o&&e>1?a-1:a,o&&n>1?u-1:u],p=[o&&e>1?e-1:e,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var YC=class{constructor(t,e,n,o,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,a,u,l]=t;this.outputShape=[i,e,n,l];let c=[o&&e>1?a-1:a,o&&n>1?u-1:u],p=[o&&e>1?e-1:e,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Rot(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,c=M().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new YC(o.shape,u,l,s,i):new XC(o.shape,u,l,s,i);return e.runWebGLProgram(c,[o],o.dtype)}var nB={kernelName:vs,backendName:"webgl",kernelFunc:Rot};var ZC=class{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,o,s]=e,[,i,a]=t,u=[n&&i>1?o-1:o,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],c=u[0]/l[0],p=u[1]/l[1],m=1/c,f=1/p,d=Math.ceil(m)*2+2,h=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${h});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Fot(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:i}=n,a=new ZC(s.shape,o.shape,i);return e.runWebGLProgram(a,[s],s.dtype)}var oB={kernelName:Op,backendName:"webgl",kernelFunc:Fot};var JC=class{constructor(t,e){this.variableNames=["x"];let n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}let o=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,s=t.map((a,u)=>o(u)).join(","),i=Vt(n);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var QC=class{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;let o=er("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,a=Vt(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(o.slice())};
          if(${s}){
            result.g = ${l(o.slice())};
          }
          if(${i}) {
            result.b = ${c(o.slice())};
            if(${s}) {
              result.a = ${p(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(d){return m(d)}function l(d){return d[n-1]="("+d[n-1]+" + 1)",m(d)}function c(d){return d[n-2]="("+d[n-2]+" + 1)",m(d)}function p(d){return d[n-1]="("+d[n-1]+" + 1)",d[n-2]="("+d[n-2]+" + 1)",m(d)}function m(d){let h=t.map((b,w)=>f(w,d)),g=h.join(","),x=h.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function f(d,h){return e.indexOf(d)!==-1&&t[d]!==1?`${t[d]} - ${h[d]} - 1`:`${h[d]}`}}};function Oot(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n,i=o.shape.length,a=y.parseAxisParam(s,o.shape);if(i===0)return rr({inputs:{x:o},backend:e});let u=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QC(o.shape,a):new JC(o.shape,a);return e.runWebGLProgram(u,[o],o.dtype)}var sB={kernelName:Ts,backendName:"webgl",kernelFunc:Oot};var tI=class{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=t[1],o=t[2];this.outputShape=t;let s="";typeof e=="number"?s=`float outputValue = ${e.toFixed(2)};`:s=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var iB={kernelName:ja,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=t,a=e,u=new tI(n.shape,s),[l,c]=S.getImageCenter(i,n.shape[1],n.shape[2]),p=[[l,c,Math.sin(o),Math.cos(o)]];return a.runWebGLProgram(u,[n],n.dtype,p)}};var Pot=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Lot=wt({opSnippet:Pot}),aB={kernelName:ks,backendName:"webgl",kernelFunc:Lot};var Mot="return inversesqrt(x);",zot=wt({opSnippet:Mot,cpuKernelImpl:zL}),lB={kernelName:Es,backendName:"webgl",kernelFunc:zot};var Rd=class{constructor(t,e,n,o,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;let u=Vt(s.length),l=Vt(i.length),c="";n===1?c="i":n===2&&(c="i, j");let p=`getIndices(${c})`,m="";o===1?m="i":o===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,d=e>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${p});
              flattenedIndex += index * ${d};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Bot(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:i}=n,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=S.calculateShapes(s,o,i),m=[p/l,l];if(p===0)return e.makeTensorInfo(i,o.dtype);let f=it({inputs:{x:o},backend:e,attrs:{shape:[u,a]}}),d=it({inputs:{x:s},backend:e,attrs:{shape:[u,l]}}),h=e.makeTensorInfo([],"float32",new Float32Array([0])),g=new Rd(u,a,f.shape.length,d.shape.length,c,m),x=e.runWebGLProgram(g,[d,f,h],d.dtype),b=it({inputs:{x},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(h),b}var uB={kernelName:za,backendName:"webgl",kernelFunc:Bot};var eI=class{constructor(t,e,n,o){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];let s="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=M().getNumber("WEBGL_VERSION")===2?s:i,u=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Vot(r){let{inputs:t,backend:e,attrs:n}=r,{sortedSequence:o,values:s}=t,{side:i}=n,a=new eI(o.shape[0],o.shape[1],s.shape[1],i),u=[[o.shape[1]]];return e.runWebGLProgram(a,[o,s],"int32",u)}var cB={kernelName:Lp,backendName:"webgl",kernelFunc:Vot};var rI=class{constructor(t,e,n){this.variableNames=["c","a","b"],this.outputShape=e;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let c=0;c<e.length;c++)l.push(`${a[c]}`),c<t&&u.push(`${a[c]}`);o=u.join(),s=l.join()}let i=Vt(n);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function Got(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,i=new rI(n.shape.length,o.shape,o.shape.length);return e.runWebGLProgram(i,[n,o,s],lr(o.dtype,s.dtype))}var pB={kernelName:xi,backendName:"webgl",kernelFunc:Got};var Wot=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${S.SELU_SCALEALPHA};
  float scale = ${S.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Uot=wt({opSnippet:Wot}),mB={kernelName:Ba,backendName:"webgl",kernelFunc:Uot};var Hot=Po+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,qot=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Kot=wt({opSnippet:Hot,packedOpSnippet:qot,cpuKernelImpl:VL}),fB={kernelName:As,backendName:"webgl",kernelFunc:Kot};var jot=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Xot=wt({opSnippet:jot}),dB={kernelName:Ga,backendName:"webgl",kernelFunc:Xot};var Yot=Po+`
  return sin(x);
`,Zot=wt({opSnippet:Yot}),hB={kernelName:_s,backendName:"webgl",kernelFunc:Zot};var Jot=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Qot=wt({opSnippet:Jot}),gB={kernelName:Va,backendName:"webgl",kernelFunc:Qot};var tst=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,est=wt({opSnippet:tst}),xB={kernelName:Wa,backendName:"webgl",kernelFunc:est};var rst=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:i}=n;y.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((x,b)=>x*b),u=[[0,0]];u.push(...i);for(let x=1+s.length;x<o.shape.length;++x)u.push([0,0]);let l=[],c=Ak({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),p=S.getReshaped(c.shape,s,a,!1),m=S.getPermuted(p.length,s.length,!1),f=S.getReshapedPermuted(c.shape,s,a,!1),d=it({inputs:{x:c},backend:e,attrs:{shape:p}}),h=Pe({inputs:{x:d},backend:e,attrs:{perm:m}}),g=it({inputs:{x:h},backend:e,attrs:{shape:f}});return l.push(c),l.push(d),l.push(h),l.forEach(x=>e.disposeIntermediateTensorInfo(x)),g},yB={kernelName:bi,backendName:"webgl",kernelFunc:rst};function nst(r){let{inputs:t,backend:e}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=e.readSync(n.dataId),u=e.readSync(o.dataId),l=e.readSync(s.dataId),c=e.readSync(i.dataId)[0],[p,m,f,d,h]=WL(a,n.shape,n.dtype,u,o.dtype,l,c);return[e.makeTensorInfo(m,n.dtype,p),e.makeTensorInfo([m[0]],o.dtype,f),e.makeTensorInfo([d.length],"bool",new Uint8Array(d.map(g=>Number(g)))),e.makeTensorInfo([h.length],n.dtype,new Int32Array(h))]}var bB={kernelName:Ml,backendName:"webgl",kernelFunc:nst};function ost(r){let{inputs:t,backend:e}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(e.readSync(o.dataId)),a=e.readSync(n.dataId),u=Array.from(e.readSync(s.dataId)),[l,c,p]=UL(a,n.shape,n.dtype,i,u);return[e.makeTensorInfo(c,n.dtype,l),e.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var wB={kernelName:Ua,backendName:"webgl",kernelFunc:ost};function sst(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=e.readSync(n.dataId),a=e.readSync(o.dataId),u=e.readSync(s.dataId),[l,c]=zw(i,n.shape,n.dtype,a,u,!0);return e.makeTensorInfo(c,n.dtype,l)}var CB={kernelName:zl,backendName:"webgl",kernelFunc:sst};function ist(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=e.readSync(n.dataId),a=e.readSync(o.dataId),u=e.readSync(s.dataId),[l,c]=zw(i,n.shape,n.dtype,a,u);return e.makeTensorInfo(c,n.dtype,l)}var IB={kernelName:Bl,backendName:"webgl",kernelFunc:ist};function ast(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=t,{outputShape:a}=n,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:m}=S.calculateShapes(s,o,a),f=!1;if(s.dtype==="string"){let x=e.bufferSync(o),b=e.bufferSync(s),w=y.decodeString(e.readSync(i.dataId)[0]),C=BL(x,b,a,m,c,l,u,p,w,f);return e.makeTensorInfo(a,C.dtype,C.values)}let d=new Rd(l,u,o.shape.length,s.shape.length,p,[m,1],f),h=e.runWebGLProgram(d,[s,o,i],s.dtype),g=it({inputs:{x:h},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(h),g}var vB={kernelName:Mp,backendName:"webgl",kernelFunc:ast};function lst(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:i}=n,a=y.parseAxisParam(i,o.shape)[0],u=S.prepareSplitSize(o,s,a),l=o.shape.length,c=new Array(l).fill(0),p=o.shape.slice();return u.map(m=>{let f=[...p];f[a]=m;let d=ni({inputs:{x:o},backend:e,attrs:{begin:c,size:f}});return c[a]+=m,d})}var SB={kernelName:wi,backendName:"webgl",kernelFunc:lst};var NB="return sqrt(x);",ust=wt({opSnippet:NB,packedOpSnippet:NB,cpuKernelImpl:HL}),TB={kernelName:$s,backendName:"webgl",kernelFunc:ust};var cst="return x * x;",pst=wt({opSnippet:cst}),kB={kernelName:Vl,backendName:"webgl",kernelFunc:pst};var EB="return (a - b) * (a - b);",mst=ae({opSnippet:EB,packedOpSnippet:EB}),_B={kernelName:Fs,backendName:"webgl",kernelFunc:mst};function fst({inputs:r,attrs:t,backend:e}){let{x:n}=r,o=xr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new Mr(n.shape,o);return e.runWebGLProgram(s,[n],n.dtype)}var AB={kernelName:mo,backendName:"webgl",kernelFunc:fst};var nI=class{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;let o=n.length,s=Vt(n.length),i=Vt(n.length),a="";if(o===1)a="coords * strides + begin";else{let u=0;a=n.map((l,c)=>(u++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${u-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${t});
      ${s} strides = ${s}(${e});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};function dst(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n,{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:C}=ze.sliceInfo(o.shape,s,i,a,u,l,c,p,m),N;if(h)N=it({inputs:{x:o},backend:e,attrs:{shape:d}});else if(g||x){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let A=ze.computeOutShape(b,w,C),$=ni({inputs:{x:o},backend:e,attrs:{begin:b,size:A}});N=it({inputs:{x:$},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo($)}else if(e.shouldExecuteOnCPU([o])){let $=e.readSync(o.dataId),F=bt(o.shape,o.dtype,$),P=qL(f,F,C,b);N=e.makeTensorInfo(d,o.dtype,P.values)}else{let $=new nI(b,C,f);N=e.runWebGLProgram($,[o],o.dtype)}let _=it({inputs:{x:N},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(N),_}var $B={kernelName:Ha,backendName:"webgl",kernelFunc:dst};function hst(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:l}=n,{data:c,dataSplits:p}=t,m=e.readSync(c.dataId),f=e.readSync(p.dataId),[d,h]=KL(m,f,o,s,i,a,u,l);return[e.makeTensorInfo([d.length],"string",d),e.makeTensorInfo(p.shape,"int32",h)]}var DB={kernelName:Gl,backendName:"webgl",kernelFunc:hst};function gst(r){let{inputs:t,backend:e,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=e.readSync(s.dataId),u=e.readSync(i.dataId)[0],[l,c,p]=jL(a,u,o),m=c.length;return[e.makeTensorInfo([m,2],"int32",l),e.makeTensorInfo([m],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(p))]}var RB={kernelName:Wl,backendName:"webgl",kernelFunc:gst};function xst(r){let{inputs:t,backend:e,attrs:n}=r,{numBuckets:o}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let i=e.readSync(s.dataId),a=XL(i,o);return e.makeTensorInfo(s.shape,"int32",a)}var FB={kernelName:Ul,backendName:"webgl",kernelFunc:xst};var yst="return tan(x);",bst=wt({opSnippet:yst}),OB={kernelName:Ps,backendName:"webgl",kernelFunc:bst};var wst=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Cst=wt({opSnippet:wst}),PB={kernelName:Ls,backendName:"webgl",kernelFunc:Cst};var oI=class{constructor(t,e){this.variableNames=["A"];let n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[i]*e[i];this.outputShape=n,this.rank=n.length;let o=Vt(this.rank),s=Ist(t);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function Ist(r){let t=r.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${r[0]})`;let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${e[o]}, ${r[o]})`);return n.join()}function Dk(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let u=e.readSync(o.dataId),l=o.dtype==="string"?u.map(m=>y.decodeString(m)):u,c=bt(o.shape,o.dtype,l),p=ZL(c,s);return e.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new oI(o.shape,s);return e.runWebGLProgram(i,[o],o.dtype)}var LB={kernelName:Qn,backendName:"webgl",kernelFunc:Dk};var sI=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},iI=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function jc(r,t){t!==null&&r.disposeIntermediateTensorInfo(t)}function MB(r){let t=1;for(;t<r;)t*=2;return t}function vst(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:i}=n,a=M().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=M().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=o.shape,c=l[l.length-1];if(e.shouldExecuteOnCPU([o])||c<a||s>u){let P=e.readSync(o.dataId),[V,G]=JL(P,l,o.dtype,s,i);return[e.makeTensorInfo(V.shape,V.dtype,V.values),e.makeTensorInfo(G.shape,G.dtype,G.values)]}if(s===0)return l[l.length-1]=0,[e.makeTensorInfo(l,o.dtype,[]),e.makeTensorInfo(l,"int32",[])];if(c===1)return[o,Sl({attrs:{shape:l,dtype:"int32",value:0},backend:e})];let p=e.texData.get(o.dataId),m=p!==null&&p.isPacked,f=m?e.unpackTensor(o):o,h=y.sizeFromShape(l)/c,g=it({inputs:{x:f},attrs:{shape:[h,c]},backend:e});m&&jc(e,f);let x=MB(s),b=MB(c),w=null,C=()=>w===null?[g,g]:[g,w],N=(P,V,G)=>{let W=C(),q=new sI(G),K=[[c],[w===null?1:0],[Number.NEGATIVE_INFINITY],[P],[V]],X=w;w=e.runWebGLProgram(q,W,"int32",K),jc(e,X)};for(let P=1;P<x;P*=2){let V=P*2;for(let G=P;G>=1;G/=2)N(V,G,[h,b])}for(let P=b;P>x;P/=2){let V=C(),G=new iI([h,P/2]),q=[[c],[w===null?1:0],[x]],H=w;w=e.runWebGLProgram(G,V,"int32",q),jc(e,H);let K=x/2,X=K*2;for(let Z=K;Z>=1;Z/=2)N(X,Z,w.shape)}let _=w;w=ni({inputs:{x:w},backend:e,attrs:{begin:0,size:[h,s]}}),jc(e,_);let A=Nk({inputs:{x:g,indices:w},backend:e,attrs:{axis:1,batchDims:1}});jc(e,g);let $=l.slice(0,-1);$.push(s),_=w,w=it({inputs:{x:w},attrs:{shape:$},backend:e}),jc(e,_);let F=A;return A=it({inputs:{x:A},attrs:{shape:$},backend:e}),jc(e,F),[A,w]}var zB={kernelName:qa,backendName:"webgl",kernelFunc:vst};var aI=class{constructor(t,e,n,o,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;let a=n==="nearest"?1:2,u;switch(o){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Sst(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=n,[c,p,m,f]=o.shape,[d,h]=l!=null?l:[p,m],g=[c,d,h,f],x=new aI(p,m,i,a,u,g);return e.runWebGLProgram(x,[o,s],"float32")}var BB={kernelName:Ka,backendName:"webgl",kernelFunc:Sst};function Nst(r){let{inputs:t,attrs:e,backend:n}=r,{axis:o}=e,{x:s}=t;ti(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=n.readSync(s.dataId),{outputValues:a,outputShape:u,indices:l}=QL(i,o,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,a),n.makeTensorInfo([l.length],"int32",l)]}var VB={kernelName:zp,backendName:"webgl",kernelFunc:Nst};function Tst(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o,a=i.shape.length,u=o.shape[s],l=new Array(a-1),c=0;for(let h=0;h<a;h++)h!==s&&(l[c++]=i.shape[h]);let p=[],m=new Array(a).fill(0),f=i.shape.slice();f[s]=1;let d=new Array(u);for(let h=0;h<d.length;h++){m[s]=h;let g=ni({inputs:{x:i},backend:e,attrs:{begin:m,size:f}}),x=it({inputs:{x:g},backend:e,attrs:{shape:l}});d[h]=x,p.push(g)}return p.forEach(h=>e.disposeIntermediateTensorInfo(h)),d}var GB={kernelName:Ci,backendName:"webgl",kernelFunc:Tst};var lI=class{constructor(t,e){this.variableNames=["x","segmentIds"];let n=t.windowSize,o=t.batchSize,s=t.inSize,i=t.numSegments,a=i*Math.ceil(s/n);this.outputShape=[o,a];let u="0.0",l="sumValue",c=Math.floor(n/4)*4,p=n%4,m=`
        sumValue += dot(values, segFilter);
    `,f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${l});
      }
    `}};function kst(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,segmentIds:s}=t,{numSegments:i}=n,a=o.shape.length,u=[],l=0,c=S.getAxesPermutation([l],a),p=o;c!=null&&(p=Pe({inputs:{x:o},backend:e,attrs:{perm:c}}),u.push(p),l=S.getInnerMostAxes(1,a)[0]);let m=S.segment_util.computeOutShape(p.shape,l,i),f=y.sizeFromShape([p.shape[l]]),d=it({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}});u.push(d);let h=Bu(o.dtype),g=(C,N,_,A,$)=>{let F=C.shape[0],P=C.shape[1],V=S.segment_util.segOpComputeOptimalWindowSize(P,$),G={windowSize:V,inSize:P,batchSize:F,numSegments:$},W=new lI(G,N),q=e.compileAndRun(W,[C,_],A);if(u.push(q),q.shape[1]===$)return q;let H=$k({backend:e,attrs:{start:0,stop:$,step:1,dtype:"float32"}}),K=Dk({inputs:{x:H},backend:e,attrs:{reps:[P/V]}});return u.push(H),u.push(K),g(q,N,K,A,$)},x=g(d,"unsortedSegmentSum",s,h,i),b=it({inputs:{x},backend:e,attrs:{shape:m}}),w=b;if(c!=null){u.push(b);let C=S.getUndoAxesPermutation(c);w=Pe({inputs:{x:w},backend:e,attrs:{perm:C}})}return u.forEach(C=>e.disposeIntermediateTensorInfo(C)),w}var WB={kernelName:Hl,backendName:"webgl",kernelFunc:kst};var Est=[EM,AM,$M,DM,FM,OM,PM,LM,BM,VM,GM,WM,UM,HM,qM,KM,jM,XM,YM,ZM,JM,tz,ez,rz,iz,lz,uz,yM,pz,fz,dz,hz,gz,xz,yz,bz,wz,Cz,Iz,Nz,Tz,kz,Ez,_z,Az,$z,Dz,Rz,Fz,Oz,Pz,Lz,Mz,zz,Bz,Gz,Wz,Uz,Hz,Kz,jz,Xz,Yz,Zz,Jz,Qz,t3,e3,xM,r3,mz,n3,o3,s3,bM,i3,a3,l3,u3,c3,p3,m3,f3,d3,h3,x3,y3,b3,w3,C3,I3,S3,T3,k3,E3,_3,A3,O3,IM,P3,L3,M3,z3,nz,B3,W3,U3,H3,q3,wM,K3,j3,X3,Y3,Z3,oz,$3,J3,Q3,tB,SM,eB,rB,nB,oB,sB,iB,aB,lB,uB,cB,pB,mB,fB,dB,hB,gB,QM,F3,xB,yB,bB,wB,CB,IB,vB,SB,TB,kB,_B,AB,$B,DB,RB,FB,R3,TM,OB,PB,LB,zB,BB,kM,VB,GB,WB,V3];for(let r of Est)Fu(r);var Kt;(function(r){r[r.float32=0]="float32",r[r.int32=1]="int32",r[r.bool=2]="bool",r[r.string=3]="string",r[r.complex64=4]="complex64"})(Kt||(Kt={}));var ku;(function(r){r[r.linear=0]="linear",r[r.relu=1]="relu",r[r.relu6=2]="relu6",r[r.prelu=3]="prelu",r[r.leakyrelu=4]="leakyrelu",r[r.sigmoid=5]="sigmoid",r[r.elu=6]="elu"})(ku||(ku={}));var UB;function _st(r){UB=r.wasm.cwrap(vi,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Ast(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=t;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=n,m=e.dataIdMap.get(o.dataId).id,f=e.dataIdMap.get(s.dataId).id,d=0;if(i!=null){let $=e.dataIdMap.get(i.dataId);if($.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${$.shape.length}.`);d=$.id}let h=a==null?0:e.dataIdMap.get(a.dataId).id,g=ku[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let x=u?o.shape[2]:o.shape[1],b=l?s.shape[1]:s.shape[2],w=Wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)),C=e.makeOutput([...w,x,b],o.dtype),N=e.dataIdMap.get(C.dataId).id,_=new Uint8Array(new Int32Array(o.shape).buffer),A=new Uint8Array(new Int32Array(s.shape).buffer);return UB(m,_,o.shape.length,f,A,s.shape.length,u,l,g,d,h,p||0,N),C}var HB={kernelName:vi,backendName:"wasm",setupFunc:_st,kernelFunc:Ast};function te(r,t){let e;function n(s){e=s.wasm.cwrap(r,null,["number","number","number"])}function o(s){let{backend:i,inputs:{x:a}}=s,u=i.dataIdMap.get(a.dataId).id,l=i.makeOutput(a.shape,t||a.dtype),c=i.dataIdMap.get(l.dataId).id;return y.sizeFromShape(l.shape)===0||e(u,Kt[a.dtype],c),l}return{kernelName:r,backendName:"wasm",setupFunc:n,kernelFunc:o}}var qB=te(li);function le(r,t,e){let n;function o(i){n=i.wasm.cwrap(r,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:a,inputs:u}=i,{a:l,b:c}=u,p=a.dataIdMap.get(l.dataId).id,m=a.dataIdMap.get(c.dataId).id,f=e!=null?e:l.dtype,d=S.assertAndGetBroadcastShape(l.shape,c.shape),h=a.makeOutput(d,f);if(y.sizeFromShape(d)===0)return h;let g=new Uint8Array(new Int32Array(l.shape).buffer),x=new Uint8Array(new Int32Array(c.shape).buffer),b=a.dataIdMap.get(h.dataId).id;return(()=>n(p,g,l.shape.length,m,x,c.shape.length,Kt[l.dtype],b))(),h}return{kernelName:r,backendName:"wasm",setupFunc:o,kernelFunc:s}}var $st=!0,KB=le(Jn,$st);var jB;function Dst(r){jB=r.wasm.cwrap(Vo,null,["array","number","number","number"])}function Rst(r){let{inputs:t,backend:e}=r,n=e.makeOutput(t[0].shape,t[0].dtype);if(y.sizeFromShape(n.shape)===0)return n;let o=t.map(a=>e.dataIdMap.get(a.dataId).id),s=new Uint8Array(new Int32Array(o).buffer),i=e.dataIdMap.get(n.dataId).id;return jB(s,o.length,Kt[n.dtype],i),n}var XB={kernelName:Vo,backendName:"wasm",setupFunc:Dst,kernelFunc:Rst};function Xc(r){let{inputs:{x:t},backend:e}=r;if(t.dtype==="string")return or(e.readSync(t.dataId),t.shape,t.dtype);let n=e.makeOutput(t.shape,t.dtype),o=e.typedArrayFromHeap(t);return e.typedArrayFromHeap(n).set(o),n}var YB={kernelName:po,backendName:"wasm",kernelFunc:Xc};var ZB;function Fst(r){ZB=r.wasm.cwrap(to,null,["number","array","number","number","number","array","number"])}function lo(r){let{inputs:t,backend:e,attrs:n}=r,[o,s]=Pst(t.x.shape,n.perm),i=!0;for(let d=0;d<s.length;d++)s[d]!==d&&(i=!1);let a=Ost(t.x.shape,n.perm),u={dataId:t.x.dataId,shape:o,dtype:t.x.dtype};if(i){let d=Xc({inputs:t,backend:e});return d.shape=a,d}let l=e.makeOutput(a,u.dtype),c=e.dataIdMap.get(u.dataId).id,p=e.dataIdMap.get(l.dataId).id,m=new Uint8Array(new Int32Array(s).buffer),f=new Uint8Array(new Int32Array(u.shape).buffer);return ZB(c,f,u.shape.length,Kt[u.dtype],p,m,s.length),l}function Ost(r,t){let e=new Array(r.length);for(let n=0;n<e.length;n++)e[n]=r[t[n]];return e}function Pst(r,t){let e=[],n=[];for(let o=0;o<r.length;++o)r[o]!==1&&e.push(r[o]),r[t[o]]!==1&&n.push(t[o]);for(let o=0;o<n.length;++o){let s=-1;for(let i=0;i<n.length;++i)n[i]>=o&&(s===-1||n[s]>n[i])&&(s=i);n[s]=o}return[e,n]}var JB={kernelName:to,backendName:"wasm",kernelFunc:lo,setupFunc:Fst};function Cn(r,t,e){let n=r.shape,o=r.shape.length,s=y.parseAxisParam(t,n),i=s,a=S.getAxesPermutation(i,o),u=null,l=!1;if(a!=null){let c=new Array(o);for(let f=0;f<c.length;f++)c[f]=n[a[f]];i=S.getInnerMostAxes(i.length,o),u=lo({inputs:{x:r},attrs:{perm:a},backend:e});let p=e.dataIdMap.get(r.dataId).id;e.dataIdMap.get(u.dataId).id!==p&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}var QB;function Lst(r){QB=r.wasm.cwrap(ca,null,["number, number, number"])}function Mst(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=e,u=t.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Cn(i,o,t);if(f){let w=t.dataIdMap.get(c.dataId).id;l=c,u=w}let d=l.shape.length;S.assertAxesAreInnerMostDims("all",p,d);let[h,g]=S.computeOutAndReduceShapes(l.shape,p),x=y.sizeFromShape(g),b=t.makeOutput(h,i.dtype);if(y.sizeFromShape(l.shape)!==0){let w=t.dataIdMap.get(b.dataId).id;QB(u,x,w)}if(f&&t.disposeData(c.dataId),s){let w=S.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var tV={kernelName:ca,backendName:"wasm",setupFunc:Lst,kernelFunc:Mst};var eV;function zst(r){eV=r.wasm.cwrap(pa,null,["number, number, number"])}function Bst(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=e,u=t.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Cn(i,o,t);if(f){let w=t.dataIdMap.get(c.dataId).id;l=c,u=w}let d=l.shape.length;S.assertAxesAreInnerMostDims("any",p,d);let[h,g]=S.computeOutAndReduceShapes(l.shape,p),x=y.sizeFromShape(g),b=t.makeOutput(h,i.dtype);if(y.sizeFromShape(l.shape)!==0){let w=t.dataIdMap.get(b.dataId).id;eV(u,x,w)}if(f&&t.disposeData(c.dataId),s){let w=S.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var rV={kernelName:pa,backendName:"wasm",setupFunc:zst,kernelFunc:Bst};var nV;function Vst(r){nV=r.wasm.cwrap(Go,null,["number","number","number","number","number"])}function Gst(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o}=n,{x:s}=e,i=t.dataIdMap.get(s.dataId).id,a=i,u=s,{transposed:l,axes:c,inputWasTransposed:p}=Cn(s,o,t);if(p){let x=t.dataIdMap.get(l.dataId).id;x!==i&&(u=l,a=x)}let m=u.shape.slice(0,-1),f=t.makeOutput(m,"int32"),d=t.dataIdMap.get(f.dataId).id,h=y.sizeFromShape(f.shape),g=u.shape[c[0]];return nV(a,Kt[u.dtype],h,g,d),p&&t.disposeData(l.dataId),f}var oV={kernelName:Go,backendName:"wasm",kernelFunc:Gst,setupFunc:Vst};var sV;function Wst(r){sV=r.wasm.cwrap(Wo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ust(r){let{inputs:t,attrs:e,backend:n}=r,o=t.x,s=n.dataIdMap.get(o.dataId).id,{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=e,c=S.computePool2DInfo(o.shape,i,a,1,u,l),p=c.filterHeight,m=c.filterWidth,f=c.padInfo.top,d=c.padInfo.right,h=c.padInfo.bottom,g=c.padInfo.left,x=c.strideHeight,b=c.strideWidth,w=c.inChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(c.dilationWidth!==1||c.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);let C=n.makeOutput(c.outShape,"float32"),N=n.dataIdMap.get(C.dataId).id;return sV(s,o.shape[0],o.shape[1],o.shape[2],p,m,f,d,h,g,x,b,w,N),C}var iV={kernelName:Wo,backendName:"wasm",setupFunc:Wst,kernelFunc:Ust};function cr(r){let{inputs:t,attrs:e}=r,{x:n}=t,{shape:o}=e,s=y.sizeFromShape(n.shape),i=y.inferFromImplicitShape(o,s);return y.assert(s===y.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),r.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var aV={kernelName:gi,backendName:"wasm",kernelFunc:cr};var lV;function Hst(r){lV=r.wasm.cwrap(Uo,null,["number","array","number","number","array","number","number","number","number"])}function qst(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:i,transposeB:a}=n;if(o.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=o.shape.length,l=s.shape.length,c=i?o.shape[u-2]:o.shape[u-1],p=a?s.shape[l-1]:s.shape[l-2],m=i?o.shape[u-1]:o.shape[u-2],f=a?s.shape[l-2]:s.shape[l-1],d=o.shape.slice(0,-2),h=s.shape.slice(0,-2),g=y.sizeFromShape(d),x=y.sizeFromShape(h),w=Wr.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([m,f]);y.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let C=i?[g,c,m]:[g,m,c],N=a?[x,f,p]:[x,p,f],_=cr({inputs:{x:o},backend:e,attrs:{shape:C}}),A=cr({inputs:{x:s},backend:e,attrs:{shape:N}}),$=e.dataIdMap.get(_.dataId).id,F=e.dataIdMap.get(A.dataId).id,P=i?_.shape[2]:_.shape[1],V=a?A.shape[1]:A.shape[2],G=Math.max(g,x),W=e.makeOutput([G,P,V],_.dtype),q=e.dataIdMap.get(W.dataId).id,H=new Uint8Array(new Int32Array(_.shape).buffer),K=new Uint8Array(new Int32Array(A.shape).buffer);return lV($,H,_.shape.length,F,K,A.shape.length,i,a,q),e.disposeData(_.dataId),e.disposeData(A.dataId),W.shape=w,W}var uV={kernelName:Uo,backendName:"wasm",setupFunc:Hst,kernelFunc:qst};function Lo(r){let{inputs:{x:t},attrs:{begin:e,size:n},backend:o}=r,[s,i]=ze.parseSliceParams(t,e,n),a=ze.isSliceContinous(t.shape,s,i),u=o.readSync(t.dataId),l=o.makeOutput(i,t.dtype),c=y.computeStrides(t.shape),p=o.dataIdMap.get(l.dataId);if(a){let d=ze.computeFlatOffset(s,c);return t.dtype==="string"?p.stringBytes=u.slice(d,d+y.sizeFromShape(i)):o.typedArrayFromHeap(l).set(u.subarray(d,d+y.sizeFromShape(i))),l}if(t.dtype==="string"){let d=Rc(u,s,i,t.shape,t.dtype);return p.stringBytes=d,l}let m=o.typedArrayFromHeap(l),f=t.shape.length;if(f===2)Kst(u,c[0],m,s,i);else if(f===3)jst(u,c[0],c[1],m,s,i);else if(f===4)Xst(u,c[0],c[1],c[2],m,s,i);else{let d=Rc(u,s,i,t.shape,t.dtype);m.set(d)}return l}function Kst(r,t,e,n,o){let s=0,i=n[0],a=n[1],u=i+o[0];for(let l=i;l<u;l++){let c=l*t+a;e.set(r.subarray(c,c+o[1]),s),s+=o[1]}}function jst(r,t,e,n,o,s){let i=0,a=o[0],u=o[1],l=o[2],c=a+s[0],p=u+s[1];for(let m=a;m<c;m++)for(let f=u;f<p;f++){let d=m*t+f*e+l;n.set(r.subarray(d,d+s[2]),i),i+=s[2]}}function Xst(r,t,e,n,o,s,i){let a=0,u=s[0],l=s[1],c=s[2],p=u+i[0],m=l+i[1],f=c+i[2],d=s[3];for(let h=u;h<p;h++)for(let g=l;g<m;g++)for(let x=c;x<f;x++){let b=h*t+g*e+x*n+d;o.set(r.subarray(b,b+i[3]),a),a+=i[3]}}var cV={kernelName:yi,backendName:"wasm",kernelFunc:Lo};function Yst(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:i}=n,a=s.reduce((x,b)=>x*b),u=S.getReshaped(o.shape,s,a),l=S.getPermuted(u.length,s.length),c=S.getReshapedPermuted(o.shape,s,a),p=S.getSliceBeginCoords(i,s.length),m=S.getSliceSize(c,i,s.length),f=cr({inputs:{x:o},backend:e,attrs:{shape:u}}),d=lo({inputs:{x:f},backend:e,attrs:{perm:l}}),h=cr({inputs:{x:d},backend:e,attrs:{shape:c}}),g=Lo({inputs:{x:h},backend:e,attrs:{begin:p,size:m}});return e.disposeData(f.dataId),e.disposeData(d.dataId),e.disposeData(f.dataId),g}var pV={kernelName:ui,backendName:"wasm",kernelFunc:Yst};function oi(r){let{inputs:{x:t},attrs:{dtype:e},backend:n}=r,o=n.makeOutput(t.shape,e),s=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(o).set(s),o}var mV={kernelName:uo,backendName:"wasm",kernelFunc:oi};var fV=te(Ho);var dV;function Zst(r){dV=r.wasm.cwrap(co,null,["number","number","number","number"])}function Jst(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:i}=n,a=e.dataIdMap.get(o.dataId).id,u=e.makeOutput(o.shape,o.dtype),l=e.dataIdMap.get(u.dataId).id;return dV(a,s,i,l),u}var hV={kernelName:co,backendName:"wasm",setupFunc:Zst,kernelFunc:Jst};function Rk(r){let{inputs:t,backend:e}=r,n=y.parseAxisParam(r.attrs.axis,t[0].shape)[0],o=t.map(f=>f.shape);S.assertParamsConsistent(o,n);let s=S.computeOutShape(t.map(f=>f.shape),n),i=t.filter(f=>y.sizeFromShape(f.shape)>0);if(i.length===1)return Xc({inputs:{x:i[0]},backend:e});let a=e.makeOutput(s,t[0].dtype);if(y.sizeFromShape(s)===0)return a;if(i[0].dtype==="string"){let f=i.map(w=>{let N=[-1,y.sizeFromShape(w.shape.slice(n))];return cr({inputs:{x:w},backend:e,attrs:{shape:N}})}),d=f.map(w=>({vals:e.readSync(w.dataId),shape:w.shape}));s=S.computeOutShape(f.map(w=>w.shape),1);let h=f[0].shape[0]===1,g=Ac(d,s,t[0].dtype,h),x=S.computeOutShape(i.map(w=>w.shape),n);a.shape=x;let b=e.dataIdMap.get(a.dataId);return b.stringBytes=S.fromStringArrayToUint8(g),f.forEach(w=>e.disposeData(w.dataId)),a}let u=y.sizeFromShape(i[0].shape.slice(0,n)),l=0,c=i.map(f=>{let d=y.sizeFromShape(f.shape.slice(n));return l+=d,d}),p=i.map(f=>e.typedArrayFromHeap(f)),m=e.typedArrayFromHeap(a);for(let f=0;f<u;f++){let d=f*l;for(let h=0;h<p.length;h++){let g=c[h],x=f*g,b=p[h].subarray(x,x+g);m.set(b,d),d+=g}}return a}var gV={kernelName:ci,backendName:"wasm",kernelFunc:Rk};var xV;function Qst(r){xV=r.wasm.cwrap(qo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function tit(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s}=t,i=n.dataIdMap.get(o.dataId).id,a=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:p,dataFormat:m}=e,f=S.convertConv2DDataFormat(m),d=S.computeConv2DInfo(o.shape,s.shape,u,l,c,p,!1,f),h=d.filterHeight,g=d.filterWidth,x=d.padInfo.top,b=d.padInfo.right,w=d.padInfo.bottom,C=d.padInfo.left,N=d.dilationHeight,_=d.dilationWidth,A=d.strideHeight,$=d.strideWidth,F=d.inChannels,P=d.outChannels,V=d.padInfo.type==="SAME"?1:0;if(d.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let G=n.makeOutput(d.outShape,"float32"),W=n.dataIdMap.get(G.dataId).id;return xV(i,o.shape[0],o.shape[1],o.shape[2],a,h,g,x,b,w,C,V,N,_,A,$,F,P,W),G}var yV={kernelName:qo,backendName:"wasm",setupFunc:Qst,kernelFunc:tit};var bV;function eit(r){bV=r.wasm.cwrap(Ko,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function rit(r){let{backend:t,inputs:e,attrs:n}=r,{dy:o,filter:s}=e,{strides:i,pad:a,dataFormat:u,dimRoundingMode:l,inputShape:c}=n,p=1,m=S.convertConv2DDataFormat(u),f=S.computeConv2DInfo(c,s.shape,i,p,a,l,!1,m),{batchSize:d,filterHeight:h,filterWidth:g,inChannels:x,inHeight:b,inWidth:w,outChannels:C,outHeight:N,outWidth:_,strideHeight:A,strideWidth:$}=f,F=h-1-f.padInfo.top,P=g-1-f.padInfo.left,V=f.dataFormat==="channelsLast",G=y.computeStrides(f.inShape),W=y.computeStrides(o.shape),[q,H,K]=y.computeStrides(s.shape),X=G[0],Z=V?G[1]:G[2],et=V?G[2]:1,rt=V?1:G[1],ot=W[0],at=V?W[1]:W[2],nt=V?W[2]:1,st=V?1:W[1],ft=t.makeOutput(f.inShape,"float32"),gt=t.dataIdMap.get(ft.dataId).id,Ct=t.dataIdMap.get(o.dataId).id,$t=t.dataIdMap.get(s.dataId).id;return bV(Ct,$t,d,h,g,b,w,x,N,_,C,A,$,F,P,q,H,K,X,Z,et,rt,ot,at,nt,st,gt),ft}var wV={kernelName:Ko,backendName:"wasm",setupFunc:eit,kernelFunc:rit};var CV=te(jo);var IV=te(Xo);var Fk;(function(r){r[r.bilinear=0]="bilinear",r[r.nearest=1]="nearest"})(Fk||(Fk={}));var vV;function nit(r){vV=r.wasm.cwrap(ya,null,["number","number","number","number","array","number","number","number","number","number"])}function oit(r){let{backend:t,inputs:e,attrs:n}=r,{method:o,extrapolationValue:s,cropSize:i}=n,{image:a,boxes:u,boxInd:l}=e,c=u.shape[0],[p,m]=i,f=[c,p,m,a.shape[3]],d=t.dataIdMap.get(a.dataId),h;a.dtype!=="float32"&&(h=oi({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),d=t.dataIdMap.get(h.dataId));let g=d.id,x=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,w=t.makeOutput(f,"float32"),C=t.dataIdMap.get(w.dataId).id,N=new Uint8Array(new Int32Array(a.shape).buffer);return vV(g,x,b,c,N,p,m,Fk[o],s,C),h!=null&&t.disposeData(h.dataId),w}var SV={kernelName:ya,backendName:"wasm",setupFunc:nit,kernelFunc:oit};var NV;function sit(r){NV=r.wasm.cwrap(xa,null,["number","number","number","number","number","number"])}function iit(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:i,reverse:a}=n,u=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumprod does not support ${o.dtype} tensors in the WASM backend`);let l=S.getAxesPermutation([s],u),c=o;l!==null&&(c=lo({inputs:{x:o},attrs:{perm:l},backend:e}));let p=S.getInnerMostAxes(1,u)[0];S.assertAxesAreInnerMostDims("cumprod",[p],u);let m=e.makeOutput(c.shape,c.dtype),f=c.shape[p],d=e.dataIdMap.get(c.dataId).id,h=e.dataIdMap.get(m.dataId).id;NV(d,i?1:0,a?1:0,f,h,Kt[o.dtype]);let g=m;if(l!==null){let x=S.getUndoAxesPermutation(l);g=lo({inputs:{x:m},attrs:{perm:x},backend:e}),e.disposeData(c.dataId),e.disposeData(m.dataId)}return g}var TV={kernelName:xa,backendName:"wasm",setupFunc:sit,kernelFunc:iit};var kV;function ait(r){kV=r.wasm.cwrap(Yo,null,["number","number","number","number","number","number"])}function lit(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:i,reverse:a}=n,u=o.shape.length;y.assert(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);let l=S.getAxesPermutation([s],u),c=o;l!==null&&(c=lo({inputs:{x:o},attrs:{perm:l},backend:e}));let p=S.getInnerMostAxes(1,u)[0];S.assertAxesAreInnerMostDims("cumsum",[p],u);let m=e.makeOutput(c.shape,c.dtype),f=c.shape[p],d=e.dataIdMap.get(c.dataId).id,h=e.dataIdMap.get(m.dataId).id;kV(d,i?1:0,a?1:0,f,h,Kt[o.dtype]);let g=m;if(l!==null){let x=S.getUndoAxesPermutation(l);g=lo({inputs:{x:m},attrs:{perm:x},backend:e}),e.disposeData(c.dataId),e.disposeData(m.dataId)}return g}var EV={kernelName:Yo,backendName:"wasm",setupFunc:ait,kernelFunc:lit};var _V;function uit(r){_V=r.wasm.cwrap(ba,null,["number","number","number","array","number","array","array","number","number"])}function cit(r){let{backend:t,inputs:e,attrs:n}=r,{x:o}=e,{blockSize:s,dataFormat:i}=n,a=o.shape[0],u=i==="NHWC"?o.shape[1]:o.shape[2],l=i==="NHWC"?o.shape[2]:o.shape[3],c=i==="NHWC"?o.shape[3]:o.shape[1],p=u*s,m=l*s,f=c/(s*s),d=i==="NHWC"?[a,p,m,f]:[a,f,p,m],h=t.makeOutput(d,"float32"),x=t.dataIdMap.get(o.dataId).id,b=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),w=new Uint8Array(new Int32Array(d).buffer),C=new Uint8Array(new Int32Array(y.computeStrides(d)).buffer),N=t.dataIdMap.get(h.dataId).id;return _V(x,s,i==="NHWC"?1:0,b,o.shape.length-1,w,C,d.length,N),h}var AV={kernelName:ba,backendName:"wasm",setupFunc:uit,kernelFunc:cit};var $V;function pit(r){$V=r.wasm.cwrap(Zo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function mit(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s}=t,i=n.dataIdMap.get(o.dataId).id,a=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:p}=e,m=l==null?[1,1]:l,f=S.computeConv2DInfo(o.shape,s.shape,u,m,c,p,!0),d=f.filterHeight,h=f.filterWidth,g=f.padInfo.top,x=f.padInfo.right,b=f.padInfo.bottom,w=f.padInfo.left,C=f.dilationHeight,N=f.dilationWidth,_=f.strideHeight,A=f.strideWidth,$=f.inChannels,F=f.outChannels,P=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let V=n.makeOutput(f.outShape,"float32"),G=n.dataIdMap.get(V.dataId).id;return $V(i,o.shape[0],o.shape[1],o.shape[2],a,d,h,g,x,b,w,P,C,N,_,A,$,F,G),V}var DV={kernelName:Zo,backendName:"wasm",setupFunc:pit,kernelFunc:mit};var RV=te(Qo);var fit=!1,FV=le(Ca,fit,"bool");var OV=te(ts,"float32");function uI(r){let{inputs:t,attrs:e,backend:n}=r,{input:o}=t,{dim:s}=e,i=o.shape.length,a=o.shape.slice(),u=s;return s<0&&(y.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),a.splice(u,0,1),cr({inputs:{x:o},backend:n,attrs:{shape:a}})}var PV={kernelName:pi,backendName:"wasm",kernelFunc:uI};function Ok(r){let{attrs:{shape:t,value:e,dtype:n},backend:o}=r,s=o.makeOutput(t,n);return o.typedArrayFromHeap(s).fill(e),s}var LV={kernelName:Fl,backendName:"wasm",kernelFunc:Ok};var MV;function dit(r){MV=r.wasm.cwrap(va,null,["number","number","number","number","number","number"])}function hit(r){let{inputs:t,backend:e}=r,{image:n}=t,o=e.makeOutput(n.shape,n.dtype),s=e.dataIdMap.get(n.dataId).id,i=e.dataIdMap.get(o.dataId).id,[a,u,l,c]=n.shape;return MV(s,a,u,l,c,i),o}var zV={kernelName:va,backendName:"wasm",kernelFunc:hit,setupFunc:dit};var BV=te(es);var git=!1,VV=le(rs,git);var GV;function xit(r){GV=r.wasm.cwrap(ns,null,["number","number","number","number","number","number","number"])}function yit(r){let{backend:t,inputs:e,attrs:n}=r,{varianceEpsilon:o}=n,{x:s,mean:i,variance:a,offset:u,scale:l}=e,c=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,m=t.dataIdMap.get(a.dataId).id,f=u!=null?t.dataIdMap.get(u.dataId).id:0,d=l!=null?t.dataIdMap.get(l.dataId).id:0,h=t.makeOutput(s.shape,s.dtype);if(y.sizeFromShape(s.shape)===0)return h;let g=t.dataIdMap.get(h.dataId).id;return GV(c,p,m,f,d,o,g),h}var WV={kernelName:ns,backendName:"wasm",setupFunc:xit,kernelFunc:yit};var UV;function bit(r){UV=r.wasm.cwrap(Si,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wit(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=t,{strides:u,pad:l,dilations:c,dataFormat:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=e,h=S.computeConv2DInfo(o.shape,s.shape,u,c,l,m),g=ku[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedConv2D in the wasm backend.`);let x=n.dataIdMap.get(o.dataId).id,b=n.dataIdMap.get(s.dataId).id,w=h.outChannels,C=0;if(i!=null){let nt=n.dataIdMap.get(i.dataId);if(nt.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${nt.shape.length}.`);if(nt.shape[0]!==w)throw new Error(`FusedConv2D bias shape (${nt.shape}) does not match the number of output channels (${w})`);C=nt.id}let N=h.filterHeight,_=h.filterWidth,A=h.padInfo.top,$=h.padInfo.right,F=h.padInfo.bottom,P=h.padInfo.left,V=h.dilationHeight,G=h.dilationWidth,W=h.strideHeight,q=h.strideWidth,H=h.inChannels,K=h.padInfo.type==="SAME"?1:0,X=h.batchSize,Z=h.inHeight,et=h.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let rt=n.makeOutput(h.outShape,"float32"),ot=n.dataIdMap.get(rt.dataId).id,at=a==null?0:n.dataIdMap.get(a.dataId).id;return UV(x,X,Z,et,b,N,_,C,A,$,F,P,K,V,G,W,q,H,w,g,at,d||0,ot),rt}var HV={kernelName:Si,backendName:"wasm",setupFunc:bit,kernelFunc:wit};var qV;function Cit(r){qV=r.wasm.cwrap(Ni,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Iit(r){let{inputs:t,attrs:e,backend:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=t,{strides:u,pad:l,dilations:c,dataFormat:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=e,h=S.computeConv2DInfo(o.shape,s.shape,u,c,l,m,!0),g=ku[f];if(g==null)throw new Error(`${f} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let x=n.dataIdMap.get(o.dataId).id,b=n.dataIdMap.get(s.dataId).id,w=h.outChannels,C=0;if(i!=null){let nt=n.dataIdMap.get(i.dataId);if(nt.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${nt.shape.length}.`);if(nt.shape[0]!==w)throw new Error(`FusedDepthwiseConv2D bias shape (${nt.shape}) does not match the number of output channels (${w})`);C=nt.id}let N=h.filterHeight,_=h.filterWidth,A=h.padInfo.top,$=h.padInfo.right,F=h.padInfo.bottom,P=h.padInfo.left,V=h.dilationHeight,G=h.dilationWidth,W=h.strideHeight,q=h.strideWidth,H=h.inChannels,K=h.padInfo.type==="SAME"?1:0,X=h.batchSize,Z=h.inHeight,et=h.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let rt=n.makeOutput(h.outShape,"float32"),ot=n.dataIdMap.get(rt.dataId).id,at=a==null?0:n.dataIdMap.get(a.dataId).id;return qV(x,X,Z,et,b,N,_,C,A,$,F,P,K,V,G,W,q,H,w,g,at,d||0,ot),rt}var KV={kernelName:Ni,backendName:"wasm",setupFunc:Cit,kernelFunc:Iit};var jV;function vit(r){jV=r.wasm.cwrap(Sa,null,["number","number","number","number","number","number","array","number"])}function Sit(r){let{backend:t,inputs:e}=r,{params:n,indices:o}=e,[s,i,a,u]=xy.prepareAndValidate(n,o),l=t.makeOutput(s,n.dtype);if(i===0)return l;let c=o.shape,p=c[c.length-1],f=t.dataIdMap.get(n.dataId).id,h=t.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),x=t.dataIdMap.get(l.dataId).id;return jV(f,Kt[n.dtype],h,i,p,a,g,x),l}var XV={kernelName:Sa,backendName:"wasm",setupFunc:vit,kernelFunc:Sit};var YV;function Nit(r){YV=r.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Tit(r){let{backend:t,inputs:e,attrs:n}=r,{x:o,indices:s}=e,{axis:i,batchDims:a}=n,u=y.parseAxisParam(i,o.shape)[0],l=t.readSync(s.dataId),c=o.shape[u];for(let F=0;F<l.length;++F){let P=l[F];y.assert(P<=c-1&&P>=0,()=>`GatherV2: the index value ${P} is not in [0, ${c-1}]`)}let p=S.segment_util.collectGatherOpShapeInfo(o,s,u,a),m=cr({inputs:{x:o},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),f=y.sizeFromShape(s.shape),d=cr({inputs:{x:s},attrs:{shape:[p.batchSize,f/p.batchSize]},backend:t}),h=[p.batchSize,p.outerSize,f/p.batchSize,p.sliceSize],g=t.makeOutput(h,o.dtype);if(y.sizeFromShape(o.shape)===0)return g;let x=m.shape.length-1,w=t.dataIdMap.get(m.dataId).id,N=t.dataIdMap.get(d.dataId).id,_=t.dataIdMap.get(g.dataId).id,A=new Uint8Array(new Int32Array(y.computeStrides(m.shape)).buffer),$=new Uint8Array(new Int32Array(y.computeStrides(h)).buffer);return YV(w,Kt[o.dtype],A,x,N,p.batchSize,$,_),t.disposeData(m.dataId),t.disposeData(d.dataId),g.shape=p.outputShape,g}var ZV={kernelName:mi,backendName:"wasm",setupFunc:Nit,kernelFunc:Tit};var kit=!1,JV=le(Na,kit,"bool");var Eit=!1,QV=le(os,Eit,"bool");var tG=te(ss,"bool");var eG;function _it(r){eG=r.wasm.cwrap(is,null,["number","number","number","number"])}function Ait(r){let{inputs:{x:t},attrs:{alpha:e},backend:n}=r,o=n.dataIdMap.get(t.dataId).id,s=n.makeOutput(t.shape,"float32");if(y.sizeFromShape(t.shape)!==0){let i=n.dataIdMap.get(s.dataId).id;eG(o,Kt[t.dtype],e,i)}return s}var rG={kernelName:is,backendName:"wasm",setupFunc:_it,kernelFunc:Ait};var $it=!1,nG=le(Ea,$it,"bool");var Dit=!1,oG=le(_a,Dit,"bool");var sG=te(as);var Rit=!1,iG=le($a,Rit,"bool");var aG=te(Da);var Fit=!1,lG=le(Ra,Fit,"bool");var Oit=!1,uG=le(m1,Oit,"bool");var cG;function Pit(r){cG=r.wasm.cwrap(ls,null,["number","number","number","number"])}function Lit(r){let{backend:t,inputs:e,attrs:n}=r,{reductionIndices:o,keepDims:s}=n,{x:i}=e,u=t.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Cn(i,o,t);if(f){let w=t.dataIdMap.get(c.dataId).id;l=c,u=w}let d=l.shape.length;S.assertAxesAreInnerMostDims("max",p,d);let[h,g]=S.computeOutAndReduceShapes(l.shape,p),x=y.sizeFromShape(g),b=t.makeOutput(h,i.dtype);if(y.sizeFromShape(l.shape)!==0){let w=t.dataIdMap.get(b.dataId).id;cG(u,Kt[i.dtype],x,w)}if(f&&t.disposeData(c.dataId),s){let w=S.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var pG={kernelName:ls,backendName:"wasm",setupFunc:Pit,kernelFunc:Lit};var Mit=!1,mG=le(us,Mit);var fG;function zit(r){fG=r.wasm.cwrap(cs,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Bit(r){let{inputs:t,attrs:e,backend:n}=r,o=t.x,s=n.dataIdMap.get(o.dataId).id;y.assert(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);let{filterSize:i,strides:a,pad:u,dimRoundingMode:l}=e,c=S.computePool2DInfo(o.shape,i,a,1,u,l),p=c.filterHeight,m=c.filterWidth,f=c.padInfo.top,d=c.padInfo.right,h=c.padInfo.bottom,g=c.padInfo.left,x=c.dilationHeight,b=c.dilationWidth,w=c.strideHeight,C=c.strideWidth,N=c.inChannels,_=c.outChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let A=n.makeOutput(c.outShape,"float32"),$=n.dataIdMap.get(A.dataId).id;return fG(s,o.shape[0],o.shape[1],o.shape[2],p,m,f,d,h,g,x,b,w,C,N,_,$),A}var dG={kernelName:cs,backendName:"wasm",setupFunc:zit,kernelFunc:Bit};var hG;function Vit(r){hG=r.wasm.cwrap(ps,null,["number, number, number"])}function Git(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=e,a=t.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Cn(i,o,t),d=p;if(f){let C=t.dataIdMap.get(c.dataId).id;C!==a&&(l=c,u=C,d=S.getInnerMostAxes(d.length,l.shape.length))}S.assertAxesAreInnerMostDims("mean",d,l.shape.length);let[h,g]=S.computeOutAndReduceShapes(l.shape,d),x=y.sizeFromShape(g),b=l;l.dtype!=="float32"&&(b=oi({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);let w=t.makeOutput(h,"float32");if(y.sizeFromShape(l.shape)!==0){let C=t.dataIdMap.get(w.dataId).id;hG(u,x,C)}if(f&&t.disposeData(c.dataId),s){let C=S.expandShapeToKeepDim(w.shape,m);w.shape=C}return l.dtype!=="float32"&&t.disposeData(b.dataId),w}var gG={kernelName:ps,backendName:"wasm",setupFunc:Vit,kernelFunc:Git};var xG;function Wit(r){xG=r.wasm.cwrap(ms,null,["number","number","number","number"])}function Uit(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=e,a=t.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Cn(i,o,t);if(f){let w=t.dataIdMap.get(c.dataId).id;w!==a&&(l=c,u=w)}let d=l.shape.length;S.assertAxesAreInnerMostDims("min",p,d);let[h,g]=S.computeOutAndReduceShapes(l.shape,p),x=y.sizeFromShape(g),b=t.makeOutput(h,l.dtype);if(y.sizeFromShape(l.shape)!==0){let w=t.dataIdMap.get(b.dataId).id;xG(u,Kt[i.dtype],x,w)}if(f&&t.disposeData(c.dataId),s){let w=S.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var yG={kernelName:ms,backendName:"wasm",setupFunc:Wit,kernelFunc:Uit};var Hit=!1,bG=le(fs,Hit);var Pk;(function(r){r[r.reflect=0]="reflect",r[r.symmetric=1]="symmetric"})(Pk||(Pk={}));var wG;function qit(r){wG=r.wasm.cwrap(ds,null,["number","array","number","number","array","array","number","number"])}function Kit(r){let{inputs:{x:t},backend:e,attrs:{paddings:n,mode:o}}=r,s=n.map((d,h)=>d[0]+t.shape[h]+d[1]),i=e.dataIdMap.get(t.dataId).id,a=e.makeOutput(s,t.dtype),u=e.dataIdMap.get(a.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=n.map(d=>d[0]),p=n.map(d=>d[1]),m=new Uint8Array(new Int32Array(c).buffer),f=new Uint8Array(new Int32Array(p).buffer);return wG(i,l,t.shape.length,Kt[t.dtype],m,f,Pk[o],u),a}var CG={kernelName:ds,backendName:"wasm",kernelFunc:Kit,setupFunc:qit};var jit=!0,IG=le(hs,jit);var vG=te(fi);function Fd(r,t){let e=new Int32Array(r.wasm.HEAPU8.buffer,t,4),n=e[0],o=e[1],s=e[2],i=e[3];return r.wasm._free(t),{pSelectedIndices:n,selectedSize:o,pSelectedScores:s,pValidOutputs:i}}var SG;function Xit(r){SG=r.wasm.cwrap(Pa,"number",["number","number","number","number","number"])}function Yit(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i}=n,{boxes:a,scores:u}=e,l=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(u.dataId).id,p=SG(l,c,s,o,i),{pSelectedIndices:m,selectedSize:f,pSelectedScores:d,pValidOutputs:h}=Fd(t,p);return t.wasm._free(d),t.wasm._free(h),t.makeOutput([f],"int32",m)}var NG={kernelName:Pa,backendName:"wasm",setupFunc:Xit,kernelFunc:Yit};var TG;function Zit(r){TG=r.wasm.cwrap(La,"number",["number","number","number","number","number","bool"])}function Jit(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:a}=n,{boxes:u,scores:l}=e,c=t.dataIdMap.get(u.dataId).id,p=t.dataIdMap.get(l.dataId).id,m=TG(c,p,s,o,i,a),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Fd(t,m);t.wasm._free(h);let x=t.makeOutput([d],"int32",f),b=t.makeOutput([],"int32",g);return[x,b]}var kG={kernelName:La,backendName:"wasm",setupFunc:Zit,kernelFunc:Jit};var EG;function Qit(r){EG=r.wasm.cwrap(Ma,"number",["number","number","number","number","number","number"])}function tat(r){let{backend:t,inputs:e,attrs:n}=r,{iouThreshold:o,maxOutputSize:s,scoreThreshold:i,softNmsSigma:a}=n,{boxes:u,scores:l}=e,c=t.dataIdMap.get(u.dataId).id,p=t.dataIdMap.get(l.dataId).id,m=EG(c,p,s,o,i,a),{pSelectedIndices:f,selectedSize:d,pSelectedScores:h,pValidOutputs:g}=Fd(t,m);t.wasm._free(g);let x=t.makeOutput([d],"int32",f),b=t.makeOutput([d],"float32",h);return[x,b]}var _G={kernelName:Ma,backendName:"wasm",setupFunc:Qit,kernelFunc:tat};var eat=!1,AG=le(Oa,eat,"bool");var $G;function rat(r){$G=r.wasm.cwrap(gs,null,["number","number","number","number","number"])}function nat(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:i,onValue:a,offValue:u}=n,l=e.makeOutput([...o.shape,i],s),c=e.dataIdMap.get(l.dataId).id,m=e.dataIdMap.get(o.dataId).id;return $G(m,i,a,u,c),l}var DG={kernelName:gs,backendName:"wasm",setupFunc:rat,kernelFunc:nat};function oat(r){let{inputs:{x:t},backend:e}=r,n=e.makeOutput(t.shape,t.dtype);return e.typedArrayFromHeap(n).fill(1),n}var RG={kernelName:di,backendName:"wasm",kernelFunc:oat};function sat(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return uI({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,i=t[0].dtype;t.forEach(c=>{y.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),y.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],u=t.map(c=>{let p=uI({inputs:{input:c},backend:e,attrs:{dim:o}});return a.push(p),p}),l=Rk({inputs:u,backend:e,attrs:{axis:o}});return a.forEach(c=>e.disposeData(c.dataId)),l}var FG={kernelName:hi,backendName:"wasm",kernelFunc:sat};var OG;function iat(r){OG=r.wasm.cwrap(xs,null,["number","array","number","number","array","array","number","number"])}function aat(r){let{inputs:{x:t},backend:e,attrs:{paddings:n,constantValue:o}}=r,s=n.map((h,g)=>h[0]+t.shape[g]+h[1]);if(y.sizeFromShape(t.shape)===0)return Ok({backend:e,attrs:{shape:s,value:o,dtype:t.dtype}});let i=e.dataIdMap.get(t.dataId).id,a=e.makeOutput(s,t.dtype),l=e.dataIdMap.get(a.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),p=n.map(h=>h[0]),m=n.map(h=>h[1]),f=new Uint8Array(new Int32Array(p).buffer),d=new Uint8Array(new Int32Array(m).buffer);return OG(i,c,t.shape.length,Kt[t.dtype],f,d,o,l),a}var cI={kernelName:xs,backendName:"wasm",kernelFunc:aat,setupFunc:iat};var lat=!1,PG=le(ys,lat);var LG;function uat(r){LG=r.wasm.cwrap(bs,null,["number","number","number"])}function cat(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=e.dataIdMap.get(n.dataId).id,i=e.dataIdMap.get(o.dataId).id,a=s,u=n,l=u;u.dtype!=="float32"&&(l=oi({backend:e,inputs:{x:n},attrs:{dtype:"float32"}}),a=e.dataIdMap.get(l.dataId).id);let c=e.makeOutput(n.shape,"float32"),p=e.dataIdMap.get(c.dataId).id;return LG(a,i,p),u.dtype!=="float32"&&e.disposeData(l.dataId),c}var MG={kernelName:bs,backendName:"wasm",setupFunc:uat,kernelFunc:cat};var zG;function pat(r){zG=r.wasm.cwrap(ws,null,["number","number","number","number"])}function mat(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=e,a=t.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Cn(i,o,t),d=p;if(f){let w=t.dataIdMap.get(c.dataId).id;w!==a&&(l=c,u=w,d=S.getInnerMostAxes(d.length,l.shape.length))}S.assertAxesAreInnerMostDims("prod",d,l.shape.length);let[h,g]=S.computeOutAndReduceShapes(l.shape,d),x=y.sizeFromShape(g),b=t.makeOutput(h,l.dtype);if(y.sizeFromShape(l.shape)!==0){let w=t.dataIdMap.get(b.dataId).id;zG(u,x,Kt[b.dtype],w)}if(f&&t.disposeData(c.dataId),s){let w=S.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var BG={kernelName:ws,backendName:"wasm",setupFunc:pat,kernelFunc:mat};var fat=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:i}=e,a=Dc(n,o,s,i),u=t.makeOutput([a.length],i);return t.typedArrayFromHeap(u).set(a),u},VG={kernelName:Ll,backendName:"wasm",kernelFunc:fat};var dat=!0,GG=le(Jo,dat);var WG=te(Cs);var UG=te(Is);var HG=te(Ns);var qG;function hat(r){qG=r.wasm.cwrap(Ss,null,["number","number","number","number","number","number","number","number","number","number"])}function gat(r){let{backend:t,inputs:e,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,[c,p,m,f]=o.shape,d=[c,u,l,f],h=t.dataIdMap.get(o.dataId),g;h.dtype!=="float32"&&(g=oi({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),h=t.dataIdMap.get(g.dataId));let x=h.id,b=t.makeOutput(d,"float32");if(y.sizeFromShape(o.shape)===0)return b;let w=t.dataIdMap.get(b.dataId).id;return qG(x,c,p,m,f,u,l,s?1:0,i?1:0,w),g!=null&&t.disposeData(g.dataId),b}var KG={kernelName:Ss,backendName:"wasm",setupFunc:hat,kernelFunc:gat};var jG;function xat(r){jG=r.wasm.cwrap(vs,null,["number","number","number","number","number","number","number","number","number","number"])}function yat(r){let{backend:t,inputs:e,attrs:n}=r,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:a}=n,[u,l]=a,[c,p,m,f]=o.shape,d=[c,u,l,f],h=t.makeOutput(d,"float32");if(y.sizeFromShape(o.shape)===0)return h;let g=t.dataIdMap.get(o.dataId),x;g.dtype!=="float32"&&(x=oi({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(x.dataId));let b=g.id,w=t.dataIdMap.get(h.dataId).id;return jG(b,c,p,m,f,u,l,s?1:0,i?1:0,w),x!=null&&t.disposeData(x.dataId),h}var XG={kernelName:vs,backendName:"wasm",setupFunc:xat,kernelFunc:yat};var YG;function bat(r){YG=r.wasm.cwrap(Ts,null,["number","array","number","array","number","number"])}function wat(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n,i=y.parseAxisParam(s,o.shape);if(o.shape.length===0)return Xc({inputs:{x:o},backend:e});let a=e.makeOutput(o.shape,o.dtype),u=e.dataIdMap.get(o.dataId).id,l=e.dataIdMap.get(a.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(o.shape).buffer);YG(u,c,i.length,p,o.shape.length,l);let m=cr({inputs:{x:a},attrs:{shape:o.shape},backend:e});return e.disposeData(a.dataId),m}var ZG={kernelName:Ts,backendName:"wasm",kernelFunc:wat,setupFunc:bat};var JG;function Cat(r){JG=r.wasm.cwrap(ja,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Iat(r){let{inputs:t,backend:e,attrs:n}=r,{image:o}=t,{radians:s,fillValue:i,center:a}=n,u=e.makeOutput(o.shape,o.dtype),l=e.dataIdMap.get(o.dataId).id,c=e.dataIdMap.get(u.dataId).id,[p,m,f,d]=o.shape,[h,g]=S.getImageCenter(a,m,f),x=i===0,b=255,w=typeof i=="number"?[i,i,i,x?0:b]:[...i,b],C=new Uint8Array(new Int32Array(w).buffer);return JG(l,p,m,f,d,s,h,g,C,w.length,c),u}var QG={kernelName:ja,backendName:"wasm",kernelFunc:Iat,setupFunc:Cat};var tW=te(ks);var eW=te(Es);var rW;function vat(r){rW=r.wasm.cwrap(za,null,["number","number","number","number","number","number","array","number","number"])}function Sat(r){let{backend:t,inputs:e,attrs:n}=r,{indices:o,updates:s}=e,{shape:i}=n,a=t.makeOutput(i,s.dtype);if(y.sizeFromShape(i)===0)return a;let{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:m}=mh.calculateShapes(s,o,i),d=t.dataIdMap.get(o.dataId).id,g=t.dataIdMap.get(s.dataId).id,x=new Uint8Array(new Int32Array(p).buffer),b=t.dataIdMap.get(a.dataId).id;return rW(d,g,Kt[s.dtype],u,l,c,x,m,b),a}var nW={kernelName:za,backendName:"wasm",setupFunc:vat,kernelFunc:Sat};var oW;function Nat(r){oW=r.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Tat(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,i=e.dataIdMap.get(n.dataId).id,a=e.dataIdMap.get(o.dataId).id,u=e.dataIdMap.get(s.dataId).id,l=e.makeOutput(o.shape,o.dtype),c=e.dataIdMap.get(l.dataId).id,p=n.shape.length,m=o.shape.length,f=p===0||p>1||m===1?1:y.sizeFromShape(o.shape.slice(1));return oW(i,a,u,f,c),l}var sW={kernelName:xi,backendName:"wasm",kernelFunc:Tat,setupFunc:Nat};var iW;function kat(r){iW=r.wasm.cwrap(As,null,["number","number"])}function Eat(r){let{backend:t,inputs:{x:e}}=r,n=t.dataIdMap.get(e.dataId).id,o=t.makeOutput(e.shape,e.dtype),s=t.dataIdMap.get(o.dataId).id;return y.sizeFromShape(o.shape)===0||iW(n,s),o}var aW={kernelName:"Sigmoid",backendName:"wasm",setupFunc:kat,kernelFunc:Eat};var lW=te(_s);var uW;function _at(r){uW=r.wasm.cwrap(Rs,null,["number","number","number","number"])}function Aat(r){let{backend:t,inputs:{logits:e},attrs:{dim:n}}=r,o=t.dataIdMap.get(e.dataId).id,s=t.makeOutput(e.shape,e.dtype),i=t.dataIdMap.get(s.dataId).id,a=e.shape[n],u=y.sizeFromShape(e.shape)/a;return y.sizeFromShape(s.shape)===0||uW(o,i,a,u),s}var cW={kernelName:Rs,backendName:"wasm",setupFunc:_at,kernelFunc:Aat};function $at(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:i}=n,a=y.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let _=1+s.length;_<o.shape.length;++_)u.push([0,0]);let l=cI.kernelFunc({inputs:{x:o},backend:e,attrs:{paddings:u,constantValue:0}}),c=S.getReshaped(l.shape,s,a,!1),p=S.getPermuted(c.length,s.length,!1),m=S.getReshapedPermuted(l.shape,s,a,!1),h=cr({inputs:{x:l},backend:e,attrs:{shape:c}}),b=lo({inputs:{x:h},backend:e,attrs:{perm:p}}),N=cr({inputs:{x:b},backend:e,attrs:{shape:m}});return e.disposeData(l.dataId),e.disposeData(h.dataId),e.disposeData(b.dataId),N}var pW={kernelName:bi,backendName:"wasm",kernelFunc:$at};var mW;function Dat(r){mW=r.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Rat(r){let{backend:t,inputs:e}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=e,a=n.shape[0],u=n.shape[1],l=t.readSync(s.dataId)[0],c=[a+l,u],p=t.dataIdMap.get(n.dataId).id,m=t.dataIdMap.get(o.dataId).id,f=t.dataIdMap.get(i.dataId).id,d=t.makeOutput(c,n.dtype),h=t.dataIdMap.get(d.dataId).id,g=t.makeOutput(c.slice(0,1),o.dtype),x=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([l],"bool"),w=t.dataIdMap.get(b.dataId).id,C=t.makeOutput([a],n.dtype),N=t.dataIdMap.get(C.dataId).id,_=t.makeOutput([4],"int32"),A=t.dataIdMap.get(_.dataId).id,$=mW(p,m,Kt[o.dtype],a,l,u,f,h,x,w,N,A),F=t.readSync(_.dataId),P;switch(F[0]){case 1:{P=S.getSparseFillEmptyRowsIndicesDenseShapeMismatch(F[1]);break}case 2:{P=S.getSparseFillEmptyRowsNegativeIndexErrorMessage(F[1],F[2]);break}case 3:P=S.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(F[1],F[2],F[3]);break;default:P=""}if(t.disposeData(_.dataId),P)throw t.disposeData(d.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(C.dataId),new Error(P);let V=d,G=g;return $!==c[0]&&(V=Lo({inputs:{x:d},attrs:{begin:0,size:[$,u]},backend:t}),G=Lo({inputs:{x:g},attrs:{begin:0,size:$},backend:t}),t.disposeData(d.dataId),t.disposeData(g.dataId)),[V,G,b,C]}var fW={kernelName:Ml,backendName:"wasm",setupFunc:Dat,kernelFunc:Rat};var dW;function Fat(r){dW=r.wasm.cwrap(Ua,null,["number","number","number","number","number","number","number"])}function Oat(r){let{backend:t,inputs:e}=r,{inputIndices:n,inputShape:o,newShape:s}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(n.dataId).id,a=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(s.dataId).id,l=n.shape[0],c=y.sizeFromShape(s.shape),p=t.makeOutput([l,c],n.dtype),m=t.dataIdMap.get(p.dataId).id,f=t.makeOutput([c],s.dtype),d=t.dataIdMap.get(f.dataId).id,h=t.makeOutput([3],"int32"),g=t.dataIdMap.get(h.dataId).id;dW(i,a,u,l,m,d,g);let x=t.readSync(h.dataId),b;switch(x[0]){case 0:{b=S.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(x[1],x[2]);break}case 1:{b=S.getSparseReshapeNegativeOutputDimErrorMessage(x[1],x[2]);break}case 2:b=S.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let w=Array.from(t.readSync(o.dataId)),C=Array.from(t.readSync(f.dataId));b=S.getSparseReshapeInputOutputMultipleErrorMessage(w,C);break}case 4:{let w=Array.from(t.readSync(o.dataId)),C=Array.from(t.readSync(f.dataId));b=S.getSparseReshapeInputOutputMismatchErrorMessage(w,C);break}default:b=""}if(t.disposeData(h.dataId),b)throw t.disposeData(p.dataId),t.disposeData(f.dataId),new Error(b);return[p,f]}var hW={kernelName:Ua,backendName:"wasm",setupFunc:Fat,kernelFunc:Oat};var gW;function pI(r){gW=r.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function mI(r,t){let{backend:e,inputs:n}=r,{data:o,indices:s,segmentIds:i}=n,a=s.shape[0],u=e.readSync(i.dataId,a-1,a)[0],c=a>0?u+1:0;if(c<0)throw new Error(S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=o.shape.slice();p[0]=c;let m=e.dataIdMap.get(o.dataId).id,f=e.dataIdMap.get(s.dataId).id,d=e.dataIdMap.get(i.dataId).id,h=e.makeOutput(p,o.dtype),g=e.dataIdMap.get(h.dataId).id,x=e.makeOutput([4],"int32"),b=e.dataIdMap.get(x.dataId).id;gW(m,Kt[o.dtype],o.shape[0],f,d,g,b,t,0);let w=e.readSync(x.dataId),C;switch(w[0]){case 0:{C=S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{C=S.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:C=S.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(w[1],w[2]);break;case 3:C=S.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(w[1],w[2],w[3]);break;default:C=""}if(e.disposeData(x.dataId),C)throw e.disposeData(h.dataId),new Error(C);return h}function Pat(r){return mI(r,!0)}var xW={kernelName:zl,backendName:"wasm",setupFunc:pI,kernelFunc:Pat};function Lat(r){return mI(r,!1)}var yW={kernelName:Bl,backendName:"wasm",setupFunc:pI,kernelFunc:Lat};function Mat(r){let{inputs:t,attrs:e,backend:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:i}=e,a=y.parseAxisParam(i,o.shape)[0],u=S.prepareSplitSize(o,s,a),l=new Array(o.shape.length).fill(0),c=o.shape.slice();return u.map(p=>{let m=[...c];m[a]=p;let f=Lo({inputs:{x:o},attrs:{begin:l,size:m},backend:n});return l[a]+=p,f})}var bW={kernelName:wi,backendName:"wasm",kernelFunc:Mat};var wW=te($s);var CW=te(Vl);var zat=!0,IW=le(Fs,zat);var vW;function Bat(r){vW=r.wasm.cwrap(mo,null,["number","number","number","number"])}function Vat(r){let{backend:t,inputs:e,attrs:n}=r,{alpha:o}=n,{x:s}=e,i=t.dataIdMap.get(s.dataId).id,a=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(a.dataId).id;return vW(i,o,Kt[s.dtype],u),a}var SW={kernelName:mo,backendName:"wasm",setupFunc:Bat,kernelFunc:Vat};var NW;function Gat(r){NW=r.wasm.cwrap(Ha,null,["number","array","number","array","array","array","array","array","number","number"])}function Wat(r){let{backend:t,inputs:e,attrs:n}=r,{x:o}=e,{begin:s,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n,{finalShapeSparse:f,finalShape:d,isIdentity:h,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:C}=ze.sliceInfo(o.shape,s,i,a,u,l,c,p,m),N;if(h)N=cr({inputs:{x:o},backend:t,attrs:{shape:d}});else if(g||x){y.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let _=ze.computeOutShape(b,w,C),A=Lo({inputs:{x:o},backend:t,attrs:{begin:b,size:_}});N=cr({inputs:{x:A},backend:t,attrs:{shape:d}}),t.disposeData(A.dataId)}else{let _=t.makeOutput(f,"float32"),A=t.dataIdMap.get(o.dataId).id,$=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),F=new Uint8Array(new Int32Array(b).buffer),P=new Uint8Array(new Int32Array(w).buffer),V=new Uint8Array(new Int32Array(C).buffer),G=new Uint8Array(new Int32Array(f).buffer),W=new Uint8Array(new Int32Array(y.computeStrides(f)).buffer),q=t.dataIdMap.get(_.dataId).id;NW(A,$,o.shape.length,F,P,V,G,W,f.length,q),N=cr({inputs:{x:_},backend:t,attrs:{shape:d}}),t.disposeData(_.dataId)}return N}var TW={kernelName:Ha,backendName:"wasm",setupFunc:Gat,kernelFunc:Wat};function Uat(r){let{backend:t,inputs:e,attrs:n}=r,{data:o,dataSplits:s}=e,{separator:i,nGramWidths:a,leftPad:u,rightPad:l,padWidth:c,preserveShortSequences:p}=n,m=t.readSync(o.dataId),f=t.readSync(s.dataId),[d,h]=Fc(m,f,i,a,u,l,c,p),g=t.makeOutput([d.length],"string"),x=t.dataIdMap.get(g.dataId);x.stringBytes=d;let b=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(b).set(h),[g,b]}var kW={kernelName:Gl,backendName:"wasm",kernelFunc:Uat};function Hat(r){let{backend:t,inputs:e,attrs:n}=r,{input:o,delimiter:s}=e,{skipEmpty:i}=n,a=t.readSync(o.dataId),u=t.readSync(s.dataId),[l,c,p]=Oc(a,u[0],i),m=c.length,f=t.makeOutput([m,2],"int32");t.typedArrayFromHeap(f).set(l);let h=t.makeOutput([m],"string"),g=t.dataIdMap.get(h.dataId);g.stringBytes=c;let x=t.makeOutput([2],"int32");return t.typedArrayFromHeap(x).set(p),[f,h,x]}var EW={kernelName:Wl,backendName:"wasm",kernelFunc:Hat};function qat(r){let{backend:t,inputs:e,attrs:n}=r,{input:o}=e,{numBuckets:s}=n,i=t.readSync(o.dataId),a=Pc(i,s),u=t.makeOutput(o.shape,"int32");return t.typedArrayFromHeap(u).set(a),u}var _W={kernelName:Ul,backendName:"wasm",kernelFunc:qat};var Kat=!0,AW=le(Os,Kat);var $W;function jat(r){$W=r.wasm.cwrap(Ds,null,["number","number","number","number"])}function Xat(r){let{backend:t,inputs:e,attrs:n}=r,{axis:o,keepDims:s}=n,{x:i}=e,a=t.dataIdMap.get(i.dataId).id,u=a,l=i,{transposed:c,axes:p,originalAxes:m,inputWasTransposed:f}=Cn(i,o,t),d=p;if(f){let w=t.dataIdMap.get(c.dataId).id;w!==a&&(l=c,u=w,d=S.getInnerMostAxes(d.length,l.shape.length))}S.assertAxesAreInnerMostDims("sum",d,l.shape.length);let[h,g]=S.computeOutAndReduceShapes(l.shape,d),x=y.sizeFromShape(g),b=t.makeOutput(h,l.dtype);if(y.sizeFromShape(l.shape)!==0){let w=t.dataIdMap.get(b.dataId).id;$W(u,x,Kt[b.dtype],w)}if(f&&t.disposeData(c.dataId),s){let w=S.expandShapeToKeepDim(b.shape,m);b.shape=w}return b}var DW={kernelName:Ds,backendName:"wasm",setupFunc:jat,kernelFunc:Xat};var RW=te(Ps);var FW=te(Ls);var OW;function Yat(r){OW=r.wasm.cwrap(Qn,null,["number","array","number","array","number","number"])}function Zat(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,s=e.dataIdMap.get(o.dataId).id,{reps:i}=n,a=new Array(o.shape.length);for(let m=0;m<a.length;m++)a[m]=o.shape[m]*i[m];let u=new Uint8Array(new Int32Array(o.shape).buffer),l=new Uint8Array(new Int32Array(a).buffer),c=e.makeOutput(a,o.dtype),p=e.dataIdMap.get(c.dataId).id;return OW(s,u,o.shape.length,l,a.length,Kt[c.dtype],p),c}var PW={kernelName:Qn,backendName:"wasm",setupFunc:Yat,kernelFunc:Zat};var LW;function Jat(r){LW=r.wasm.cwrap(qa,null,["number","array","number","number","number","bool","number","number"])}var Qat=({inputs:r,backend:t,attrs:e})=>{let{x:n}=r,{k:o,sorted:s}=e,i=t.dataIdMap.get(n.dataId).id,a=new Uint8Array(new Int32Array(n.shape).buffer),u=n.shape.slice();u[u.length-1]=o;let l=t.makeOutput(u,n.dtype),c=t.dataIdMap.get(l.dataId).id,p=t.makeOutput(u,"int32"),m=t.dataIdMap.get(p.dataId).id;return LW(i,a,n.shape.length,Kt[n.dtype],o,s,c,m),[l,p]},MW={kernelName:qa,backendName:"wasm",setupFunc:Jat,kernelFunc:Qat};var zW;function tlt(r){zW=r.wasm.cwrap(Ka,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function elt(r){let{backend:t,inputs:e,attrs:n}=r,{image:o,transforms:s}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=n,[c,p,m,f]=o.shape,[d,h]=l!=null?l:[p,m],g=[c,d,h,f],x=new Uint8Array(new Int32Array(y.computeStrides(o.shape)).buffer),b=new Uint8Array(new Int32Array(y.computeStrides(g)).buffer),w=t.makeOutput(g,o.dtype),C=t.dataIdMap.get(w.dataId).id,_=t.dataIdMap.get(o.dataId).id,$=t.dataIdMap.get(s.dataId).id,F=i==="nearest"?1:2,P;switch(a){case"constant":P=1;break;case"reflect":P=2;break;case"wrap":P=3;break;case"nearest":P=4;break;default:P=1;break}return zW(_,$,s.shape[0]>1,c,d,h,f,m,p,x,o.shape.length-1,b,g.length-1,F,P,u,C),w}var BW={kernelName:Ka,backendName:"wasm",setupFunc:tlt,kernelFunc:elt};function rlt(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o.shape[s],a=o.shape.length,u=new Array(a-1),l=0;for(let f=0;f<a;f++)f!==s&&(u[l++]=o.shape[f]);let c=new Array(i),p=new Array(a).fill(0),m=o.shape.slice();m[s]=1;for(let f=0;f<c.length;f++)p[s]=f,c[f]=Lo({inputs:{x:o},attrs:{begin:p,size:m},backend:e});return c.map(({dataId:f,dtype:d})=>({dataId:f,dtype:d,shape:u}))}var VW={kernelName:Ci,backendName:"wasm",kernelFunc:rlt};function nlt(r){let{inputs:{x:t},backend:e}=r,n=e.makeOutput(t.shape,t.dtype);return e.typedArrayFromHeap(n).fill(0),n}var GW={kernelName:Ii,backendName:"wasm",kernelFunc:nlt};var olt=[HB,qB,KB,XB,tV,rV,oV,iV,uV,pV,mV,fV,hV,gV,yV,wV,CV,IV,SV,TV,EV,AV,DV,RV,FV,OV,PV,LV,zV,BV,VV,WV,HV,KV,XV,ZV,JV,QV,YB,tG,rG,nG,oG,sG,iG,aG,lG,uG,pG,mG,dG,gG,yG,bG,CG,IG,vG,NG,kG,_G,AG,DG,RG,FG,cI,PG,MG,BG,VG,GG,WG,UG,HG,aV,KG,XG,ZG,QG,tW,eW,nW,sW,aW,lW,cV,cW,pW,fW,hW,xW,yW,bW,wW,CW,IW,SW,TW,kW,EW,_W,AW,DW,RW,FW,PW,MW,BW,JB,VW,GW];for(let r of olt)Fu(r);var Lk=M();Lk.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(r){return!1}});Lk.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Lk.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(r){return!1}});var Uk=El(qW()),JW=El(jW()),Hk=El(XW());var YW=Uk.default||Uk,slt=Hk.default||Hk,pg=class extends zo{constructor(t){super(),this.wasm=t,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(tU),Wk=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new ia(this,Ln())}write(t,e,n){let o={id:this.dataIdNextNumber++};return this.move(o,t,e,n,1),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(t){let e=y.now();return t(),{kernelMs:y.now()-e}}move(t,e,n,o,s){let i=this.dataIdNextNumber++;if(o==="string"){let c=e;this.dataIdMap.set(t,{id:i,stringBytes:c,shape:n,dtype:o,memoryOffset:null,refCount:s});return}let a=y.sizeFromShape(n),u=a*y.bytesPerElement(o),l=this.wasm._malloc(u);this.dataIdMap.set(t,{id:i,memoryOffset:l,shape:n,dtype:o,refCount:s}),this.wasm.tfjs.registerTensor(i,a,l),e!=null&&this.wasm.HEAPU8.set(new Uint8Array(e.buffer,e.byteOffset,u),l)}async read(t){return this.readSync(t)}readSync(t,e,n){let{memoryOffset:o,dtype:s,shape:i,stringBytes:a}=this.dataIdMap.get(t);if(s==="string")return(e==null||e===0)&&(n==null||n>=a.length)?a:a.slice(e,n);e=e||0,n=n||y.sizeFromShape(i);let u=y.bytesPerElement(s),l=this.wasm.HEAPU8.slice(o+e*u,o+n*u);return alt(l.buffer,s)}disposeData(t,e=!1){if(this.dataIdMap.has(t)){let n=this.dataIdMap.get(t);if(n.refCount--,!e&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(t)}return!0}refCount(t){return this.dataIdMap.has(t)?this.dataIdMap.get(t).refCount:0}incRef(t){let e=this.dataIdMap.get(t);e!=null&&e.refCount++}floatPrecision(){return 32}getMemoryOffset(t){return this.dataIdMap.get(t).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(t,e,n){let o;if(n==null)o=this.write(null,t,e);else{let s=this.dataIdNextNumber++;o={id:s},this.dataIdMap.set(o,{id:s,memoryOffset:n,shape:t,dtype:e,refCount:1});let i=y.sizeFromShape(t);this.wasm.tfjs.registerTensor(s,i,n)}return{dataId:o,shape:t,dtype:e}}typedArrayFromHeap({shape:t,dtype:e,dataId:n}){let o=this.wasm.HEAPU8.buffer,{memoryOffset:s}=this.dataIdMap.get(n),i=y.sizeFromShape(t);switch(e){case"float32":return new Float32Array(o,s,i);case"int32":return new Int32Array(o,s,i);case"bool":return new Uint8Array(o,s,i);default:throw new Error(`Unknown dtype ${e}`)}}};function ilt(r){return(t,e)=>(y.fetch(r,{credentials:"same-origin"}).then(n=>{n.ok||t.env.a(`failed to load wasm binary file at '${r}'`),n.arrayBuffer().then(o=>{WebAssembly.instantiate(o,t).then(s=>{e(s.instance,s.module)})})}),{})}function ZW(r,t,e){if(hI!=null)return hI;let n="tfjs-backend-wasm.wasm";return r&&t?n="tfjs-backend-wasm-threaded-simd.wasm":r&&(n="tfjs-backend-wasm-simd.wasm"),ug!=null&&ug[n]!=null?ug[n]:e+n}async function QW(){let[r,t]=await Promise.all([M().getAsync("WASM_HAS_SIMD_SUPPORT"),M().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((e,n)=>{let o={};o.locateFile=(a,u)=>{if(a.endsWith(".worker.js")){let l=JW.wasmWorkerContents.replace(/\n/g,"\\n"),c=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(c)}return a.endsWith(".wasm")?ZW(r,t,lg!=null?lg:u):u+a},qk&&(o.instantiateWasm=ilt(ZW(r,t,lg!=null?lg:"")));let s=!1;o.onAbort=()=>{if(s||cg)return;cg=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let i;t&&r&&hI==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+YW.toString()],{type:"text/javascript"}),i=YW(o)):i=slt(o),i.then(a=>{s=!0,cg=!1;let u=null;a.tfjs={init:a.cwrap("init",null,[]),initWithThreadsCount:a.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:a.cwrap("get_threads_count","number",[]),registerTensor:a.cwrap("register_tensor",null,["number","number","number"]),disposeData:a.cwrap("dispose_data",u,["number"]),dispose:a.cwrap("dispose",u,[])},e({wasm:a})}).catch(n)})}function alt(r,t){switch(t){case"float32":return new Float32Array(r);case"int32":return new Int32Array(r);case"bool":return new Uint8Array(r);default:throw new Error(`Unknown dtype ${t}`)}}var llt=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],hI=null,lg=null,ug={},cg=!1,qk=!1;function ult(r,t=!1){if(B0("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),cg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");hI=r,qk=t}function clt(r,t=!1){if(cg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof r=="string")lg=r;else{ug=r;let e=llt.filter(n=>ug[n]==null);if(e.length>0)throw new Error(`There were no entries found for the following binaries: ${e.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}qk=t}var tU=-1,Wk=-1;function plt(r){tU=r}function mlt(){if(Wk===-1)throw new Error("WASM backend not initialized.");return Wk}var flt="4.2.0";var dlt=2;Yp("wasm",async()=>{let{wasm:r}=await QW();return new pg(r)},dlt);var eU="4.2.0",hlt="4.2.0",glt="4.2.0",xlt="4.2.0",ylt="4.2.0",blt={tfjs:eU,"tfjs-core":eU,"tfjs-converter":hlt,"tfjs-backend-cpu":glt,"tfjs-backend-webgl":xlt,"tfjs-backend-wasm":ylt};export{li as Abs,la as Acos,ua as Acosh,ec as AdadeltaOptimizer,rc as AdagradOptimizer,nc as AdamOptimizer,oc as AdamaxOptimizer,Jn as Add,Vo as AddN,ca as All,pa as Any,Go as ArgMax,_l as ArgMin,ma as Asin,fa as Asinh,da as Atan,ga as Atan2,ha as Atanh,Wo as AvgPool,Al as AvgPool3D,up as AvgPool3DGrad,lp as AvgPoolGrad,pg as BackendWasm,Uo as BatchMatMul,ui as BatchToSpaceND,cp as Bincount,pp as BroadcastArgs,p1 as BroadcastTo,vb as Callback,Py as CallbackList,uo as Cast,Ho as Ceil,co as ClipByValue,mp as Complex,$l as ComplexAbs,ci as Concat,qo as Conv2D,fp as Conv2DBackpropFilter,Ko as Conv2DBackpropInput,Dl as Conv3D,dp as Conv3DBackpropFilterV2,hp as Conv3DBackpropInputV2,jo as Cos,Xo as Cosh,ya as CropAndResize,xa as Cumprod,Yo as Cumsum,My as CustomCallback,ia as DataStorage,gp as DenseBincount,ba as DepthToSpace,Zo as DepthwiseConv2dNative,xp as DepthwiseConv2dNativeBackpropFilter,yp as DepthwiseConv2dNativeBackpropInput,bp as Diag,Rl as Dilation2D,jd as Dilation2DBackpropFilter,Kd as Dilation2DBackpropInput,u0 as ENV,Sb as EarlyStopping,wp as Einsum,Qo as Elu,Cp as EluGrad,Hd as Environment,Ca as Equal,wa as Erf,ts as Exp,pi as ExpandDims,Ia as Expm1,Ip as FFT,Fl as Fill,va as FlipLeftRight,es as Floor,rs as FloorDiv,Xd as FromPixels,ns as FusedBatchNorm,Si as FusedConv2D,Ni as FusedDepthwiseConv2D,Gc as GPGPUContext,Sa as GatherNd,mi as GatherV2,Mh as GraphModel,Na as Greater,os as GreaterEqual,Ly as History,vp as IFFT,po as Identity,Sp as Imag,be as InputSpec,Ta as IsFinite,ka as IsInf,ss as IsNan,zo as KernelBackend,Ol as LRN,Tp as LRNGrad,vh as LayerVariable,Vn as LayersModel,is as LeakyRelu,Ea as Less,_a as LessEqual,Np as LinSpace,as as Log,Aa as Log1p,f1 as LogSoftmax,$a as LogicalAnd,Da as LogicalNot,Ra as LogicalOr,m1 as LogicalXor,Nlt as LowerBound,Su as MathBackendWebGL,ls as Max,cs as MaxPool,Pl as MaxPool3D,Ep as MaxPool3DGrad,kp as MaxPoolGrad,_p as MaxPoolWithArgmax,us as Maximum,ps as Mean,ms as Min,fs as Minimum,ds as MirrorPad,Fa as Mod,sc as MomentumOptimizer,Ap as Multinomial,hs as Multiply,fi as Neg,Pa as NonMaxSuppressionV3,La as NonMaxSuppressionV4,Ma as NonMaxSuppressionV5,Oa as NotEqual,A0 as OP_SCOPE_SUFFIX,gs as OneHot,di as OnesLike,Hr as Optimizer,xh as OptimizerConstructors,hi as Pack,xs as PadV2,Tlt as Pool,ys as Pow,bs as Prelu,ws as Prod,ic as RMSPropOptimizer,kn as RNN,$p as RaggedGather,Dp as RaggedRange,Rp as RaggedTensorToTensor,Ll as Range,w0 as Rank,Fp as Real,Jo as RealDiv,Cs as Reciprocal,Ze as Reduction,Is as Relu,Ns as Relu6,gi as Reshape,Ss as ResizeBilinear,Pp as ResizeBilinearGrad,vs as ResizeNearestNeighbor,Op as ResizeNearestNeighborGrad,Ts as Reverse,ja as RotateWithOffset,ks as Round,Es as Rsqrt,rl as SGDOptimizer,za as ScatterNd,Lp as SearchSorted,xi as Select,Ba as Selu,Xi as Sequential,As as Sigmoid,Ga as Sign,_s as Sin,Va as Sinh,yi as Slice,Rs as Softmax,Wa as Softplus,bi as SpaceToBatchND,Ml as SparseFillEmptyRows,Ua as SparseReshape,zl as SparseSegmentMean,Bl as SparseSegmentSum,Mp as SparseToDense,wi as SplitV,$s as Sqrt,Vl as Square,Fs as SquaredDifference,mo as Step,Ha as StridedSlice,Gl as StringNGrams,Wl as StringSplit,Ul as StringToHashBucketFast,Os as Sub,Ds as Sum,en as SymbolicTensor,Ps as Tan,Ls as Tanh,Ft as Tensor,pe as TensorBuffer,Qn as Tile,qa as TopK,Ka as Transform,to as Transpose,zp as Unique,Ci as Unpack,Hl as UnsortedSegmentSum,klt as UpperBound,Xa as Variable,Ii as ZerosLike,vi as _FusedMatMul,Ee as abs,tx as acos,ex as acosh,Y as add,uE as addN,Jp as all,Gu as any,Ai as argMax,rx as argMin,nx as asin,ox as asinh,sx as atan,ix as atan2,ax as atanh,Zl as avgPool,lx as avgPool3d,lE as backend,S as backend_util,mE as basicLSTMCell,Ri as batchNorm,ux as batchNorm2d,cx as batchNorm3d,px as batchNorm4d,Jl as batchToSpaceND,mx as bincount,Oj as booleanMaskAsync,dE as broadcastArgs,Fi as broadcastTo,Wr as broadcast_util,gy as browser,bt as buffer,jZ as callbacks,J as cast,fx as ceil,vr as clipByValue,an as clone,In as complex,oe as concat,dx as concat1d,hx as concat2d,gx as concat3d,xx as concat4d,j$ as constraints,tm as conv1d,vn as conv2d,rm as conv2dTranspose,yx as conv3d,wx as conv3dTranspose,Flt as copyRegisteredKernels,Ql as cos,nm as cosh,fh as cosineWindow,Uu as cumprod,om as cumsum,cn as customGrad,$R as data,ah as denseBincount,B0 as deprecationWarn,Cx as depthToSpace,Oi as depthwiseConv2d,JZ as deregisterOp,Xl as device_util,hE as diag,Ix as dilation2d,Bct as disableDeprecationWarnings,Nt as dispose,Vct as disposeVariables,ut as div,vx as divNoNan,Sx as dot,nS as dropout,xE as einsum,Pi as elu,zct as enableDebugMode,Mct as enableProdMode,oS as enclosingPowerOfTwo,Ln as engine,M as env,Dr as equal,Nx as erf,Tx as euclideanNorm,sr as exp,ir as expandDims,kx as expm1,Hu as eye,lu as fft,yo as fill,Kct as findBackend,jct as findBackendFactory,Li as floor,Zp as floorDiv,gM as forceHalfFloat,cu as fused,Mi as gather,Hj as gatherND,xy as gather_util,Hct as getBackend,m0 as getGradient,Zd as getKernel,Bg as getKernelsForBackend,mlt as getThreadsCount,ck as gpgpu_util,Bq as grad,Vq as grads,Fe as greater,un as greaterEqual,el as ifft,tu as imag,oo as image,jj as inTopKAsync,X$ as initializers,BS as input,Pr as io,ym as irfft,Ex as isFinite,_x as isInf,Ax as isNaN,De as keep,qr as kernel_impls,ED as layers,eu as leakyRelu,sm as less,Mn as lessEqual,iS as linalg,wE as linspace,q7 as loadGraphModel,K7 as loadGraphModelSync,hD as loadLayersModel,$x as localResponseNormalization,Nr as log,ru as log1p,Fx as logSigmoid,im as logSoftmax,am as logSumExp,Fr as logicalAnd,nu as logicalNot,lm as logicalOr,Ox as logicalXor,j6 as losses,CE as lowerBound,Mt as matMul,uA as math,Sr as max,ou as maxPool,Lx as maxPool3d,IE as maxPoolWithArgmax,Sn as maximum,Ne as mean,oh as memory,vE as meshgrid,_D as metrics,Ja as min,zi as minimum,Mx as mirrorPad,zx as mod,Y8 as model,AD as models,qu as moments,Mj as movingAverage,D as mul,SE as multiRNNCell,NE as multinomial,qt as neg,yh as nextFrame,Qa as norm,Gs as notEqual,Bi as oneHot,fr as ones,wr as onesLike,T as op,TE as outerProduct,pn as pad,kE as pad1d,EE as pad2d,_E as pad3d,AE as pad4d,Bx as pool,ln as pow,iu as prelu,Qg as print,Vx as prod,Gct as profile,$E as raggedGather,DE as raggedRange,RE as raggedTensorToTensor,FE as rand,e_ as randomGamma,Xu as randomNormal,r_ as randomStandardNormal,Vi as randomUniform,Gi as range,Uct as ready,tl as real,Kx as reciprocal,Yp as registerBackend,J8 as registerCallbackConstructor,h1 as registerGradient,Fu as registerKernel,ZZ as registerOp,$D as regularizers,Or as relu,um as relu6,qct as removeBackend,R as reshape,dr as reverse,n_ as reverse1d,o_ as reverse2d,s_ as reverse3d,i_ as reverse4d,uu as rfft,cm as round,pm as rsqrt,pt as scalar,Bj as scatterND,mh as scatter_util,uh as searchSorted,mm as selu,fm as separableConv2d,Z8 as sequential,Q as serialization,j4 as setBackend,Xct as setPlatform,plt as setThreadsCount,ult as setWasmPath,clt as setWasmPaths,ST as setWebGLContext,a_ as setdiff1dAsync,Qr as sigmoid,jx as sign,K6 as signal,dm as sin,hm as sinh,Rt as slice,gm as slice1d,ph as slice2d,xm as slice3d,Yu as slice4d,ze as slice_util,au as softmax,Vs as softplus,su as spaceToBatchND,X6 as sparse,Wj as sparseToDense,q6 as spectral,hr as split,Se as sqrt,zt as square,bm as squaredDifference,zn as squeeze,qe as stack,wo as step,Xx as stridedSlice,Y6 as string,lt as sub,mt as sum,Bu as sumOutType,Yx as tan,Di as tanh,or as tensor,Ke as tensor1d,Ws as tensor2d,Zx as tensor3d,l_ as tensor4d,u_ as tensor5d,c_ as tensor6d,xo as tensor_util,t_ as test_util,B as tidy,Rr as tile,Wct as time,Jx as topk,lc as train,Pt as transpose,wm as truncatedNormal,Qx as unique,Rlt as unregisterGradient,Dlt as unregisterKernel,Cm as unsortedSegmentSum,gr as unstack,lr as upcastType,p_ as upperBound,y as util,Gq as valueAndGrad,Wq as valueAndGrads,ty as variable,Dx as variableGrads,blt as version,pR as version_converter,CA as version_core,Hm as version_layers,flt as version_wasm,hM as version_webgl,g1e as webgl,gd as webgl_util,_e as where,ry as whereAsync,Te as zeros,It as zerosLike};
